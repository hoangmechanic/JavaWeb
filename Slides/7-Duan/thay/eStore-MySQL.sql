-- phpMyAdmin SQL Dump
-- version 4.7.4
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: May 15, 2019 at 12:15 PM
-- Server version: 10.1.29-MariaDB
-- PHP Version: 7.2.0

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `estore`
--

-- --------------------------------------------------------

--
-- Table structure for table `categories`
--

CREATE TABLE `categories` (
  `Id` int(11) NOT NULL,
  `Name` varchar(50) COLLATE utf8_bin NOT NULL,
  `NameVN` varchar(50) COLLATE utf8_bin NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Dumping data for table `categories`
--

INSERT INTO `categories` (`Id`, `Name`, `NameVN`) VALUES
(1000, 'Watches', 'Đồng hồ đeo tay'),
(1001, 'Laptops', 'Máy tính xách tay'),
(1002, 'Digital Cameras', 'Máy ảnh kỹ thuật số'),
(1003, 'Mobiles', 'Điện thoại di động'),
(1004, 'Perfumes', 'Nước hoa'),
(1005, 'Jewels', 'Nữ trang'),
(1006, 'Fashion Boats', 'Nón thời trang'),
(1007, 'Travel Bags', 'Túi xách du lịch');

-- --------------------------------------------------------

--
-- Table structure for table `customers`
--

CREATE TABLE `customers` (
  `Id` varchar(20) COLLATE utf8_bin NOT NULL,
  `Password` varchar(50) COLLATE utf8_bin NOT NULL,
  `Fullname` varchar(50) COLLATE utf8_bin NOT NULL,
  `Email` varchar(50) COLLATE utf8_bin NOT NULL,
  `Photo` varchar(50) COLLATE utf8_bin NOT NULL,
  `Activated` bit(1) NOT NULL,
  `Admin` bit(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Dumping data for table `customers`
--

INSERT INTO `customers` (`Id`, `Password`, `Fullname`, `Email`, `Photo`, `Activated`, `Admin`) VALUES
('ALFKI', 'iloveyou', 'Maria Anders', 'ALFKI@yahoo.com', 'ALFKI.jpg', b'1', b'0'),
('ANATR', 'iloveyou', 'Ana Trujillo', 'ANATR@gmail.com', 'ANATR.jpg', b'0', b'0'),
('ANTON', 'iloveyou', 'Antonio Moreno 2018', 'ANTON@hotmail.com', 'ANTON.jpg', b'1', b'0'),
('AROUT', 'iloveyou', 'Thomas Hardy', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('BERGS', 'iloveyou', 'Christina Berglund', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('BLAUS', 'iloveyou', 'Hanna Moos', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('BLONP', 'iloveyou', 'Frédérique Citeaux', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('BOLID', 'iloveyou', 'Martín Sommer', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('BONAP', 'iloveyou', 'Laurence Lebihan', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('BOTTM', 'iloveyou', 'Elizabeth Lincoln', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('BSBEV', 'iloveyou', 'Victoria Ashworth', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('CACTU', 'iloveyou', 'Patricio Simpson', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('CENTC', 'iloveyou', 'Francisco Chang', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('CHOPS', 'iloveyou', 'Yang Wang', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('COMMI', 'iloveyou', 'Pedro Afonso', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('CONSH', 'iloveyou', 'Elizabeth Brown', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('DRACD', 'iloveyou', 'Sven Ottlieb', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('DUMON', 'iloveyou', 'Janine Labrune', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('EASTC', 'iloveyou', 'Ann Devon', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('ERNSH', 'iloveyou', 'Roland Mendel', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FAMIA', 'iloveyou', 'Aria Cruz', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FISSA', 'iloveyou', 'Diego Roel', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FOLIG', 'iloveyou', 'Martine Rancé', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FOLKO', 'iloveyou', 'Maria Larsson', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FRANK', 'iloveyou', 'Peter Franken', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FRANR', 'iloveyou', 'Carine Schmitt', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FRANS', 'iloveyou', 'Paolo Accorti', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('FURIB', 'iloveyou', 'Lino Rodriguez', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('GALED', 'iloveyou', 'Eduardo Saavedra', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('GODOS', 'iloveyou', 'José Pedro Freyre', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('GOURL', 'iloveyou', 'André Fonseca', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('GREAL', 'iloveyou', 'Howard Snyder', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('GROSR', 'iloveyou', 'Manuel Pereira', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('HANAR', 'iloveyou', 'Mario Pontes', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('HILAA', 'iloveyou', 'Carlos Hernández', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('HUNGC', 'iloveyou', 'Yoshi Latimer', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('HUNGO', 'iloveyou', 'Patricia McKenna', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('ISLAT', 'iloveyou', 'Helen Bennett', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('KOENE', 'iloveyou', 'Philip Cramer', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LACOR', 'iloveyou', 'Daniel Tonini', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LAMAI', 'iloveyou', 'Annette Roulet', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LAUGB', 'iloveyou', 'Yoshi Tannamuri', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LAZYK', 'iloveyou', 'John Steel', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LEHMS', 'iloveyou', 'Renate Messner', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LETSS', 'iloveyou', 'Jaime Yorres', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LILAS', 'iloveyou', 'Carlos González', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LINOD', 'iloveyou', 'Felipe Izquierdo', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('LONEP', 'iloveyou', 'Fran Wilson', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('MAGAA', 'iloveyou', 'Giovanni Rovelli', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('MAISD', 'iloveyou', 'Catherine Dewey', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('MEREP', 'iloveyou', 'Jean Fresnière', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('MORGK', 'iloveyou', 'Alexander Feuer', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('NORTS', 'iloveyou', 'Simon Crowther', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('OCEAN', 'iloveyou', 'Yvonne Moncada', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('OLDWO', 'iloveyou', 'Rene Phillips', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('OTTIK', 'iloveyou', 'Henriette Pfalzheim', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('PARIS', 'iloveyou', 'Marie Bertrand', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('PERIC', 'iloveyou', 'Guillermo Fernández', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('PICCO', 'iloveyou', 'Georg Pipps', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('PRINI', 'iloveyou', 'Isabel de Castro', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('QUEDE', 'iloveyou', 'Bernardo Batista', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('QUEEN', 'iloveyou', 'Lúcia Carvalho', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('QUICK', 'iloveyou', 'Horst Kloss', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('RANCH', 'iloveyou', 'Sergio Gutiérrez', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('RATTC', 'iloveyou', 'Paula Wilson', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('REGGC', 'iloveyou', 'Maurizio Moroni', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('RICAR', 'iloveyou', 'Janete Limeira', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('RICSU', 'iloveyou', 'Michael Holz', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('ROMEY', 'iloveyou', 'Alejandra Camino', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SANTG', 'iloveyou', 'Jonas Bergulfsen', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SAVEA', 'iloveyou', 'Jose Pavarotti', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SEVES', 'iloveyou', 'Hari Kumar', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SIMOB', 'iloveyou', 'Jytte Petersen', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SPECD', 'iloveyou', 'Dominique Perrier', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SPLIR', 'iloveyou', 'Art Braunschweiger', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SUPRD', 'iloveyou', 'Pascale Cartrain', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('SauVT', '123', 'Võ Th? Sáu', 'SauVT@gmail.com', 'SauVT.png', b'0', b'0'),
('THEBI', 'iloveyou', 'Liz Nixon', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('THECR', 'iloveyou', 'Liu Wong', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('TOMSP', 'iloveyou', 'Karin Josephs', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('TORTU', 'iloveyou', 'Miguel Angel Paolino', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('TRADH', 'iloveyou', 'Anabela Domingues', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('TRAIH', 'iloveyou', 'Helvetius Nagy', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('TeoNV', '123', 'Nguy?n V?n Tèo', 'TeoNV@gmail.com', 'User.png', b'0', b'0'),
('VAFFE', 'iloveyou', 'Palle Ibsen', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('VICTE', 'iloveyou', 'Mary Saveley', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('VINET', 'iloveyou', 'Paul Henriot', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('WANDK', 'iloveyou', 'Rita Müller', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('WARTH', 'iloveyou', 'Pirkko Koskitalo', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('WELLI', 'iloveyou', 'Paula Parente', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('WHITC', 'iloveyou', 'Karl Jablonski', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('WILMK', 'iloveyou', 'Matti Karttunen', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0'),
('WOLZA', 'iloveyou', 'Zbyszek Piestrzeniewicz', 'nnghiem@yahoo.com', 'User.jpg', b'0', b'0');

-- --------------------------------------------------------

--
-- Table structure for table `orderdetails`
--

CREATE TABLE `orderdetails` (
  `Id` int(11) NOT NULL,
  `OrderId` int(11) NOT NULL,
  `ProductId` int(11) NOT NULL,
  `UnitPrice` float NOT NULL,
  `Quantity` int(11) NOT NULL,
  `Discount` float NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Dumping data for table `orderdetails`
--

INSERT INTO `orderdetails` (`Id`, `OrderId`, `ProductId`, `UnitPrice`, `Quantity`, `Discount`) VALUES
(100005, 10249, 1051, 42.4, 40, 0),
(100006, 10250, 1041, 7.7, 10, 0),
(100007, 10250, 1051, 42.4, 35, 0),
(100008, 10250, 1065, 16.8, 15, 0),
(100009, 10251, 1022, 16.8, 6, 0),
(100010, 10251, 1057, 15.6, 15, 0),
(100011, 10251, 1065, 16.8, 20, 0),
(100012, 10252, 1020, 64.8, 40, 0),
(100013, 10252, 1033, 2, 25, 0),
(100014, 10252, 1060, 27.2, 40, 0),
(100015, 10253, 1031, 10, 20, 0),
(100016, 10253, 1039, 14.4, 42, 0),
(100017, 10253, 1049, 16, 40, 0),
(100018, 10254, 1024, 3.6, 15, 0),
(100019, 10254, 1055, 19.2, 21, 0),
(100020, 10254, 1074, 8, 21, 0),
(100021, 10255, 1002, 15.2, 20, 0),
(100022, 10255, 1016, 13.9, 35, 0),
(100023, 10255, 1036, 15.2, 25, 0),
(100024, 10255, 1059, 44, 30, 0),
(100025, 10256, 1053, 26.2, 15, 0),
(100026, 10256, 1077, 10.4, 12, 0),
(100027, 10257, 1027, 35.1, 25, 0),
(100028, 10257, 1039, 14.4, 6, 0),
(100029, 10257, 1077, 10.4, 15, 0),
(100030, 10258, 1002, 15.2, 50, 0),
(100032, 10258, 1032, 25.6, 6, 0),
(100033, 10259, 1021, 8, 10, 0),
(100034, 10259, 1037, 20.8, 1, 0),
(100035, 10260, 1041, 7.7, 16, 0),
(100036, 10260, 1057, 15.6, 50, 0),
(100037, 10260, 1062, 39.4, 15, 0),
(100038, 10260, 1070, 12, 21, 0),
(100039, 10261, 1021, 8, 20, 0),
(100040, 10261, 1035, 14.4, 20, 0),
(100042, 10262, 1007, 24, 15, 0),
(100043, 10262, 1056, 30.4, 2, 0),
(100044, 10263, 1016, 13.9, 60, 0),
(100045, 10263, 1024, 3.6, 28, 0),
(100046, 10263, 1030, 20.7, 60, 0),
(100047, 10263, 1074, 8, 36, 0),
(100048, 10264, 1002, 15.2, 35, 0),
(100049, 10264, 1041, 7.7, 25, 0),
(100050, 10265, 1017, 31.2, 30, 0),
(100051, 10265, 1070, 12, 20, 0),
(100052, 10266, 1012, 30.4, 12, 0),
(100053, 10267, 1040, 14.7, 50, 0),
(100054, 10267, 1059, 44, 70, 0),
(100055, 10267, 1076, 14.4, 15, 0),
(100056, 10268, 1029, 99, 10, 0),
(100058, 10269, 1033, 2, 60, 0),
(100060, 10270, 1036, 15.2, 30, 0),
(100061, 10270, 1043, 36.8, 25, 0),
(100062, 10271, 1033, 2, 24, 0),
(100063, 10272, 1020, 64.8, 6, 0),
(100064, 10272, 1031, 10, 40, 0),
(100066, 10273, 1010, 24.8, 24, 0),
(100067, 10273, 1031, 10, 15, 0),
(100068, 10273, 1033, 2, 20, 0),
(100069, 10273, 1040, 14.7, 60, 0),
(100070, 10273, 1076, 14.4, 33, 0),
(100071, 10274, 1071, 17.2, 20, 0),
(100073, 10275, 1024, 3.6, 12, 0),
(100074, 10275, 1059, 44, 6, 0),
(100075, 10276, 1010, 24.8, 15, 0),
(100076, 10276, 1013, 4.8, 10, 0),
(100077, 10277, 1028, 36.4, 20, 0),
(100078, 10277, 1062, 39.4, 12, 0),
(100079, 10278, 1044, 15.5, 16, 0),
(100080, 10278, 1059, 44, 15, 0),
(100081, 10278, 1063, 35.1, 8, 0),
(100082, 10278, 1073, 12, 25, 0),
(100083, 10279, 1017, 31.2, 15, 0),
(100084, 10280, 1024, 3.6, 12, 0),
(100085, 10280, 1055, 19.2, 20, 0),
(100086, 10280, 1075, 6.2, 30, 0),
(100087, 10281, 1019, 7.3, 1, 0),
(100088, 10281, 1024, 3.6, 6, 0),
(100089, 10281, 1035, 14.4, 4, 0),
(100090, 10282, 1030, 20.7, 6, 0),
(100091, 10282, 1057, 15.6, 2, 0),
(100092, 10283, 1015, 12.4, 20, 0),
(100093, 10283, 1019, 7.3, 18, 0),
(100094, 10283, 1060, 27.2, 35, 0),
(100096, 10284, 1027, 35.1, 15, 0),
(100097, 10284, 1044, 15.5, 21, 0),
(100098, 10284, 1060, 27.2, 20, 0),
(100099, 10284, 1067, 11.2, 5, 0),
(100100, 10285, 1001, 14.4, 45, 0),
(100101, 10285, 1040, 14.7, 40, 0),
(100102, 10285, 1053, 26.2, 36, 0),
(100103, 10286, 1035, 14.4, 100, 0),
(100104, 10286, 1062, 39.4, 40, 0),
(100105, 10287, 1016, 13.9, 40, 0),
(100106, 10287, 1034, 11.2, 20, 0),
(100107, 10287, 1046, 9.6, 15, 0),
(100108, 10288, 1054, 5.9, 10, 0),
(100109, 10288, 1068, 10, 3, 0),
(100110, 10289, 1003, 8, 30, 0),
(100111, 10289, 1064, 26.6, 9, 0),
(100113, 10290, 1029, 99, 15, 0),
(100114, 10290, 1049, 16, 15, 0),
(100115, 10290, 1077, 10.4, 10, 0),
(100116, 10291, 1013, 4.8, 20, 0),
(100117, 10291, 1044, 15.5, 24, 0),
(100118, 10291, 1051, 42.4, 2, 0),
(100119, 10292, 1020, 64.8, 20, 0),
(100120, 10293, 1018, 50, 12, 0),
(100121, 10293, 1024, 3.6, 10, 0),
(100122, 10293, 1063, 35.1, 5, 0),
(100123, 10293, 1075, 6.2, 6, 0),
(100124, 10294, 1001, 14.4, 18, 0),
(100125, 10294, 1017, 31.2, 15, 0),
(100126, 10294, 1043, 36.8, 15, 0),
(100127, 10294, 1060, 27.2, 21, 0),
(100128, 10294, 1075, 6.2, 6, 0),
(100129, 10295, 1056, 30.4, 4, 0),
(100131, 10296, 1016, 13.9, 30, 0),
(100132, 10296, 1069, 28.8, 15, 0),
(100133, 10297, 1039, 14.4, 60, 0),
(100135, 10298, 1002, 15.2, 40, 0),
(100136, 10298, 1036, 15.2, 40, 0),
(100137, 10298, 1059, 44, 30, 0),
(100138, 10298, 1062, 39.4, 15, 0),
(100139, 10299, 1019, 7.3, 15, 0),
(100140, 10299, 1070, 12, 20, 0),
(100141, 10300, 1066, 13.6, 30, 0),
(100142, 10300, 1068, 10, 20, 0),
(100143, 10301, 1040, 14.7, 10, 0),
(100144, 10301, 1056, 30.4, 20, 0),
(100145, 10302, 1017, 31.2, 40, 0),
(100146, 10302, 1028, 36.4, 28, 0),
(100147, 10302, 1043, 36.8, 12, 0),
(100148, 10303, 1040, 14.7, 40, 0),
(100149, 10303, 1065, 16.8, 30, 0),
(100150, 10303, 1068, 10, 15, 0),
(100151, 10304, 1049, 16, 30, 0),
(100152, 10304, 1059, 44, 10, 0),
(100153, 10304, 1071, 17.2, 2, 0),
(100154, 10305, 1018, 50, 25, 0),
(100155, 10305, 1029, 99, 25, 0),
(100156, 10305, 1039, 14.4, 30, 0),
(100157, 10306, 1030, 20.7, 10, 0),
(100158, 10306, 1053, 26.2, 10, 0),
(100159, 10306, 1054, 5.9, 5, 0),
(100160, 10307, 1062, 39.4, 10, 0),
(100161, 10307, 1068, 10, 3, 0),
(100162, 10308, 1069, 28.8, 1, 0),
(100163, 10308, 1070, 12, 5, 0),
(100164, 10309, 1004, 17.6, 20, 0),
(100165, 10309, 1006, 20, 30, 0),
(100167, 10309, 1043, 36.8, 20, 0),
(100168, 10309, 1071, 17.2, 3, 0),
(100169, 10310, 1016, 13.9, 10, 0),
(100170, 10310, 1062, 39.4, 5, 0),
(100172, 10311, 1069, 28.8, 7, 0),
(100173, 10312, 1028, 36.4, 4, 0),
(100174, 10312, 1043, 36.8, 24, 0),
(100175, 10312, 1053, 26.2, 20, 0),
(100176, 10312, 1075, 6.2, 10, 0),
(100177, 10313, 1036, 15.2, 12, 0),
(100178, 10314, 1032, 25.6, 40, 0),
(100179, 10314, 1058, 10.6, 30, 0),
(100180, 10314, 1062, 39.4, 25, 0),
(100181, 10315, 1034, 11.2, 14, 0),
(100182, 10315, 1070, 12, 30, 0),
(100183, 10316, 1041, 7.7, 10, 0),
(100184, 10316, 1062, 39.4, 70, 0),
(100185, 10317, 1001, 14.4, 20, 0),
(100186, 10318, 1041, 7.7, 20, 0),
(100187, 10318, 1076, 14.4, 6, 0),
(100188, 10319, 1017, 31.2, 8, 0),
(100189, 10319, 1028, 36.4, 14, 0),
(100190, 10319, 1076, 14.4, 30, 0),
(100191, 10320, 1071, 17.2, 30, 0),
(100192, 10321, 1035, 14.4, 10, 0),
(100193, 10322, 1052, 5.6, 20, 0),
(100194, 10323, 1015, 12.4, 5, 0),
(100195, 10323, 1025, 11.2, 4, 0),
(100196, 10323, 1039, 14.4, 4, 0),
(100197, 10324, 1016, 13.9, 21, 0),
(100198, 10324, 1035, 14.4, 70, 0),
(100199, 10324, 1046, 9.6, 30, 0),
(100200, 10324, 1059, 44, 40, 0),
(100201, 10324, 1063, 35.1, 80, 0),
(100202, 10325, 1006, 20, 6, 0),
(100203, 10325, 1013, 4.8, 12, 0),
(100204, 10325, 1014, 18.6, 9, 0),
(100205, 10325, 1031, 10, 4, 0),
(100207, 10326, 1004, 17.6, 24, 0),
(100208, 10326, 1057, 15.6, 16, 0),
(100209, 10326, 1075, 6.2, 50, 0),
(100210, 10327, 1002, 15.2, 25, 0),
(100212, 10327, 1030, 20.7, 35, 0),
(100213, 10327, 1058, 10.6, 30, 0),
(100214, 10328, 1059, 44, 9, 0),
(100215, 10328, 1065, 16.8, 40, 0),
(100216, 10328, 1068, 10, 10, 0),
(100217, 10329, 1019, 7.3, 10, 0),
(100218, 10329, 1030, 20.7, 8, 0),
(100219, 10329, 1038, 210.8, 20, 0),
(100220, 10329, 1056, 30.4, 12, 0),
(100221, 10330, 1026, 24.9, 50, 0),
(100223, 10331, 1054, 5.9, 15, 0),
(100224, 10332, 1018, 50, 40, 0),
(100226, 10332, 1047, 7.6, 16, 0),
(100227, 10333, 1014, 18.6, 10, 0),
(100228, 10333, 1021, 8, 10, 0),
(100229, 10333, 1071, 17.2, 40, 0),
(100230, 10334, 1052, 5.6, 8, 0),
(100231, 10334, 1068, 10, 10, 0),
(100232, 10335, 1002, 15.2, 7, 0),
(100233, 10335, 1031, 10, 25, 0),
(100234, 10335, 1032, 25.6, 6, 0),
(100235, 10335, 1051, 42.4, 48, 0),
(100236, 10336, 1004, 17.6, 18, 0),
(100237, 10337, 1023, 7.2, 40, 0),
(100238, 10337, 1026, 24.9, 24, 0),
(100239, 10337, 1036, 15.2, 20, 0),
(100240, 10337, 1037, 20.8, 28, 0),
(100242, 10338, 1017, 31.2, 20, 0),
(100243, 10338, 1030, 20.7, 15, 0),
(100244, 10339, 1004, 17.6, 10, 0),
(100245, 10339, 1017, 31.2, 70, 0),
(100246, 10339, 1062, 39.4, 28, 0),
(100247, 10340, 1018, 50, 20, 0),
(100248, 10340, 1041, 7.7, 12, 0),
(100249, 10340, 1043, 36.8, 40, 0),
(100250, 10341, 1033, 2, 8, 0),
(100251, 10341, 1059, 44, 9, 0),
(100252, 10342, 1002, 15.2, 24, 0),
(100253, 10342, 1031, 10, 56, 0),
(100254, 10342, 1036, 15.2, 40, 0),
(100255, 10342, 1055, 19.2, 40, 0),
(100256, 10343, 1064, 26.6, 50, 0),
(100257, 10343, 1068, 10, 4, 0),
(100258, 10343, 1076, 14.4, 15, 0),
(100259, 10344, 1004, 17.6, 35, 0),
(100260, 10344, 1008, 32, 70, 0),
(100261, 10345, 1008, 32, 70, 0),
(100262, 10345, 1019, 7.3, 80, 0),
(100264, 10346, 1017, 31.2, 36, 0),
(100265, 10346, 1056, 30.4, 20, 0),
(100266, 10347, 1025, 11.2, 10, 0),
(100267, 10347, 1039, 14.4, 50, 0),
(100268, 10347, 1040, 14.7, 4, 0),
(100269, 10347, 1075, 6.2, 6, 0),
(100270, 10348, 1001, 14.4, 15, 0),
(100271, 10348, 1023, 7.2, 25, 0),
(100272, 10349, 1054, 5.9, 24, 0),
(100273, 10350, 1050, 13, 15, 0),
(100274, 10350, 1069, 28.8, 18, 0),
(100275, 10351, 1038, 210.8, 20, 0),
(100276, 10351, 1041, 7.7, 13, 0),
(100277, 10351, 1044, 15.5, 77, 0),
(100278, 10351, 1065, 16.8, 10, 0),
(100279, 10352, 1024, 3.6, 10, 0),
(100280, 10352, 1054, 5.9, 20, 0),
(100282, 10353, 1038, 210.8, 50, 0),
(100283, 10354, 1001, 14.4, 12, 0),
(100284, 10354, 1029, 99, 4, 0),
(100285, 10355, 1024, 3.6, 25, 0),
(100286, 10355, 1057, 15.6, 25, 0),
(100287, 10356, 1031, 10, 30, 0),
(100288, 10356, 1055, 19.2, 12, 0),
(100289, 10356, 1069, 28.8, 20, 0),
(100290, 10357, 1010, 24.8, 30, 0),
(100291, 10357, 1026, 24.9, 16, 0),
(100292, 10357, 1060, 27.2, 8, 0),
(100293, 10358, 1024, 3.6, 10, 0),
(100294, 10358, 1034, 11.2, 10, 0),
(100295, 10358, 1036, 15.2, 20, 0),
(100296, 10359, 1016, 13.9, 56, 0),
(100297, 10359, 1031, 10, 70, 0),
(100298, 10359, 1060, 27.2, 80, 0),
(100299, 10360, 1028, 36.4, 30, 0),
(100300, 10360, 1029, 99, 35, 0),
(100301, 10360, 1038, 210.8, 10, 0),
(100302, 10360, 1049, 16, 35, 0),
(100303, 10360, 1054, 5.9, 28, 0),
(100304, 10361, 1039, 14.4, 54, 0),
(100305, 10361, 1060, 27.2, 55, 0),
(100306, 10362, 1025, 11.2, 50, 0),
(100307, 10362, 1051, 42.4, 20, 0),
(100308, 10362, 1054, 5.9, 24, 0),
(100309, 10363, 1031, 10, 20, 0),
(100310, 10363, 1075, 6.2, 12, 0),
(100311, 10363, 1076, 14.4, 12, 0),
(100312, 10364, 1069, 28.8, 30, 0),
(100313, 10364, 1071, 17.2, 5, 0),
(100315, 10366, 1065, 16.8, 5, 0),
(100316, 10366, 1077, 10.4, 5, 0),
(100317, 10367, 1034, 11.2, 36, 0),
(100318, 10367, 1054, 5.9, 18, 0),
(100319, 10367, 1065, 16.8, 15, 0),
(100320, 10367, 1077, 10.4, 7, 0),
(100321, 10368, 1021, 8, 5, 0),
(100322, 10368, 1028, 36.4, 13, 0),
(100323, 10368, 1057, 15.6, 25, 0),
(100324, 10368, 1064, 26.6, 35, 0),
(100325, 10369, 1029, 99, 20, 0),
(100326, 10369, 1056, 30.4, 18, 0),
(100327, 10370, 1001, 14.4, 15, 0),
(100328, 10370, 1064, 26.6, 30, 0),
(100329, 10370, 1074, 8, 20, 0),
(100330, 10371, 1036, 15.2, 6, 0),
(100331, 10372, 1020, 64.8, 12, 0),
(100332, 10372, 1038, 210.8, 40, 0),
(100333, 10372, 1060, 27.2, 70, 0),
(100335, 10373, 1058, 10.6, 80, 0),
(100336, 10373, 1071, 17.2, 50, 0),
(100337, 10374, 1031, 10, 30, 0),
(100338, 10374, 1058, 10.6, 15, 0),
(100339, 10375, 1014, 18.6, 15, 0),
(100340, 10375, 1054, 5.9, 10, 0),
(100341, 10376, 1031, 10, 42, 0),
(100342, 10377, 1028, 36.4, 20, 0),
(100343, 10377, 1039, 14.4, 20, 0),
(100344, 10378, 1071, 17.2, 6, 0),
(100345, 10379, 1041, 7.7, 8, 0),
(100346, 10379, 1063, 35.1, 16, 0),
(100347, 10379, 1065, 16.8, 20, 0),
(100348, 10380, 1030, 20.7, 18, 0),
(100349, 10380, 1053, 26.2, 20, 0),
(100350, 10380, 1060, 27.2, 6, 0),
(100351, 10380, 1070, 12, 30, 0),
(100352, 10381, 1074, 8, 14, 0),
(100354, 10382, 1018, 50, 9, 0),
(100355, 10382, 1029, 99, 14, 0),
(100356, 10382, 1033, 2, 60, 0),
(100357, 10382, 1074, 8, 50, 0),
(100358, 10383, 1013, 4.8, 20, 0),
(100359, 10383, 1050, 13, 15, 0),
(100360, 10383, 1056, 30.4, 20, 0),
(100361, 10384, 1020, 64.8, 28, 0),
(100362, 10384, 1060, 27.2, 15, 0),
(100363, 10385, 1007, 24, 10, 0),
(100364, 10385, 1060, 27.2, 20, 0),
(100365, 10385, 1068, 10, 8, 0),
(100366, 10386, 1024, 3.6, 15, 0),
(100367, 10386, 1034, 11.2, 10, 0),
(100368, 10387, 1024, 3.6, 15, 0),
(100369, 10387, 1028, 36.4, 6, 0),
(100370, 10387, 1059, 44, 12, 0),
(100371, 10387, 1071, 17.2, 15, 0),
(100372, 10388, 1045, 7.6, 15, 0),
(100373, 10388, 1052, 5.6, 20, 0),
(100374, 10388, 1053, 26.2, 40, 0),
(100375, 10389, 1010, 24.8, 16, 0),
(100376, 10389, 1055, 19.2, 15, 0),
(100377, 10389, 1062, 39.4, 20, 0),
(100378, 10389, 1070, 12, 30, 0),
(100379, 10390, 1031, 10, 60, 0),
(100380, 10390, 1035, 14.4, 40, 0),
(100381, 10390, 1046, 9.6, 45, 0),
(100383, 10391, 1013, 4.8, 18, 0),
(100384, 10392, 1069, 28.8, 50, 0),
(100385, 10393, 1002, 15.2, 25, 0),
(100386, 10393, 1014, 18.6, 42, 0),
(100387, 10393, 1025, 11.2, 7, 0),
(100388, 10393, 1026, 24.9, 70, 0),
(100389, 10393, 1031, 10, 32, 0),
(100390, 10394, 1013, 4.8, 10, 0),
(100391, 10394, 1062, 39.4, 10, 0),
(100392, 10395, 1046, 9.6, 28, 0),
(100393, 10395, 1053, 26.2, 70, 0),
(100394, 10395, 1069, 28.8, 8, 0),
(100395, 10396, 1023, 7.2, 40, 0),
(100396, 10396, 1071, 17.2, 60, 0),
(100398, 10397, 1021, 8, 10, 0),
(100399, 10397, 1051, 42.4, 18, 0),
(100400, 10398, 1035, 14.4, 30, 0),
(100401, 10398, 1055, 19.2, 120, 0),
(100402, 10399, 1068, 10, 60, 0),
(100403, 10399, 1071, 17.2, 30, 0),
(100404, 10399, 1076, 14.4, 35, 0),
(100405, 10399, 1077, 10.4, 14, 0),
(100406, 10400, 1029, 99, 21, 0),
(100407, 10400, 1035, 14.4, 35, 0),
(100408, 10400, 1049, 16, 30, 0),
(100409, 10401, 1030, 20.7, 18, 0),
(100410, 10401, 1056, 30.4, 70, 0),
(100411, 10401, 1065, 16.8, 20, 0),
(100412, 10401, 1071, 17.2, 60, 0),
(100413, 10402, 1023, 7.2, 60, 0),
(100414, 10402, 1063, 35.1, 65, 0),
(100415, 10403, 1016, 13.9, 21, 0),
(100416, 10403, 1048, 10.2, 70, 0),
(100417, 10404, 1026, 24.9, 30, 0),
(100419, 10404, 1049, 16, 30, 0),
(100420, 10405, 1003, 8, 50, 0),
(100421, 10406, 1001, 14.4, 10, 0),
(100422, 10406, 1021, 8, 30, 0),
(100423, 10406, 1028, 36.4, 42, 0),
(100424, 10406, 1036, 15.2, 5, 0),
(100425, 10406, 1040, 14.7, 2, 0),
(100427, 10407, 1069, 28.8, 15, 0),
(100428, 10407, 1071, 17.2, 15, 0),
(100429, 10408, 1037, 20.8, 10, 0),
(100430, 10408, 1054, 5.9, 6, 0),
(100431, 10408, 1062, 39.4, 35, 0),
(100432, 10409, 1014, 18.6, 12, 0),
(100433, 10409, 1021, 8, 12, 0),
(100434, 10410, 1033, 2, 49, 0),
(100435, 10410, 1059, 44, 16, 0),
(100436, 10411, 1041, 7.7, 25, 0),
(100437, 10411, 1044, 15.5, 40, 0),
(100438, 10411, 1059, 44, 9, 0),
(100439, 10412, 1014, 18.6, 20, 0),
(100440, 10413, 1001, 14.4, 24, 0),
(100441, 10413, 1062, 39.4, 40, 0),
(100442, 10413, 1076, 14.4, 14, 0),
(100443, 10414, 1019, 7.3, 18, 0),
(100444, 10414, 1033, 2, 50, 0),
(100445, 10415, 1017, 31.2, 2, 0),
(100446, 10415, 1033, 2, 20, 0),
(100447, 10416, 1019, 7.3, 20, 0),
(100448, 10416, 1053, 26.2, 10, 0),
(100449, 10416, 1057, 15.6, 20, 0),
(100450, 10417, 1038, 210.8, 50, 0),
(100451, 10417, 1046, 9.6, 2, 0),
(100452, 10417, 1068, 10, 36, 0),
(100453, 10417, 1077, 10.4, 35, 0),
(100454, 10418, 1002, 15.2, 60, 0),
(100455, 10418, 1047, 7.6, 55, 0),
(100456, 10418, 1061, 22.8, 16, 0),
(100457, 10418, 1074, 8, 15, 0),
(100458, 10419, 1060, 27.2, 60, 0),
(100459, 10419, 1069, 28.8, 20, 0),
(100460, 10420, 1009, 150, 20, 0),
(100461, 10420, 1013, 4.8, 2, 0),
(100462, 10420, 1070, 12, 8, 0),
(100463, 10420, 1073, 12, 20, 0),
(100464, 10421, 1019, 7.3, 4, 0),
(100465, 10421, 1026, 24.9, 30, 0),
(100466, 10421, 1053, 26.2, 15, 0),
(100467, 10421, 1077, 10.4, 10, 0),
(100468, 10422, 1026, 24.9, 2, 0),
(100469, 10423, 1031, 10, 14, 0),
(100470, 10423, 1059, 44, 20, 0),
(100471, 10424, 1035, 14.4, 60, 0),
(100472, 10424, 1038, 210.8, 49, 0),
(100473, 10424, 1068, 10, 30, 0),
(100474, 10425, 1055, 19.2, 10, 0),
(100475, 10425, 1076, 14.4, 20, 0),
(100476, 10426, 1056, 30.4, 5, 0),
(100477, 10426, 1064, 26.6, 7, 0),
(100478, 10427, 1014, 18.6, 35, 0),
(100479, 10428, 1046, 9.6, 20, 0),
(100480, 10429, 1050, 13, 40, 0),
(100481, 10429, 1063, 35.1, 35, 0),
(100482, 10430, 1017, 31.2, 45, 0),
(100483, 10430, 1021, 8, 50, 0),
(100484, 10430, 1056, 30.4, 30, 0),
(100485, 10430, 1059, 44, 70, 0),
(100486, 10431, 1017, 31.2, 50, 0),
(100487, 10431, 1040, 14.7, 50, 0),
(100488, 10431, 1047, 7.6, 30, 0),
(100489, 10432, 1026, 24.9, 10, 0),
(100490, 10432, 1054, 5.9, 40, 0),
(100491, 10433, 1056, 30.4, 28, 0),
(100493, 10434, 1076, 14.4, 18, 0),
(100494, 10435, 1002, 15.2, 10, 0),
(100495, 10435, 1022, 16.8, 12, 0),
(100497, 10436, 1046, 9.6, 5, 0),
(100498, 10436, 1056, 30.4, 40, 0),
(100499, 10436, 1064, 26.6, 30, 0),
(100500, 10436, 1075, 6.2, 24, 0),
(100501, 10437, 1053, 26.2, 15, 0),
(100502, 10438, 1019, 7.3, 15, 0),
(100503, 10438, 1034, 11.2, 20, 0),
(100504, 10438, 1057, 15.6, 15, 0),
(100505, 10439, 1012, 30.4, 15, 0),
(100506, 10439, 1016, 13.9, 16, 0),
(100507, 10439, 1064, 26.6, 6, 0),
(100508, 10439, 1074, 8, 30, 0),
(100509, 10440, 1002, 15.2, 45, 0),
(100510, 10440, 1016, 13.9, 49, 0),
(100511, 10440, 1029, 99, 24, 0),
(100512, 10440, 1061, 22.8, 90, 0),
(100513, 10441, 1027, 35.1, 50, 0),
(100515, 10442, 1054, 5.9, 80, 0),
(100516, 10442, 1066, 13.6, 60, 0),
(100518, 10443, 1028, 36.4, 12, 0),
(100519, 10444, 1017, 31.2, 10, 0),
(100520, 10444, 1026, 24.9, 15, 0),
(100521, 10444, 1035, 14.4, 8, 0),
(100522, 10444, 1041, 7.7, 30, 0),
(100523, 10445, 1039, 14.4, 6, 0),
(100524, 10445, 1054, 5.9, 15, 0),
(100525, 10446, 1019, 7.3, 12, 0),
(100526, 10446, 1024, 3.6, 20, 0),
(100527, 10446, 1031, 10, 3, 0),
(100528, 10446, 1052, 5.6, 15, 0),
(100529, 10447, 1019, 7.3, 40, 0),
(100530, 10447, 1065, 16.8, 35, 0),
(100531, 10447, 1071, 17.2, 2, 0),
(100532, 10448, 1026, 24.9, 6, 0),
(100533, 10448, 1040, 14.7, 20, 0),
(100534, 10449, 1010, 24.8, 14, 0),
(100535, 10449, 1052, 5.6, 20, 0),
(100536, 10449, 1062, 39.4, 35, 0),
(100537, 10450, 1010, 24.8, 20, 0),
(100538, 10450, 1054, 5.9, 6, 0),
(100539, 10451, 1055, 19.2, 120, 0),
(100540, 10451, 1064, 26.6, 35, 0),
(100541, 10451, 1065, 16.8, 28, 0),
(100542, 10451, 1077, 10.4, 55, 0),
(100543, 10452, 1028, 36.4, 15, 0),
(100544, 10452, 1044, 15.5, 100, 0),
(100545, 10453, 1048, 10.2, 15, 0),
(100546, 10453, 1070, 12, 25, 0),
(100547, 10454, 1016, 13.9, 20, 0),
(100548, 10454, 1033, 2, 20, 0),
(100549, 10454, 1046, 9.6, 10, 0),
(100550, 10455, 1039, 14.4, 20, 0),
(100551, 10455, 1053, 26.2, 50, 0),
(100552, 10455, 1061, 22.8, 25, 0),
(100553, 10455, 1071, 17.2, 30, 0),
(100554, 10456, 1021, 8, 40, 0),
(100555, 10456, 1049, 16, 21, 0),
(100556, 10457, 1059, 44, 36, 0),
(100557, 10458, 1026, 24.9, 30, 0),
(100558, 10458, 1028, 36.4, 30, 0),
(100559, 10458, 1043, 36.8, 20, 0),
(100560, 10458, 1056, 30.4, 15, 0),
(100561, 10458, 1071, 17.2, 50, 0),
(100562, 10459, 1007, 24, 16, 0),
(100563, 10459, 1046, 9.6, 20, 0),
(100565, 10460, 1068, 10, 21, 0),
(100566, 10460, 1075, 6.2, 4, 0),
(100567, 10461, 1021, 8, 40, 0),
(100568, 10461, 1030, 20.7, 28, 0),
(100569, 10461, 1055, 19.2, 60, 0),
(100570, 10462, 1013, 4.8, 1, 0),
(100571, 10462, 1023, 7.2, 21, 0),
(100572, 10463, 1019, 7.3, 21, 0),
(100574, 10464, 1004, 17.6, 16, 0),
(100575, 10464, 1043, 36.8, 3, 0),
(100576, 10464, 1056, 30.4, 30, 0),
(100577, 10464, 1060, 27.2, 20, 0),
(100578, 10465, 1024, 3.6, 25, 0),
(100579, 10465, 1029, 99, 18, 0),
(100580, 10465, 1040, 14.7, 20, 0),
(100581, 10465, 1045, 7.6, 30, 0),
(100582, 10465, 1050, 13, 25, 0),
(100584, 10466, 1046, 9.6, 5, 0),
(100585, 10467, 1024, 3.6, 28, 0),
(100586, 10467, 1025, 11.2, 12, 0),
(100587, 10468, 1030, 20.7, 8, 0),
(100588, 10468, 1043, 36.8, 15, 0),
(100589, 10469, 1002, 15.2, 40, 0),
(100590, 10469, 1016, 13.9, 35, 0),
(100591, 10469, 1044, 15.5, 2, 0),
(100592, 10470, 1018, 50, 30, 0),
(100593, 10470, 1023, 7.2, 15, 0),
(100594, 10470, 1064, 26.6, 8, 0),
(100595, 10471, 1007, 24, 30, 0),
(100596, 10471, 1056, 30.4, 20, 0),
(100597, 10472, 1024, 3.6, 80, 0),
(100598, 10472, 1051, 42.4, 18, 0),
(100599, 10473, 1033, 2, 12, 0),
(100600, 10473, 1071, 17.2, 12, 0),
(100601, 10474, 1014, 18.6, 12, 0),
(100602, 10474, 1028, 36.4, 18, 0),
(100603, 10474, 1040, 14.7, 21, 0),
(100604, 10474, 1075, 6.2, 10, 0),
(100605, 10475, 1031, 10, 35, 0),
(100606, 10475, 1066, 13.6, 60, 0),
(100607, 10475, 1076, 14.4, 42, 0),
(100608, 10476, 1055, 19.2, 2, 0),
(100609, 10476, 1070, 12, 12, 0),
(100610, 10477, 1001, 14.4, 15, 0),
(100611, 10477, 1021, 8, 21, 0),
(100612, 10477, 1039, 14.4, 20, 0),
(100613, 10478, 1010, 24.8, 20, 0),
(100614, 10479, 1038, 210.8, 30, 0),
(100615, 10479, 1053, 26.2, 28, 0),
(100616, 10479, 1059, 44, 60, 0),
(100617, 10479, 1064, 26.6, 30, 0),
(100618, 10480, 1047, 7.6, 30, 0),
(100619, 10480, 1059, 44, 12, 0),
(100620, 10481, 1049, 16, 24, 0),
(100621, 10481, 1060, 27.2, 40, 0),
(100622, 10482, 1040, 14.7, 10, 0),
(100623, 10483, 1034, 11.2, 35, 0),
(100624, 10483, 1077, 10.4, 30, 0),
(100625, 10484, 1021, 8, 14, 0),
(100626, 10484, 1040, 14.7, 10, 0),
(100627, 10484, 1051, 42.4, 3, 0),
(100628, 10485, 1002, 15.2, 20, 0),
(100629, 10485, 1003, 8, 20, 0),
(100630, 10485, 1055, 19.2, 30, 0),
(100631, 10485, 1070, 12, 60, 0),
(100633, 10486, 1051, 42.4, 25, 0),
(100634, 10486, 1074, 8, 16, 0),
(100635, 10487, 1019, 7.3, 5, 0),
(100636, 10487, 1026, 24.9, 30, 0),
(100637, 10487, 1054, 5.9, 24, 0),
(100638, 10488, 1059, 44, 30, 0),
(100639, 10488, 1073, 12, 20, 0),
(100641, 10489, 1016, 13.9, 18, 0),
(100642, 10490, 1059, 44, 60, 0),
(100643, 10490, 1068, 10, 30, 0),
(100644, 10490, 1075, 6.2, 36, 0),
(100645, 10491, 1044, 15.5, 15, 0),
(100646, 10491, 1077, 10.4, 7, 0),
(100647, 10492, 1025, 11.2, 60, 0),
(100649, 10493, 1065, 16.8, 15, 0),
(100650, 10493, 1066, 13.6, 10, 0),
(100651, 10493, 1069, 28.8, 10, 0),
(100652, 10494, 1056, 30.4, 30, 0),
(100653, 10495, 1023, 7.2, 10, 0),
(100654, 10495, 1041, 7.7, 20, 0),
(100655, 10495, 1077, 10.4, 5, 0),
(100656, 10496, 1031, 10, 20, 0),
(100657, 10497, 1056, 30.4, 14, 0),
(100659, 10497, 1077, 10.4, 25, 0),
(100660, 10498, 1024, 4.5, 14, 0),
(100661, 10498, 1040, 18.4, 5, 0),
(100663, 10499, 1028, 45.6, 20, 0),
(100664, 10499, 1049, 20, 25, 0),
(100665, 10500, 1015, 15.5, 12, 0),
(100666, 10500, 1028, 45.6, 8, 0),
(100667, 10501, 1054, 7.45, 20, 0),
(100668, 10502, 1045, 9.5, 21, 0),
(100669, 10502, 1053, 32.8, 6, 0),
(100670, 10502, 1067, 14, 30, 0),
(100671, 10503, 1014, 23.25, 70, 0),
(100672, 10503, 1065, 21.05, 20, 0),
(100673, 10504, 1002, 19, 12, 0),
(100674, 10504, 1021, 10, 12, 0),
(100675, 10504, 1053, 32.8, 10, 0),
(100676, 10504, 1061, 28.5, 25, 0),
(100677, 10505, 1062, 49.3, 3, 0),
(100678, 10506, 1025, 14, 18, 0),
(100679, 10506, 1070, 15, 14, 0),
(100680, 10507, 1043, 46, 15, 0),
(100681, 10507, 1048, 12.75, 15, 0),
(100682, 10508, 1013, 6, 10, 0),
(100683, 10508, 1039, 18, 10, 0),
(100684, 10509, 1028, 45.6, 3, 0),
(100685, 10510, 1029, 123.79, 36, 0),
(100686, 10510, 1075, 7.75, 36, 0),
(100687, 10511, 1004, 22, 50, 0),
(100688, 10511, 1007, 30, 50, 0),
(100689, 10511, 1008, 40, 10, 0),
(100690, 10512, 1024, 4.5, 10, 0),
(100691, 10512, 1046, 12, 9, 0),
(100692, 10512, 1047, 9.5, 6, 0),
(100693, 10512, 1060, 34, 12, 0),
(100694, 10513, 1021, 10, 40, 0),
(100695, 10513, 1032, 32, 50, 0),
(100696, 10513, 1061, 28.5, 15, 0),
(100697, 10514, 1020, 81, 39, 0),
(100698, 10514, 1028, 45.6, 35, 0),
(100699, 10514, 1056, 38, 70, 0),
(100700, 10514, 1065, 21.05, 39, 0),
(100701, 10514, 1075, 7.75, 50, 0),
(100702, 10515, 1009, 150, 16, 0),
(100703, 10515, 1016, 17.45, 50, 0),
(100704, 10515, 1027, 43.9, 120, 0),
(100705, 10515, 1033, 2.5, 16, 0),
(100706, 10515, 1060, 34, 84, 0),
(100707, 10516, 1018, 62.5, 25, 0),
(100708, 10516, 1041, 9.65, 80, 0),
(100710, 10517, 1052, 7, 6, 0),
(100711, 10517, 1059, 55, 4, 0),
(100712, 10517, 1070, 15, 6, 0),
(100713, 10518, 1024, 4.5, 5, 0),
(100714, 10518, 1038, 263.5, 15, 0),
(100715, 10518, 1044, 19.45, 9, 0),
(100716, 10519, 1010, 31, 16, 0),
(100717, 10519, 1056, 38, 40, 0),
(100718, 10519, 1060, 34, 10, 0),
(100719, 10520, 1024, 4.5, 8, 0),
(100720, 10520, 1053, 32.8, 5, 0),
(100721, 10521, 1035, 18, 3, 0),
(100722, 10521, 1041, 9.65, 10, 0),
(100723, 10521, 1068, 12.5, 6, 0),
(100724, 10522, 1001, 18, 40, 0),
(100725, 10522, 1008, 40, 24, 0),
(100726, 10522, 1030, 25.89, 20, 0),
(100727, 10522, 1040, 18.4, 25, 0),
(100728, 10523, 1017, 39, 25, 0),
(100729, 10523, 1020, 81, 15, 0),
(100730, 10523, 1037, 26, 18, 0),
(100731, 10523, 1041, 9.65, 6, 0),
(100732, 10524, 1010, 31, 2, 0),
(100733, 10524, 1030, 25.89, 10, 0),
(100734, 10524, 1043, 46, 60, 0),
(100735, 10524, 1054, 7.45, 15, 0),
(100736, 10525, 1036, 19, 30, 0),
(100737, 10525, 1040, 18.4, 15, 0),
(100738, 10526, 1001, 18, 8, 0),
(100739, 10526, 1013, 6, 10, 0),
(100740, 10526, 1056, 38, 30, 0),
(100741, 10527, 1004, 22, 50, 0),
(100742, 10527, 1036, 19, 30, 0),
(100744, 10528, 1033, 2.5, 8, 0),
(100746, 10529, 1055, 24, 14, 0),
(100747, 10529, 1068, 12.5, 20, 0),
(100748, 10529, 1069, 36, 10, 0),
(100749, 10530, 1017, 39, 40, 0),
(100750, 10530, 1043, 46, 25, 0),
(100751, 10530, 1061, 28.5, 20, 0),
(100752, 10530, 1076, 18, 50, 0),
(100753, 10531, 1059, 55, 2, 0),
(100754, 10532, 1030, 25.89, 15, 0),
(100755, 10532, 1066, 17, 24, 0),
(100756, 10533, 1004, 22, 50, 0),
(100758, 10533, 1073, 15, 24, 0),
(100759, 10534, 1030, 25.89, 10, 0),
(100760, 10534, 1040, 18.4, 10, 0),
(100761, 10534, 1054, 7.45, 10, 0),
(100763, 10535, 1040, 18.4, 10, 0),
(100764, 10535, 1057, 19.5, 5, 0),
(100765, 10535, 1059, 55, 15, 0),
(100766, 10536, 1012, 38, 15, 0),
(100767, 10536, 1031, 12.5, 20, 0),
(100768, 10536, 1033, 2.5, 30, 0),
(100769, 10536, 1060, 34, 35, 0),
(100770, 10537, 1031, 12.5, 30, 0),
(100771, 10537, 1051, 53, 6, 0),
(100772, 10537, 1058, 13.25, 20, 0),
(100774, 10537, 1073, 15, 9, 0),
(100775, 10538, 1070, 15, 7, 0),
(100777, 10539, 1013, 6, 8, 0),
(100778, 10539, 1021, 10, 15, 0),
(100779, 10539, 1033, 2.5, 15, 0),
(100780, 10539, 1049, 20, 6, 0),
(100781, 10540, 1003, 10, 60, 0),
(100782, 10540, 1026, 31.23, 40, 0),
(100783, 10540, 1038, 263.5, 30, 0),
(100784, 10540, 1068, 12.5, 35, 0),
(100785, 10541, 1024, 4.5, 35, 0),
(100786, 10541, 1038, 263.5, 4, 0),
(100787, 10541, 1065, 21.05, 36, 0),
(100788, 10541, 1071, 21.5, 9, 0),
(100790, 10542, 1054, 7.45, 24, 0),
(100791, 10543, 1012, 38, 30, 0),
(100792, 10543, 1023, 9, 70, 0),
(100793, 10544, 1028, 45.6, 7, 0),
(100794, 10544, 1067, 14, 7, 0),
(100796, 10546, 1007, 30, 10, 0),
(100797, 10546, 1035, 18, 30, 0),
(100798, 10546, 1062, 49.3, 40, 0),
(100799, 10547, 1032, 32, 24, 0),
(100800, 10547, 1036, 19, 60, 0),
(100801, 10548, 1034, 14, 10, 0),
(100802, 10548, 1041, 9.65, 14, 0),
(100803, 10549, 1031, 12.5, 55, 0),
(100804, 10549, 1045, 9.5, 100, 0),
(100805, 10549, 1051, 53, 48, 0),
(100806, 10550, 1017, 39, 8, 0),
(100807, 10550, 1019, 9.2, 10, 0),
(100808, 10550, 1021, 10, 6, 0),
(100809, 10550, 1061, 28.5, 10, 0),
(100810, 10551, 1016, 17.45, 40, 0),
(100811, 10551, 1035, 18, 20, 0),
(100812, 10551, 1044, 19.45, 40, 0),
(100813, 10552, 1069, 36, 18, 0),
(100814, 10552, 1075, 7.75, 30, 0),
(100816, 10553, 1016, 17.45, 14, 0),
(100817, 10553, 1022, 21, 24, 0),
(100818, 10553, 1031, 12.5, 30, 0),
(100819, 10553, 1035, 18, 6, 0),
(100820, 10554, 1016, 17.45, 30, 0),
(100821, 10554, 1023, 9, 20, 0),
(100822, 10554, 1062, 49.3, 20, 0),
(100823, 10554, 1077, 13, 10, 0),
(100824, 10555, 1014, 23.25, 30, 0),
(100825, 10555, 1019, 9.2, 35, 0),
(100826, 10555, 1024, 4.5, 18, 0),
(100827, 10555, 1051, 53, 20, 0),
(100828, 10555, 1056, 38, 40, 0),
(100830, 10557, 1064, 33.25, 30, 0),
(100831, 10557, 1075, 7.75, 20, 0),
(100832, 10558, 1047, 9.5, 25, 0),
(100833, 10558, 1051, 53, 20, 0),
(100834, 10558, 1052, 7, 30, 0),
(100835, 10558, 1053, 32.8, 18, 0),
(100836, 10558, 1073, 15, 3, 0),
(100837, 10559, 1041, 9.65, 12, 0),
(100838, 10559, 1055, 24, 18, 0),
(100839, 10560, 1030, 25.89, 20, 0),
(100840, 10560, 1062, 49.3, 15, 0),
(100841, 10561, 1044, 19.45, 10, 0),
(100842, 10561, 1051, 53, 50, 0),
(100843, 10562, 1033, 2.5, 20, 0),
(100844, 10562, 1062, 49.3, 10, 0),
(100845, 10563, 1036, 19, 25, 0),
(100846, 10563, 1052, 7, 70, 0),
(100847, 10564, 1017, 39, 16, 0),
(100848, 10564, 1031, 12.5, 6, 0),
(100849, 10564, 1055, 24, 25, 0),
(100850, 10565, 1024, 4.5, 25, 0),
(100851, 10565, 1064, 33.25, 18, 0),
(100853, 10566, 1018, 62.5, 18, 0),
(100854, 10566, 1076, 18, 10, 0),
(100855, 10567, 1031, 12.5, 60, 0),
(100856, 10567, 1051, 53, 3, 0),
(100857, 10567, 1059, 55, 40, 0),
(100858, 10568, 1010, 31, 5, 0),
(100859, 10569, 1031, 12.5, 35, 0),
(100860, 10569, 1076, 18, 30, 0),
(100862, 10570, 1056, 38, 60, 0),
(100863, 10571, 1014, 23.25, 11, 0),
(100865, 10572, 1016, 17.45, 12, 0),
(100866, 10572, 1032, 32, 10, 0),
(100867, 10572, 1040, 18.4, 50, 0),
(100868, 10572, 1075, 7.75, 15, 0),
(100869, 10573, 1017, 39, 18, 0),
(100870, 10573, 1034, 14, 40, 0),
(100871, 10573, 1053, 32.8, 25, 0),
(100872, 10574, 1033, 2.5, 14, 0),
(100873, 10574, 1040, 18.4, 2, 0),
(100874, 10574, 1062, 49.3, 10, 0),
(100875, 10574, 1064, 33.25, 6, 0),
(100876, 10575, 1059, 55, 12, 0),
(100877, 10575, 1063, 43.9, 6, 0),
(100879, 10575, 1076, 18, 10, 0),
(100880, 10576, 1001, 18, 10, 0),
(100881, 10576, 1031, 12.5, 20, 0),
(100882, 10576, 1044, 19.45, 21, 0),
(100883, 10577, 1039, 18, 10, 0),
(100884, 10577, 1075, 7.75, 20, 0),
(100885, 10577, 1077, 13, 18, 0),
(100886, 10578, 1035, 18, 20, 0),
(100887, 10578, 1057, 19.5, 6, 0),
(100888, 10579, 1015, 15.5, 10, 0),
(100889, 10579, 1075, 7.75, 21, 0),
(100890, 10580, 1014, 23.25, 15, 0),
(100891, 10580, 1041, 9.65, 9, 0),
(100892, 10580, 1065, 21.05, 30, 0),
(100893, 10581, 1075, 7.75, 50, 0),
(100894, 10582, 1057, 19.5, 4, 0),
(100895, 10582, 1076, 18, 14, 0),
(100896, 10583, 1029, 123.79, 10, 0),
(100897, 10583, 1060, 34, 24, 0),
(100898, 10583, 1069, 36, 10, 0),
(100899, 10584, 1031, 12.5, 50, 0),
(100900, 10585, 1047, 9.5, 15, 0),
(100901, 10586, 1052, 7, 4, 0),
(100902, 10587, 1026, 31.23, 6, 0),
(100903, 10587, 1035, 18, 20, 0),
(100904, 10587, 1077, 13, 20, 0),
(100905, 10588, 1018, 62.5, 40, 0),
(100907, 10589, 1035, 18, 4, 0),
(100908, 10590, 1001, 18, 20, 0),
(100909, 10590, 1077, 13, 60, 0),
(100910, 10591, 1003, 10, 14, 0),
(100911, 10591, 1007, 30, 10, 0),
(100912, 10591, 1054, 7.45, 50, 0),
(100913, 10592, 1015, 15.5, 25, 0),
(100914, 10592, 1026, 31.23, 5, 0),
(100915, 10593, 1020, 81, 21, 0),
(100916, 10593, 1069, 36, 20, 0),
(100917, 10593, 1076, 18, 4, 0),
(100918, 10594, 1052, 7, 24, 0),
(100919, 10594, 1058, 13.25, 30, 0),
(100920, 10595, 1035, 18, 30, 0),
(100921, 10595, 1061, 28.5, 120, 0),
(100922, 10595, 1069, 36, 65, 0),
(100923, 10596, 1056, 38, 5, 0),
(100924, 10596, 1063, 43.9, 24, 0),
(100925, 10596, 1075, 7.75, 30, 0),
(100926, 10597, 1024, 4.5, 35, 0),
(100927, 10597, 1057, 19.5, 20, 0),
(100928, 10597, 1065, 21.05, 12, 0),
(100929, 10598, 1027, 43.9, 50, 0),
(100930, 10598, 1071, 21.5, 9, 0),
(100931, 10599, 1062, 49.3, 10, 0),
(100932, 10600, 1054, 7.45, 4, 0),
(100933, 10600, 1073, 15, 30, 0),
(100934, 10601, 1013, 6, 60, 0),
(100935, 10601, 1059, 55, 35, 0),
(100936, 10602, 1077, 13, 5, 0),
(100937, 10603, 1022, 21, 48, 0),
(100938, 10603, 1049, 20, 25, 0),
(100939, 10604, 1048, 12.75, 6, 0),
(100940, 10604, 1076, 18, 10, 0),
(100941, 10605, 1016, 17.45, 30, 0),
(100942, 10605, 1059, 55, 20, 0),
(100943, 10605, 1060, 34, 70, 0),
(100944, 10605, 1071, 21.5, 15, 0),
(100945, 10606, 1004, 22, 20, 0),
(100946, 10606, 1055, 24, 20, 0),
(100947, 10606, 1062, 49.3, 10, 0),
(100948, 10607, 1007, 30, 45, 0),
(100949, 10607, 1017, 39, 100, 0),
(100950, 10607, 1033, 2.5, 14, 0),
(100951, 10607, 1040, 18.4, 42, 0),
(100953, 10608, 1056, 38, 28, 0),
(100954, 10609, 1001, 18, 3, 0),
(100955, 10609, 1010, 31, 10, 0),
(100956, 10609, 1021, 10, 6, 0),
(100957, 10610, 1036, 19, 21, 0),
(100958, 10611, 1001, 18, 6, 0),
(100959, 10611, 1002, 19, 10, 0),
(100960, 10611, 1060, 34, 15, 0),
(100961, 10612, 1010, 31, 70, 0),
(100962, 10612, 1036, 19, 55, 0),
(100963, 10612, 1049, 20, 18, 0),
(100964, 10612, 1060, 34, 40, 0),
(100965, 10612, 1076, 18, 80, 0),
(100966, 10613, 1013, 6, 8, 0),
(100967, 10613, 1075, 7.75, 40, 0),
(100969, 10614, 1021, 10, 8, 0),
(100970, 10614, 1039, 18, 5, 0),
(100971, 10615, 1055, 24, 5, 0),
(100972, 10616, 1038, 263.5, 15, 0),
(100973, 10616, 1056, 38, 14, 0),
(100974, 10616, 1070, 15, 15, 0),
(100975, 10616, 1071, 21.5, 15, 0),
(100976, 10617, 1059, 55, 30, 0),
(100977, 10618, 1006, 25, 70, 0),
(100978, 10618, 1056, 38, 20, 0),
(100979, 10618, 1068, 12.5, 15, 0),
(100980, 10619, 1021, 10, 42, 0),
(100981, 10619, 1022, 21, 40, 0),
(100982, 10620, 1024, 4.5, 5, 0),
(100983, 10620, 1052, 7, 5, 0),
(100984, 10621, 1019, 9.2, 5, 0),
(100985, 10621, 1023, 9, 10, 0),
(100986, 10621, 1070, 15, 20, 0),
(100987, 10621, 1071, 21.5, 15, 0),
(100988, 10622, 1002, 19, 20, 0),
(100989, 10622, 1068, 12.5, 18, 0),
(100990, 10623, 1014, 23.25, 21, 0),
(100991, 10623, 1019, 9.2, 15, 0),
(100992, 10623, 1021, 10, 25, 0),
(100993, 10623, 1024, 4.5, 3, 0),
(100994, 10623, 1035, 18, 30, 0),
(100995, 10624, 1028, 45.6, 10, 0),
(100996, 10624, 1029, 123.79, 6, 0),
(100997, 10624, 1044, 19.45, 10, 0),
(100998, 10625, 1014, 23.25, 3, 0),
(101000, 10625, 1060, 34, 10, 0),
(101001, 10626, 1053, 32.8, 12, 0),
(101002, 10626, 1060, 34, 20, 0),
(101003, 10626, 1071, 21.5, 20, 0),
(101004, 10627, 1062, 49.3, 15, 0),
(101005, 10627, 1073, 15, 35, 0),
(101006, 10628, 1001, 18, 25, 0),
(101007, 10629, 1029, 123.79, 20, 0),
(101008, 10629, 1064, 33.25, 9, 0),
(101009, 10630, 1055, 24, 12, 0),
(101010, 10630, 1076, 18, 35, 0),
(101011, 10631, 1075, 7.75, 8, 0),
(101012, 10632, 1002, 19, 30, 0),
(101013, 10632, 1033, 2.5, 20, 0),
(101014, 10633, 1012, 38, 36, 0),
(101015, 10633, 1013, 6, 13, 0),
(101016, 10633, 1026, 31.23, 35, 0),
(101017, 10633, 1062, 49.3, 80, 0),
(101018, 10634, 1007, 30, 35, 0),
(101019, 10634, 1018, 62.5, 50, 0),
(101020, 10634, 1051, 53, 15, 0),
(101021, 10634, 1075, 7.75, 2, 0),
(101022, 10635, 1004, 22, 10, 0),
(101024, 10635, 1022, 21, 40, 0),
(101025, 10636, 1004, 22, 25, 0),
(101026, 10636, 1058, 13.25, 6, 0),
(101028, 10637, 1050, 16.25, 25, 0),
(101029, 10637, 1056, 38, 60, 0),
(101030, 10638, 1045, 9.5, 20, 0),
(101031, 10638, 1065, 21.05, 21, 0),
(101033, 10639, 1018, 62.5, 8, 0),
(101034, 10640, 1069, 36, 20, 0),
(101035, 10640, 1070, 15, 15, 0),
(101036, 10641, 1002, 19, 50, 0),
(101037, 10641, 1040, 18.4, 60, 0),
(101038, 10642, 1021, 10, 30, 0),
(101039, 10642, 1061, 28.5, 20, 0),
(101040, 10643, 1028, 45.6, 15, 0),
(101041, 10643, 1039, 18, 21, 0),
(101042, 10643, 1046, 12, 2, 0),
(101043, 10644, 1018, 62.5, 4, 0),
(101044, 10644, 1043, 46, 20, 0),
(101045, 10644, 1046, 12, 21, 0),
(101046, 10645, 1018, 62.5, 20, 0),
(101047, 10645, 1036, 19, 15, 0),
(101048, 10646, 1001, 18, 15, 0),
(101049, 10646, 1010, 31, 18, 0),
(101050, 10646, 1071, 21.5, 30, 0),
(101051, 10646, 1077, 13, 35, 0),
(101052, 10647, 1019, 9.2, 30, 0),
(101053, 10647, 1039, 18, 20, 0),
(101054, 10648, 1022, 21, 15, 0),
(101055, 10648, 1024, 4.5, 15, 0),
(101056, 10649, 1028, 45.6, 20, 0),
(101058, 10650, 1030, 25.89, 30, 0),
(101059, 10650, 1053, 32.8, 25, 0),
(101060, 10650, 1054, 7.45, 30, 0),
(101061, 10651, 1019, 9.2, 12, 0),
(101062, 10651, 1022, 21, 20, 0),
(101063, 10652, 1030, 25.89, 2, 0),
(101065, 10653, 1016, 17.45, 30, 0),
(101066, 10653, 1060, 34, 20, 0),
(101067, 10654, 1004, 22, 12, 0),
(101068, 10654, 1039, 18, 20, 0),
(101069, 10654, 1054, 7.45, 6, 0),
(101070, 10655, 1041, 9.65, 20, 0),
(101071, 10656, 1014, 23.25, 3, 0),
(101072, 10656, 1044, 19.45, 28, 0),
(101073, 10656, 1047, 9.5, 6, 0),
(101074, 10657, 1015, 15.5, 50, 0),
(101075, 10657, 1041, 9.65, 24, 0),
(101076, 10657, 1046, 12, 45, 0),
(101077, 10657, 1047, 9.5, 10, 0),
(101078, 10657, 1056, 38, 45, 0),
(101079, 10657, 1060, 34, 30, 0),
(101080, 10658, 1021, 10, 60, 0),
(101081, 10658, 1040, 18.4, 70, 0),
(101082, 10658, 1060, 34, 55, 0),
(101083, 10658, 1077, 13, 70, 0),
(101084, 10659, 1031, 12.5, 20, 0),
(101085, 10659, 1040, 18.4, 24, 0),
(101086, 10659, 1070, 15, 40, 0),
(101087, 10660, 1020, 81, 21, 0),
(101088, 10661, 1039, 18, 3, 0),
(101089, 10661, 1058, 13.25, 49, 0),
(101090, 10662, 1068, 12.5, 10, 0),
(101091, 10663, 1040, 18.4, 30, 0),
(101093, 10663, 1051, 53, 20, 0),
(101094, 10664, 1010, 31, 24, 0),
(101095, 10664, 1056, 38, 12, 0),
(101096, 10664, 1065, 21.05, 15, 0),
(101097, 10665, 1051, 53, 20, 0),
(101098, 10665, 1059, 55, 1, 0),
(101099, 10665, 1076, 18, 10, 0),
(101100, 10666, 1029, 123.79, 36, 0),
(101101, 10666, 1065, 21.05, 10, 0),
(101102, 10667, 1069, 36, 45, 0),
(101103, 10667, 1071, 21.5, 14, 0),
(101104, 10668, 1031, 12.5, 8, 0),
(101105, 10668, 1055, 24, 4, 0),
(101106, 10668, 1064, 33.25, 15, 0),
(101107, 10669, 1036, 19, 30, 0),
(101108, 10670, 1023, 9, 32, 0),
(101109, 10670, 1046, 12, 60, 0),
(101110, 10670, 1067, 14, 25, 0),
(101111, 10670, 1073, 15, 50, 0),
(101112, 10670, 1075, 7.75, 25, 0),
(101113, 10671, 1016, 17.45, 10, 0),
(101114, 10671, 1062, 49.3, 10, 0),
(101115, 10671, 1065, 21.05, 12, 0),
(101116, 10672, 1038, 263.5, 15, 0),
(101117, 10672, 1071, 21.5, 12, 0),
(101118, 10673, 1016, 17.45, 3, 0),
(101120, 10673, 1043, 46, 6, 0),
(101121, 10674, 1023, 9, 5, 0),
(101122, 10675, 1014, 23.25, 30, 0),
(101123, 10675, 1053, 32.8, 10, 0),
(101124, 10675, 1058, 13.25, 30, 0),
(101125, 10676, 1010, 31, 2, 0),
(101126, 10676, 1019, 9.2, 7, 0),
(101127, 10676, 1044, 19.45, 21, 0),
(101128, 10677, 1026, 31.23, 30, 0),
(101129, 10677, 1033, 2.5, 8, 0),
(101130, 10678, 1012, 38, 100, 0),
(101131, 10678, 1033, 2.5, 30, 0),
(101132, 10678, 1041, 9.65, 120, 0),
(101133, 10678, 1054, 7.45, 30, 0),
(101134, 10679, 1059, 55, 12, 0),
(101135, 10680, 1016, 17.45, 50, 0),
(101136, 10680, 1031, 12.5, 20, 0),
(101138, 10681, 1019, 9.2, 30, 0),
(101139, 10681, 1021, 10, 12, 0),
(101140, 10681, 1064, 33.25, 28, 0),
(101141, 10682, 1033, 2.5, 30, 0),
(101142, 10682, 1066, 17, 4, 0),
(101143, 10682, 1075, 7.75, 30, 0),
(101144, 10683, 1052, 7, 9, 0),
(101145, 10684, 1040, 18.4, 20, 0),
(101146, 10684, 1047, 9.5, 40, 0),
(101147, 10684, 1060, 34, 30, 0),
(101148, 10685, 1010, 31, 20, 0),
(101149, 10685, 1041, 9.65, 4, 0),
(101150, 10685, 1047, 9.5, 15, 0),
(101151, 10686, 1017, 39, 30, 0),
(101152, 10686, 1026, 31.23, 15, 0),
(101153, 10687, 1009, 150, 50, 0),
(101154, 10687, 1029, 123.79, 10, 0),
(101155, 10687, 1036, 19, 6, 0),
(101156, 10688, 1010, 31, 18, 0),
(101157, 10688, 1028, 45.6, 60, 0),
(101158, 10688, 1034, 14, 14, 0),
(101159, 10689, 1001, 18, 35, 0),
(101160, 10690, 1056, 38, 20, 0),
(101161, 10690, 1077, 13, 30, 0),
(101162, 10691, 1001, 18, 30, 0),
(101163, 10691, 1029, 123.79, 40, 0),
(101164, 10691, 1043, 46, 40, 0),
(101165, 10691, 1044, 19.45, 24, 0),
(101166, 10691, 1062, 49.3, 48, 0),
(101167, 10692, 1063, 43.9, 20, 0),
(101168, 10693, 1009, 150, 6, 0),
(101169, 10693, 1054, 7.45, 60, 0),
(101170, 10693, 1069, 36, 30, 0),
(101171, 10693, 1073, 15, 15, 0),
(101172, 10694, 1007, 30, 90, 0),
(101173, 10694, 1059, 55, 25, 0),
(101174, 10694, 1070, 15, 50, 0),
(101175, 10695, 1008, 40, 10, 0),
(101176, 10695, 1012, 38, 4, 0),
(101177, 10695, 1024, 4.5, 20, 0),
(101178, 10696, 1017, 39, 20, 0),
(101179, 10696, 1046, 12, 18, 0),
(101180, 10697, 1019, 9.2, 7, 0),
(101181, 10697, 1035, 18, 9, 0),
(101182, 10697, 1058, 13.25, 30, 0),
(101183, 10697, 1070, 15, 30, 0),
(101185, 10698, 1017, 39, 8, 0),
(101186, 10698, 1029, 123.79, 12, 0),
(101187, 10698, 1065, 21.05, 65, 0),
(101188, 10698, 1070, 15, 8, 0),
(101189, 10699, 1047, 9.5, 12, 0),
(101190, 10700, 1001, 18, 5, 0),
(101191, 10700, 1034, 14, 12, 0),
(101192, 10700, 1068, 12.5, 40, 0),
(101193, 10700, 1071, 21.5, 60, 0),
(101194, 10701, 1059, 55, 42, 0),
(101195, 10701, 1071, 21.5, 20, 0),
(101196, 10701, 1076, 18, 35, 0),
(101197, 10702, 1003, 10, 6, 0),
(101198, 10702, 1076, 18, 15, 0),
(101199, 10703, 1002, 19, 5, 0),
(101200, 10703, 1059, 55, 35, 0),
(101201, 10703, 1073, 15, 35, 0),
(101202, 10704, 1004, 22, 6, 0),
(101203, 10704, 1024, 4.5, 35, 0),
(101204, 10704, 1048, 12.75, 24, 0),
(101205, 10705, 1031, 12.5, 20, 0),
(101206, 10705, 1032, 32, 4, 0),
(101207, 10706, 1016, 17.45, 20, 0),
(101208, 10706, 1043, 46, 24, 0),
(101209, 10706, 1059, 55, 8, 0),
(101210, 10707, 1055, 24, 21, 0),
(101211, 10707, 1057, 19.5, 40, 0),
(101212, 10707, 1070, 15, 28, 0),
(101214, 10708, 1036, 19, 5, 0),
(101215, 10709, 1008, 40, 40, 0),
(101216, 10709, 1051, 53, 28, 0),
(101217, 10709, 1060, 34, 10, 0),
(101218, 10710, 1019, 9.2, 5, 0),
(101219, 10710, 1047, 9.5, 5, 0),
(101220, 10711, 1019, 9.2, 12, 0),
(101221, 10711, 1041, 9.65, 42, 0),
(101222, 10711, 1053, 32.8, 120, 0),
(101223, 10712, 1053, 32.8, 3, 0),
(101224, 10712, 1056, 38, 30, 0),
(101225, 10713, 1010, 31, 18, 0),
(101226, 10713, 1026, 31.23, 30, 0),
(101227, 10713, 1045, 9.5, 110, 0),
(101228, 10713, 1046, 12, 24, 0),
(101229, 10714, 1002, 19, 30, 0),
(101230, 10714, 1017, 39, 27, 0),
(101231, 10714, 1047, 9.5, 50, 0),
(101232, 10714, 1056, 38, 18, 0),
(101233, 10714, 1058, 13.25, 12, 0),
(101234, 10715, 1010, 31, 21, 0),
(101235, 10715, 1071, 21.5, 30, 0),
(101236, 10716, 1021, 10, 5, 0),
(101237, 10716, 1051, 53, 7, 0),
(101238, 10716, 1061, 28.5, 10, 0),
(101239, 10717, 1021, 10, 32, 0),
(101240, 10717, 1054, 7.45, 15, 0),
(101241, 10717, 1069, 36, 25, 0),
(101242, 10718, 1012, 38, 36, 0),
(101243, 10718, 1016, 17.45, 20, 0),
(101244, 10718, 1036, 19, 40, 0),
(101245, 10718, 1062, 49.3, 20, 0),
(101246, 10719, 1018, 62.5, 12, 0),
(101247, 10719, 1030, 25.89, 3, 0),
(101248, 10719, 1054, 7.45, 40, 0),
(101249, 10720, 1035, 18, 21, 0),
(101250, 10720, 1071, 21.5, 8, 0),
(101251, 10721, 1044, 19.45, 50, 0),
(101252, 10722, 1002, 19, 3, 0),
(101253, 10722, 1031, 12.5, 50, 0),
(101254, 10722, 1068, 12.5, 45, 0),
(101255, 10722, 1075, 7.75, 42, 0),
(101256, 10723, 1026, 31.23, 15, 0),
(101257, 10724, 1010, 31, 16, 0),
(101258, 10724, 1061, 28.5, 5, 0),
(101259, 10725, 1041, 9.65, 12, 0),
(101260, 10725, 1052, 7, 4, 0),
(101261, 10725, 1055, 24, 6, 0),
(101262, 10726, 1004, 22, 25, 0),
(101264, 10727, 1017, 39, 20, 0),
(101265, 10727, 1056, 38, 10, 0),
(101266, 10727, 1059, 55, 10, 0),
(101267, 10728, 1030, 25.89, 15, 0),
(101268, 10728, 1040, 18.4, 6, 0),
(101269, 10728, 1055, 24, 12, 0),
(101270, 10728, 1060, 34, 15, 0),
(101271, 10729, 1001, 18, 50, 0),
(101272, 10729, 1021, 10, 30, 0),
(101273, 10729, 1050, 16.25, 40, 0),
(101274, 10730, 1016, 17.45, 15, 0),
(101275, 10730, 1031, 12.5, 3, 0),
(101276, 10730, 1065, 21.05, 10, 0),
(101277, 10731, 1021, 10, 40, 0),
(101278, 10731, 1051, 53, 30, 0),
(101279, 10732, 1076, 18, 20, 0),
(101280, 10733, 1014, 23.25, 16, 0),
(101281, 10733, 1028, 45.6, 20, 0),
(101282, 10733, 1052, 7, 25, 0),
(101283, 10734, 1006, 25, 30, 0),
(101284, 10734, 1030, 25.89, 15, 0),
(101285, 10734, 1076, 18, 20, 0),
(101286, 10735, 1061, 28.5, 20, 0),
(101287, 10735, 1077, 13, 2, 0),
(101288, 10736, 1065, 21.05, 40, 0),
(101289, 10736, 1075, 7.75, 20, 0),
(101290, 10737, 1013, 6, 4, 0),
(101291, 10737, 1041, 9.65, 12, 0),
(101292, 10738, 1016, 17.45, 3, 0),
(101293, 10739, 1036, 19, 6, 0),
(101294, 10739, 1052, 7, 18, 0),
(101295, 10740, 1028, 45.6, 5, 0),
(101296, 10740, 1035, 18, 35, 0),
(101297, 10740, 1045, 9.5, 40, 0),
(101298, 10740, 1056, 38, 14, 0),
(101299, 10741, 1002, 19, 15, 0),
(101300, 10742, 1003, 10, 20, 0),
(101301, 10742, 1060, 34, 50, 0),
(101303, 10743, 1046, 12, 28, 0),
(101304, 10744, 1040, 18.4, 50, 0),
(101305, 10745, 1018, 62.5, 24, 0),
(101306, 10745, 1044, 19.45, 16, 0),
(101307, 10745, 1059, 55, 45, 0),
(101309, 10746, 1013, 6, 6, 0),
(101311, 10746, 1062, 49.3, 9, 0),
(101312, 10746, 1069, 36, 40, 0),
(101313, 10747, 1031, 12.5, 8, 0),
(101314, 10747, 1041, 9.65, 35, 0),
(101315, 10747, 1063, 43.9, 9, 0),
(101316, 10747, 1069, 36, 30, 0),
(101317, 10748, 1023, 9, 44, 0),
(101318, 10748, 1040, 18.4, 40, 0),
(101319, 10748, 1056, 38, 28, 0),
(101320, 10749, 1056, 38, 15, 0),
(101321, 10749, 1059, 55, 6, 0),
(101322, 10749, 1076, 18, 10, 0),
(101323, 10750, 1014, 23.25, 5, 0),
(101324, 10750, 1045, 9.5, 40, 0),
(101325, 10750, 1059, 55, 25, 0),
(101326, 10751, 1026, 31.23, 12, 0),
(101327, 10751, 1030, 25.89, 30, 0),
(101328, 10751, 1050, 16.25, 20, 0),
(101329, 10751, 1073, 15, 15, 0),
(101330, 10752, 1001, 18, 8, 0),
(101331, 10752, 1069, 36, 3, 0),
(101332, 10753, 1045, 9.5, 4, 0),
(101333, 10753, 1074, 10, 5, 0),
(101334, 10754, 1040, 18.4, 3, 0),
(101335, 10755, 1047, 9.5, 30, 0),
(101336, 10755, 1056, 38, 30, 0),
(101337, 10755, 1057, 19.5, 14, 0),
(101338, 10755, 1069, 36, 25, 0),
(101339, 10756, 1018, 62.5, 21, 0),
(101340, 10756, 1036, 19, 20, 0),
(101341, 10756, 1068, 12.5, 6, 0),
(101342, 10756, 1069, 36, 20, 0),
(101343, 10757, 1034, 14, 30, 0),
(101344, 10757, 1059, 55, 7, 0),
(101345, 10757, 1062, 49.3, 30, 0),
(101346, 10757, 1064, 33.25, 24, 0),
(101347, 10758, 1026, 31.23, 20, 0),
(101348, 10758, 1052, 7, 60, 0),
(101349, 10758, 1070, 15, 40, 0),
(101350, 10759, 1032, 32, 10, 0),
(101351, 10760, 1025, 14, 12, 0),
(101352, 10760, 1027, 43.9, 40, 0),
(101353, 10760, 1043, 46, 30, 0),
(101354, 10761, 1025, 14, 35, 0),
(101355, 10761, 1075, 7.75, 18, 0),
(101356, 10762, 1039, 18, 16, 0),
(101357, 10762, 1047, 9.5, 30, 0),
(101358, 10762, 1051, 53, 28, 0),
(101359, 10762, 1056, 38, 60, 0),
(101360, 10763, 1021, 10, 40, 0),
(101361, 10763, 1022, 21, 6, 0),
(101362, 10763, 1024, 4.5, 20, 0),
(101363, 10764, 1003, 10, 20, 0),
(101364, 10764, 1039, 18, 130, 0),
(101365, 10765, 1065, 21.05, 80, 0),
(101366, 10766, 1002, 19, 40, 0),
(101367, 10766, 1007, 30, 35, 0),
(101368, 10766, 1068, 12.5, 40, 0),
(101370, 10768, 1022, 21, 4, 0),
(101371, 10768, 1031, 12.5, 50, 0),
(101372, 10768, 1060, 34, 15, 0),
(101373, 10768, 1071, 21.5, 12, 0),
(101374, 10769, 1041, 9.65, 30, 0),
(101375, 10769, 1052, 7, 15, 0),
(101376, 10769, 1061, 28.5, 20, 0),
(101377, 10769, 1062, 49.3, 15, 0),
(101379, 10771, 1071, 21.5, 16, 0),
(101380, 10772, 1029, 123.79, 18, 0),
(101381, 10772, 1059, 55, 25, 0),
(101382, 10773, 1017, 39, 33, 0),
(101383, 10773, 1031, 12.5, 70, 0),
(101384, 10773, 1075, 7.75, 7, 0),
(101385, 10774, 1031, 12.5, 2, 0),
(101386, 10774, 1066, 17, 50, 0),
(101387, 10775, 1010, 31, 6, 0),
(101388, 10775, 1067, 14, 3, 0),
(101389, 10776, 1031, 12.5, 16, 0),
(101391, 10776, 1045, 9.5, 27, 0),
(101392, 10776, 1051, 53, 120, 0),
(101394, 10778, 1041, 9.65, 10, 0),
(101395, 10779, 1016, 17.45, 20, 0),
(101396, 10779, 1062, 49.3, 20, 0),
(101397, 10780, 1070, 15, 35, 0),
(101398, 10780, 1077, 13, 15, 0),
(101399, 10781, 1054, 7.45, 3, 0),
(101400, 10781, 1056, 38, 20, 0),
(101401, 10781, 1074, 10, 35, 0),
(101402, 10782, 1031, 12.5, 1, 0),
(101403, 10783, 1031, 12.5, 10, 0),
(101404, 10783, 1038, 263.5, 5, 0),
(101405, 10784, 1036, 19, 30, 0),
(101406, 10784, 1039, 18, 2, 0),
(101408, 10785, 1010, 31, 10, 0),
(101409, 10785, 1075, 7.75, 10, 0),
(101410, 10786, 1008, 40, 30, 0),
(101411, 10786, 1030, 25.89, 15, 0),
(101412, 10786, 1075, 7.75, 42, 0),
(101413, 10787, 1002, 19, 15, 0),
(101414, 10787, 1029, 123.79, 20, 0),
(101415, 10788, 1019, 9.2, 50, 0),
(101416, 10788, 1075, 7.75, 40, 0),
(101417, 10789, 1018, 62.5, 30, 0),
(101418, 10789, 1035, 18, 15, 0),
(101419, 10789, 1063, 43.9, 30, 0),
(101420, 10789, 1068, 12.5, 18, 0),
(101421, 10790, 1007, 30, 3, 0),
(101422, 10790, 1056, 38, 20, 0),
(101423, 10791, 1029, 123.79, 14, 0),
(101424, 10791, 1041, 9.65, 20, 0),
(101425, 10792, 1002, 19, 10, 0),
(101426, 10792, 1054, 7.45, 3, 0),
(101427, 10792, 1068, 12.5, 15, 0),
(101428, 10793, 1041, 9.65, 14, 0),
(101429, 10793, 1052, 7, 8, 0),
(101430, 10794, 1014, 23.25, 15, 0),
(101431, 10794, 1054, 7.45, 6, 0),
(101432, 10795, 1016, 17.45, 65, 0),
(101433, 10795, 1017, 39, 35, 0),
(101434, 10796, 1026, 31.23, 21, 0),
(101435, 10796, 1044, 19.45, 10, 0),
(101436, 10796, 1064, 33.25, 35, 0),
(101437, 10796, 1069, 36, 24, 0),
(101439, 10798, 1062, 49.3, 2, 0),
(101441, 10799, 1013, 6, 20, 0),
(101442, 10799, 1024, 4.5, 20, 0),
(101443, 10799, 1059, 55, 25, 0),
(101445, 10800, 1051, 53, 10, 0),
(101446, 10800, 1054, 7.45, 7, 0),
(101447, 10801, 1017, 39, 40, 0),
(101448, 10801, 1029, 123.79, 20, 0),
(101449, 10802, 1030, 25.89, 25, 0),
(101450, 10802, 1051, 53, 30, 0),
(101451, 10802, 1055, 24, 60, 0),
(101452, 10802, 1062, 49.3, 5, 0),
(101453, 10803, 1019, 9.2, 24, 0),
(101454, 10803, 1025, 14, 15, 0),
(101455, 10803, 1059, 55, 15, 0),
(101456, 10804, 1010, 31, 36, 0),
(101457, 10804, 1028, 45.6, 24, 0),
(101458, 10804, 1049, 20, 4, 0),
(101459, 10805, 1034, 14, 10, 0),
(101460, 10805, 1038, 263.5, 10, 0),
(101461, 10806, 1002, 19, 20, 0),
(101462, 10806, 1065, 21.05, 2, 0),
(101463, 10806, 1074, 10, 15, 0),
(101464, 10807, 1040, 18.4, 1, 0),
(101465, 10808, 1056, 38, 20, 0),
(101466, 10808, 1076, 18, 50, 0),
(101467, 10809, 1052, 7, 20, 0),
(101468, 10810, 1013, 6, 7, 0),
(101469, 10810, 1025, 14, 5, 0),
(101470, 10810, 1070, 15, 5, 0),
(101471, 10811, 1019, 9.2, 15, 0),
(101472, 10811, 1023, 9, 18, 0),
(101473, 10811, 1040, 18.4, 30, 0),
(101474, 10812, 1031, 12.5, 16, 0),
(101476, 10812, 1077, 13, 20, 0),
(101477, 10813, 1002, 19, 12, 0),
(101478, 10813, 1046, 12, 35, 0),
(101479, 10814, 1041, 9.65, 20, 0),
(101480, 10814, 1043, 46, 20, 0),
(101481, 10814, 1048, 12.75, 8, 0),
(101482, 10814, 1061, 28.5, 30, 0),
(101483, 10815, 1033, 2.5, 16, 0),
(101484, 10816, 1038, 263.5, 30, 0),
(101485, 10816, 1062, 49.3, 20, 0),
(101486, 10817, 1026, 31.23, 40, 0),
(101487, 10817, 1038, 263.5, 30, 0),
(101488, 10817, 1040, 18.4, 60, 0),
(101489, 10817, 1062, 49.3, 25, 0),
(101490, 10818, 1032, 32, 20, 0),
(101491, 10818, 1041, 9.65, 20, 0),
(101492, 10819, 1043, 46, 7, 0),
(101493, 10819, 1075, 7.75, 20, 0),
(101494, 10820, 1056, 38, 30, 0),
(101495, 10821, 1035, 18, 20, 0),
(101496, 10821, 1051, 53, 6, 0),
(101497, 10822, 1062, 49.3, 3, 0),
(101498, 10822, 1070, 15, 6, 0),
(101500, 10823, 1057, 19.5, 15, 0),
(101501, 10823, 1059, 55, 40, 0),
(101502, 10823, 1077, 13, 15, 0),
(101503, 10824, 1041, 9.65, 12, 0),
(101504, 10824, 1070, 15, 9, 0),
(101505, 10825, 1026, 31.23, 12, 0),
(101506, 10825, 1053, 32.8, 20, 0),
(101507, 10826, 1031, 12.5, 35, 0),
(101508, 10826, 1057, 19.5, 15, 0),
(101509, 10827, 1010, 31, 15, 0),
(101510, 10827, 1039, 18, 21, 0),
(101511, 10828, 1020, 81, 5, 0),
(101512, 10828, 1038, 263.5, 2, 0),
(101513, 10829, 1002, 19, 10, 0),
(101514, 10829, 1008, 40, 20, 0),
(101515, 10829, 1013, 6, 10, 0),
(101516, 10829, 1060, 34, 21, 0),
(101517, 10830, 1006, 25, 6, 0),
(101518, 10830, 1039, 18, 28, 0),
(101519, 10830, 1060, 34, 30, 0),
(101520, 10830, 1068, 12.5, 24, 0),
(101521, 10831, 1019, 9.2, 2, 0),
(101522, 10831, 1035, 18, 8, 0),
(101523, 10831, 1038, 263.5, 8, 0),
(101524, 10831, 1043, 46, 9, 0),
(101525, 10832, 1013, 6, 3, 0),
(101526, 10832, 1025, 14, 10, 0),
(101527, 10832, 1044, 19.45, 16, 0),
(101528, 10832, 1064, 33.25, 3, 0),
(101529, 10833, 1007, 30, 20, 0),
(101530, 10833, 1031, 12.5, 9, 0),
(101531, 10833, 1053, 32.8, 9, 0),
(101532, 10834, 1029, 123.79, 8, 0),
(101533, 10834, 1030, 25.89, 20, 0),
(101534, 10835, 1059, 55, 15, 0),
(101535, 10835, 1077, 13, 2, 0),
(101536, 10836, 1022, 21, 52, 0),
(101537, 10836, 1035, 18, 6, 0),
(101538, 10836, 1057, 19.5, 24, 0),
(101539, 10836, 1060, 34, 60, 0),
(101540, 10836, 1064, 33.25, 30, 0),
(101541, 10837, 1013, 6, 6, 0),
(101542, 10837, 1040, 18.4, 25, 0),
(101543, 10837, 1047, 9.5, 40, 0),
(101544, 10837, 1076, 18, 21, 0),
(101545, 10838, 1001, 18, 4, 0),
(101546, 10838, 1018, 62.5, 25, 0),
(101547, 10838, 1036, 19, 50, 0),
(101548, 10839, 1058, 13.25, 30, 0),
(101550, 10840, 1025, 14, 6, 0),
(101551, 10840, 1039, 18, 10, 0),
(101552, 10841, 1010, 31, 16, 0),
(101553, 10841, 1056, 38, 30, 0),
(101554, 10841, 1059, 55, 50, 0),
(101555, 10841, 1077, 13, 15, 0),
(101557, 10842, 1043, 46, 5, 0),
(101558, 10842, 1068, 12.5, 20, 0),
(101559, 10842, 1070, 15, 12, 0),
(101560, 10843, 1051, 53, 4, 0),
(101561, 10844, 1022, 21, 35, 0),
(101562, 10845, 1023, 9, 70, 0),
(101563, 10845, 1035, 18, 25, 0),
(101565, 10845, 1058, 13.25, 60, 0),
(101566, 10845, 1064, 33.25, 48, 0),
(101567, 10846, 1004, 22, 21, 0),
(101568, 10846, 1070, 15, 30, 0),
(101569, 10846, 1074, 10, 20, 0),
(101570, 10847, 1001, 18, 80, 0),
(101571, 10847, 1019, 9.2, 12, 0),
(101572, 10847, 1037, 26, 60, 0),
(101573, 10847, 1045, 9.5, 36, 0),
(101574, 10847, 1060, 34, 45, 0),
(101575, 10847, 1071, 21.5, 55, 0),
(101577, 10848, 1009, 150, 3, 0),
(101578, 10849, 1003, 10, 49, 0),
(101579, 10849, 1026, 31.23, 18, 0),
(101580, 10850, 1025, 14, 20, 0),
(101581, 10850, 1033, 2.5, 4, 0),
(101582, 10850, 1070, 15, 30, 0),
(101583, 10851, 1002, 19, 5, 0),
(101584, 10851, 1025, 14, 10, 0),
(101585, 10851, 1057, 19.5, 10, 0),
(101586, 10851, 1059, 55, 42, 0),
(101587, 10852, 1002, 19, 15, 0),
(101588, 10852, 1017, 39, 6, 0),
(101589, 10852, 1062, 49.3, 50, 0),
(101590, 10853, 1018, 62.5, 10, 0),
(101591, 10854, 1010, 31, 100, 0),
(101592, 10854, 1013, 6, 65, 0),
(101593, 10855, 1016, 17.45, 50, 0),
(101594, 10855, 1031, 12.5, 14, 0),
(101595, 10855, 1056, 38, 24, 0),
(101596, 10855, 1065, 21.05, 15, 0),
(101597, 10856, 1002, 19, 20, 0),
(101599, 10857, 1003, 10, 30, 0),
(101600, 10857, 1026, 31.23, 35, 0),
(101601, 10857, 1029, 123.79, 10, 0),
(101602, 10858, 1007, 30, 5, 0);
INSERT INTO `orderdetails` (`Id`, `OrderId`, `ProductId`, `UnitPrice`, `Quantity`, `Discount`) VALUES
(101603, 10858, 1027, 43.9, 10, 0),
(101604, 10858, 1070, 15, 4, 0),
(101605, 10859, 1024, 4.5, 40, 0),
(101606, 10859, 1054, 7.45, 35, 0),
(101607, 10859, 1064, 33.25, 30, 0),
(101608, 10860, 1051, 53, 3, 0),
(101609, 10860, 1076, 18, 20, 0),
(101610, 10861, 1017, 39, 42, 0),
(101611, 10861, 1018, 62.5, 20, 0),
(101612, 10861, 1021, 10, 40, 0),
(101613, 10861, 1033, 2.5, 35, 0),
(101614, 10861, 1062, 49.3, 3, 0),
(101616, 10862, 1052, 7, 8, 0),
(101617, 10863, 1001, 18, 20, 0),
(101618, 10863, 1058, 13.25, 12, 0),
(101619, 10864, 1035, 18, 4, 0),
(101620, 10864, 1067, 14, 15, 0),
(101621, 10865, 1038, 263.5, 60, 0),
(101622, 10865, 1039, 18, 80, 0),
(101623, 10866, 1002, 19, 21, 0),
(101624, 10866, 1024, 4.5, 6, 0),
(101625, 10866, 1030, 25.89, 40, 0),
(101626, 10867, 1053, 32.8, 3, 0),
(101627, 10868, 1026, 31.23, 20, 0),
(101628, 10868, 1035, 18, 30, 0),
(101629, 10868, 1049, 20, 42, 0),
(101630, 10869, 1001, 18, 40, 0),
(101632, 10869, 1023, 9, 50, 0),
(101633, 10869, 1068, 12.5, 20, 0),
(101634, 10870, 1035, 18, 3, 0),
(101635, 10870, 1051, 53, 2, 0),
(101636, 10871, 1006, 25, 50, 0),
(101637, 10871, 1016, 17.45, 12, 0),
(101638, 10871, 1017, 39, 16, 0),
(101639, 10872, 1055, 24, 10, 0),
(101640, 10872, 1062, 49.3, 20, 0),
(101641, 10872, 1064, 33.25, 15, 0),
(101642, 10872, 1065, 21.05, 21, 0),
(101643, 10873, 1021, 10, 20, 0),
(101644, 10873, 1028, 45.6, 3, 0),
(101645, 10874, 1010, 31, 10, 0),
(101646, 10875, 1019, 9.2, 25, 0),
(101647, 10875, 1047, 9.5, 21, 0),
(101648, 10875, 1049, 20, 15, 0),
(101649, 10876, 1046, 12, 21, 0),
(101650, 10876, 1064, 33.25, 20, 0),
(101651, 10877, 1016, 17.45, 30, 0),
(101652, 10877, 1018, 62.5, 25, 0),
(101653, 10878, 1020, 81, 20, 0),
(101654, 10879, 1040, 18.4, 12, 0),
(101655, 10879, 1065, 21.05, 10, 0),
(101656, 10879, 1076, 18, 10, 0),
(101657, 10880, 1023, 9, 30, 0),
(101658, 10880, 1061, 28.5, 30, 0),
(101659, 10880, 1070, 15, 50, 0),
(101660, 10881, 1073, 15, 10, 0),
(101662, 10882, 1049, 20, 20, 0),
(101663, 10882, 1054, 7.45, 32, 0),
(101664, 10883, 1024, 4.5, 8, 0),
(101665, 10884, 1021, 10, 40, 0),
(101666, 10884, 1056, 38, 21, 0),
(101667, 10884, 1065, 21.05, 12, 0),
(101668, 10885, 1002, 19, 20, 0),
(101669, 10885, 1024, 4.5, 12, 0),
(101670, 10885, 1070, 15, 30, 0),
(101671, 10885, 1077, 13, 25, 0),
(101672, 10886, 1010, 31, 70, 0),
(101673, 10886, 1031, 12.5, 35, 0),
(101674, 10886, 1077, 13, 40, 0),
(101675, 10887, 1025, 14, 5, 0),
(101676, 10888, 1002, 19, 20, 0),
(101677, 10888, 1068, 12.5, 18, 0),
(101679, 10889, 1038, 263.5, 40, 0),
(101680, 10890, 1017, 39, 15, 0),
(101681, 10890, 1034, 14, 10, 0),
(101682, 10890, 1041, 9.65, 14, 0),
(101683, 10891, 1030, 25.89, 15, 0),
(101684, 10892, 1059, 55, 40, 0),
(101685, 10893, 1008, 40, 30, 0),
(101686, 10893, 1024, 4.5, 10, 0),
(101687, 10893, 1029, 123.79, 24, 0),
(101688, 10893, 1030, 25.89, 35, 0),
(101689, 10893, 1036, 19, 20, 0),
(101690, 10894, 1013, 6, 28, 0),
(101691, 10894, 1069, 36, 50, 0),
(101692, 10894, 1075, 7.75, 120, 0),
(101693, 10895, 1024, 4.5, 110, 0),
(101694, 10895, 1039, 18, 45, 0),
(101695, 10895, 1040, 18.4, 91, 0),
(101696, 10895, 1060, 34, 100, 0),
(101697, 10896, 1045, 9.5, 15, 0),
(101698, 10896, 1056, 38, 16, 0),
(101699, 10897, 1029, 123.79, 80, 0),
(101700, 10897, 1030, 25.89, 36, 0),
(101701, 10898, 1013, 6, 5, 0),
(101702, 10899, 1039, 18, 8, 0),
(101703, 10900, 1070, 15, 3, 0),
(101704, 10901, 1041, 9.65, 30, 0),
(101705, 10901, 1071, 21.5, 30, 0),
(101706, 10902, 1055, 24, 30, 0),
(101707, 10902, 1062, 49.3, 6, 0),
(101708, 10903, 1013, 6, 40, 0),
(101709, 10903, 1065, 21.05, 21, 0),
(101710, 10903, 1068, 12.5, 20, 0),
(101711, 10904, 1058, 13.25, 15, 0),
(101712, 10904, 1062, 49.3, 35, 0),
(101713, 10905, 1001, 18, 20, 0),
(101714, 10906, 1061, 28.5, 15, 0),
(101715, 10907, 1075, 7.75, 14, 0),
(101716, 10908, 1007, 30, 20, 0),
(101717, 10908, 1052, 7, 14, 0),
(101718, 10909, 1007, 30, 12, 0),
(101719, 10909, 1016, 17.45, 15, 0),
(101720, 10909, 1041, 9.65, 5, 0),
(101721, 10910, 1019, 9.2, 12, 0),
(101722, 10910, 1049, 20, 10, 0),
(101723, 10910, 1061, 28.5, 5, 0),
(101724, 10911, 1001, 18, 10, 0),
(101725, 10911, 1017, 39, 12, 0),
(101726, 10911, 1067, 14, 15, 0),
(101728, 10912, 1029, 123.79, 60, 0),
(101729, 10913, 1004, 22, 30, 0),
(101730, 10913, 1033, 2.5, 40, 0),
(101731, 10913, 1058, 13.25, 15, 0),
(101732, 10914, 1071, 21.5, 25, 0),
(101733, 10915, 1017, 39, 10, 0),
(101734, 10915, 1033, 2.5, 30, 0),
(101735, 10915, 1054, 7.45, 10, 0),
(101736, 10916, 1016, 17.45, 6, 0),
(101737, 10916, 1032, 32, 6, 0),
(101738, 10916, 1057, 19.5, 20, 0),
(101739, 10917, 1030, 25.89, 1, 0),
(101740, 10917, 1060, 34, 10, 0),
(101741, 10918, 1001, 18, 60, 0),
(101742, 10918, 1060, 34, 25, 0),
(101743, 10919, 1016, 17.45, 24, 0),
(101744, 10919, 1025, 14, 24, 0),
(101745, 10919, 1040, 18.4, 20, 0),
(101746, 10920, 1050, 16.25, 24, 0),
(101747, 10921, 1035, 18, 10, 0),
(101748, 10921, 1063, 43.9, 40, 0),
(101749, 10922, 1017, 39, 15, 0),
(101750, 10922, 1024, 4.5, 35, 0),
(101752, 10923, 1043, 46, 10, 0),
(101753, 10923, 1067, 14, 24, 0),
(101754, 10924, 1010, 31, 20, 0),
(101755, 10924, 1028, 45.6, 30, 0),
(101756, 10924, 1075, 7.75, 6, 0),
(101757, 10925, 1036, 19, 25, 0),
(101758, 10925, 1052, 7, 12, 0),
(101760, 10926, 1013, 6, 10, 0),
(101761, 10926, 1019, 9.2, 7, 0),
(101763, 10927, 1020, 81, 5, 0),
(101764, 10927, 1052, 7, 5, 0),
(101765, 10927, 1076, 18, 20, 0),
(101766, 10928, 1047, 9.5, 5, 0),
(101767, 10928, 1076, 18, 5, 0),
(101768, 10929, 1021, 10, 60, 0),
(101769, 10929, 1075, 7.75, 49, 0),
(101770, 10929, 1077, 13, 15, 0),
(101771, 10930, 1021, 10, 36, 0),
(101772, 10930, 1027, 43.9, 25, 0),
(101773, 10930, 1055, 24, 25, 0),
(101774, 10930, 1058, 13.25, 30, 0),
(101775, 10931, 1013, 6, 42, 0),
(101776, 10931, 1057, 19.5, 30, 0),
(101777, 10932, 1016, 17.45, 30, 0),
(101778, 10932, 1062, 49.3, 14, 0),
(101780, 10932, 1075, 7.75, 20, 0),
(101781, 10933, 1053, 32.8, 2, 0),
(101782, 10933, 1061, 28.5, 30, 0),
(101783, 10934, 1006, 25, 20, 0),
(101784, 10935, 1001, 18, 21, 0),
(101785, 10935, 1018, 62.5, 4, 0),
(101786, 10935, 1023, 9, 8, 0),
(101787, 10936, 1036, 19, 30, 0),
(101788, 10937, 1028, 45.6, 8, 0),
(101789, 10937, 1034, 14, 20, 0),
(101790, 10938, 1013, 6, 20, 0),
(101791, 10938, 1043, 46, 24, 0),
(101792, 10938, 1060, 34, 49, 0),
(101793, 10938, 1071, 21.5, 35, 0),
(101794, 10939, 1002, 19, 10, 0),
(101795, 10939, 1067, 14, 40, 0),
(101796, 10940, 1007, 30, 8, 0),
(101797, 10940, 1013, 6, 20, 0),
(101798, 10941, 1031, 12.5, 44, 0),
(101799, 10941, 1062, 49.3, 30, 0),
(101800, 10941, 1068, 12.5, 80, 0),
(101802, 10942, 1049, 20, 28, 0),
(101803, 10943, 1013, 6, 15, 0),
(101804, 10943, 1022, 21, 21, 0),
(101805, 10943, 1046, 12, 15, 0),
(101807, 10944, 1044, 19.45, 18, 0),
(101808, 10944, 1056, 38, 18, 0),
(101809, 10945, 1013, 6, 20, 0),
(101810, 10945, 1031, 12.5, 10, 0),
(101811, 10946, 1010, 31, 25, 0),
(101812, 10946, 1024, 4.5, 25, 0),
(101813, 10946, 1077, 13, 40, 0),
(101814, 10947, 1059, 55, 4, 0),
(101815, 10948, 1050, 16.25, 9, 0),
(101816, 10948, 1051, 53, 40, 0),
(101817, 10948, 1055, 24, 4, 0),
(101818, 10949, 1006, 25, 12, 0),
(101819, 10949, 1010, 31, 30, 0),
(101820, 10949, 1017, 39, 6, 0),
(101821, 10949, 1062, 49.3, 60, 0),
(101822, 10950, 1004, 22, 5, 0),
(101823, 10951, 1033, 2.5, 15, 0),
(101824, 10951, 1041, 9.65, 6, 0),
(101825, 10951, 1075, 7.75, 50, 0),
(101826, 10952, 1006, 25, 16, 0),
(101827, 10952, 1028, 45.6, 2, 0),
(101828, 10953, 1020, 81, 50, 0),
(101829, 10953, 1031, 12.5, 50, 0),
(101830, 10954, 1016, 17.45, 28, 0),
(101831, 10954, 1031, 12.5, 25, 0),
(101832, 10954, 1045, 9.5, 30, 0),
(101833, 10954, 1060, 34, 24, 0),
(101834, 10955, 1075, 7.75, 12, 0),
(101835, 10956, 1021, 10, 12, 0),
(101836, 10956, 1047, 9.5, 14, 0),
(101837, 10956, 1051, 53, 8, 0),
(101838, 10957, 1030, 25.89, 30, 0),
(101839, 10957, 1035, 18, 40, 0),
(101840, 10957, 1064, 33.25, 8, 0),
(101842, 10958, 1007, 30, 6, 0),
(101844, 10959, 1075, 7.75, 20, 0),
(101845, 10960, 1024, 4.5, 10, 0),
(101846, 10960, 1041, 9.65, 24, 0),
(101847, 10961, 1052, 7, 6, 0),
(101848, 10961, 1076, 18, 60, 0),
(101849, 10962, 1007, 30, 45, 0),
(101850, 10962, 1013, 6, 77, 0),
(101851, 10962, 1053, 32.8, 20, 0),
(101852, 10962, 1069, 36, 9, 0),
(101853, 10962, 1076, 18, 44, 0),
(101854, 10963, 1060, 34, 2, 0),
(101855, 10964, 1018, 62.5, 6, 0),
(101856, 10964, 1038, 263.5, 5, 0),
(101857, 10964, 1069, 36, 10, 0),
(101858, 10965, 1051, 53, 16, 0),
(101859, 10966, 1037, 26, 8, 0),
(101860, 10966, 1056, 38, 12, 0),
(101861, 10966, 1062, 49.3, 12, 0),
(101862, 10967, 1019, 9.2, 12, 0),
(101863, 10967, 1049, 20, 40, 0),
(101864, 10968, 1012, 38, 30, 0),
(101865, 10968, 1024, 4.5, 30, 0),
(101866, 10968, 1064, 33.25, 4, 0),
(101867, 10969, 1046, 12, 9, 0),
(101868, 10970, 1052, 7, 40, 0),
(101869, 10971, 1029, 123.79, 14, 0),
(101870, 10972, 1017, 39, 6, 0),
(101871, 10972, 1033, 2.5, 7, 0),
(101872, 10973, 1026, 31.23, 5, 0),
(101873, 10973, 1041, 9.65, 6, 0),
(101874, 10973, 1075, 7.75, 10, 0),
(101875, 10974, 1063, 43.9, 10, 0),
(101876, 10975, 1008, 40, 16, 0),
(101877, 10975, 1075, 7.75, 10, 0),
(101878, 10976, 1028, 45.6, 20, 0),
(101879, 10977, 1039, 18, 30, 0),
(101880, 10977, 1047, 9.5, 30, 0),
(101881, 10977, 1051, 53, 10, 0),
(101882, 10977, 1063, 43.9, 20, 0),
(101883, 10978, 1008, 40, 20, 0),
(101884, 10978, 1021, 10, 40, 0),
(101885, 10978, 1040, 18.4, 10, 0),
(101886, 10978, 1044, 19.45, 6, 0),
(101887, 10979, 1007, 30, 18, 0),
(101888, 10979, 1012, 38, 20, 0),
(101889, 10979, 1024, 4.5, 80, 0),
(101890, 10979, 1027, 43.9, 30, 0),
(101891, 10979, 1031, 12.5, 24, 0),
(101892, 10979, 1063, 43.9, 35, 0),
(101893, 10980, 1075, 7.75, 40, 0),
(101894, 10981, 1038, 263.5, 60, 0),
(101895, 10982, 1007, 30, 20, 0),
(101896, 10982, 1043, 46, 9, 0),
(101897, 10983, 1013, 6, 84, 0),
(101898, 10983, 1057, 19.5, 15, 0),
(101899, 10984, 1016, 17.45, 55, 0),
(101900, 10984, 1024, 4.5, 20, 0),
(101901, 10984, 1036, 19, 40, 0),
(101902, 10985, 1016, 17.45, 36, 0),
(101903, 10985, 1018, 62.5, 8, 0),
(101904, 10985, 1032, 32, 35, 0),
(101906, 10986, 1020, 81, 15, 0),
(101907, 10986, 1076, 18, 10, 0),
(101908, 10986, 1077, 13, 15, 0),
(101909, 10987, 1007, 30, 60, 0),
(101910, 10987, 1043, 46, 6, 0),
(101912, 10988, 1007, 30, 60, 0),
(101913, 10988, 1062, 49.3, 40, 0),
(101914, 10989, 1006, 25, 40, 0),
(101916, 10989, 1041, 9.65, 4, 0),
(101917, 10990, 1021, 10, 65, 0),
(101918, 10990, 1034, 14, 60, 0),
(101919, 10990, 1055, 24, 65, 0),
(101920, 10990, 1061, 28.5, 66, 0),
(101921, 10991, 1002, 19, 50, 0),
(101922, 10991, 1070, 15, 20, 0),
(101923, 10991, 1076, 18, 90, 0),
(101925, 10993, 1029, 123.79, 50, 0),
(101926, 10993, 1041, 9.65, 35, 0),
(101927, 10994, 1059, 55, 18, 0),
(101928, 10995, 1051, 53, 20, 0),
(101929, 10995, 1060, 34, 4, 0),
(101931, 10997, 1032, 32, 50, 0),
(101932, 10997, 1046, 12, 20, 0),
(101933, 10997, 1052, 7, 20, 0),
(101934, 10998, 1024, 4.5, 12, 0),
(101935, 10998, 1061, 28.5, 7, 0),
(101936, 10998, 1074, 10, 20, 0),
(101937, 10998, 1075, 7.75, 30, 0),
(101938, 10999, 1041, 9.65, 20, 0),
(101939, 10999, 1051, 53, 15, 0),
(101940, 10999, 1077, 13, 21, 0),
(101941, 11000, 1004, 22, 25, 0),
(101942, 11000, 1024, 4.5, 30, 0),
(101943, 11000, 1077, 13, 30, 0),
(101944, 11001, 1007, 30, 60, 0),
(101945, 11001, 1022, 21, 25, 0),
(101946, 11001, 1046, 12, 25, 0),
(101947, 11001, 1055, 24, 6, 0),
(101948, 11002, 1013, 6, 56, 0),
(101949, 11002, 1035, 18, 15, 0),
(101951, 11002, 1055, 24, 40, 0),
(101952, 11003, 1001, 18, 4, 0),
(101953, 11003, 1040, 18.4, 10, 0),
(101954, 11003, 1052, 7, 10, 0),
(101955, 11004, 1026, 31.23, 6, 0),
(101956, 11004, 1076, 18, 6, 0),
(101957, 11005, 1001, 18, 2, 0),
(101958, 11005, 1059, 55, 10, 0),
(101959, 11006, 1001, 18, 8, 0),
(101960, 11006, 1029, 123.79, 2, 0),
(101961, 11007, 1008, 40, 30, 0),
(101962, 11007, 1029, 123.79, 10, 0),
(101964, 11008, 1028, 45.6, 70, 0),
(101965, 11008, 1034, 14, 90, 0),
(101966, 11008, 1071, 21.5, 21, 0),
(101967, 11009, 1024, 4.5, 12, 0),
(101968, 11009, 1036, 19, 18, 0),
(101969, 11009, 1060, 34, 9, 0),
(101970, 11010, 1007, 30, 20, 0),
(101971, 11010, 1024, 4.5, 10, 0),
(101972, 11011, 1058, 13.25, 40, 0),
(101973, 11011, 1071, 21.5, 20, 0),
(101974, 11012, 1019, 9.2, 50, 0),
(101975, 11012, 1060, 34, 36, 0),
(101976, 11012, 1071, 21.5, 60, 0),
(101977, 11013, 1023, 9, 10, 0),
(101979, 11013, 1045, 9.5, 20, 0),
(101980, 11013, 1068, 12.5, 2, 0),
(101981, 11014, 1041, 9.65, 28, 0),
(101982, 11015, 1030, 25.89, 15, 0),
(101983, 11015, 1077, 13, 18, 0),
(101984, 11016, 1031, 12.5, 15, 0),
(101985, 11016, 1036, 19, 16, 0),
(101986, 11017, 1003, 10, 25, 0),
(101987, 11017, 1059, 55, 110, 0),
(101988, 11017, 1070, 15, 30, 0),
(101989, 11018, 1012, 38, 20, 0),
(101990, 11018, 1018, 62.5, 10, 0),
(101991, 11018, 1056, 38, 5, 0),
(101992, 11019, 1046, 12, 3, 0),
(101993, 11019, 1049, 20, 2, 0),
(101994, 11020, 1010, 31, 24, 0),
(101995, 11021, 1002, 19, 11, 0),
(101996, 11021, 1020, 81, 15, 0),
(101997, 11021, 1026, 31.23, 63, 0),
(101998, 11021, 1051, 53, 44, 0),
(102000, 11022, 1019, 9.2, 35, 0),
(102001, 11022, 1069, 36, 30, 0),
(102002, 11023, 1007, 30, 4, 0),
(102003, 11023, 1043, 46, 30, 0),
(102004, 11024, 1026, 31.23, 12, 0),
(102005, 11024, 1033, 2.5, 30, 0),
(102006, 11024, 1065, 21.05, 21, 0),
(102007, 11024, 1071, 21.5, 50, 0),
(102008, 11025, 1001, 18, 10, 0),
(102009, 11025, 1013, 6, 20, 0),
(102010, 11026, 1018, 62.5, 8, 0),
(102011, 11026, 1051, 53, 10, 0),
(102012, 11027, 1024, 4.5, 30, 0),
(102013, 11027, 1062, 49.3, 21, 0),
(102014, 11028, 1055, 24, 35, 0),
(102015, 11028, 1059, 55, 24, 0),
(102016, 11029, 1056, 38, 20, 0),
(102017, 11029, 1063, 43.9, 12, 0),
(102018, 11030, 1002, 19, 100, 0),
(102020, 11030, 1029, 123.79, 60, 0),
(102021, 11030, 1059, 55, 100, 0),
(102022, 11031, 1001, 18, 45, 0),
(102023, 11031, 1013, 6, 80, 0),
(102024, 11031, 1024, 4.5, 21, 0),
(102025, 11031, 1064, 33.25, 20, 0),
(102026, 11031, 1071, 21.5, 16, 0),
(102027, 11032, 1036, 19, 35, 0),
(102028, 11032, 1038, 263.5, 25, 0),
(102029, 11032, 1059, 55, 30, 0),
(102030, 11033, 1053, 32.8, 70, 0),
(102031, 11033, 1069, 36, 36, 0),
(102032, 11034, 1021, 10, 15, 0),
(102033, 11034, 1044, 19.45, 12, 0),
(102034, 11034, 1061, 28.5, 6, 0),
(102035, 11035, 1001, 18, 10, 0),
(102036, 11035, 1035, 18, 60, 0),
(102038, 11035, 1054, 7.45, 10, 0),
(102039, 11036, 1013, 6, 7, 0),
(102040, 11036, 1059, 55, 30, 0),
(102041, 11037, 1070, 15, 4, 0),
(102042, 11038, 1040, 18.4, 5, 0),
(102043, 11038, 1052, 7, 2, 0),
(102044, 11038, 1071, 21.5, 30, 0),
(102045, 11039, 1028, 45.6, 20, 0),
(102046, 11039, 1035, 18, 24, 0),
(102047, 11039, 1049, 20, 60, 0),
(102048, 11039, 1057, 19.5, 28, 0),
(102049, 11040, 1021, 10, 20, 0),
(102050, 11041, 1002, 19, 30, 0),
(102051, 11041, 1063, 43.9, 30, 0),
(102052, 11042, 1044, 19.45, 15, 0),
(102053, 11042, 1061, 28.5, 4, 0),
(102055, 11044, 1062, 49.3, 12, 0),
(102056, 11045, 1033, 2.5, 15, 0),
(102057, 11045, 1051, 53, 24, 0),
(102058, 11046, 1012, 38, 20, 0),
(102059, 11046, 1032, 32, 15, 0),
(102060, 11046, 1035, 18, 18, 0),
(102061, 11047, 1001, 18, 25, 0),
(102063, 11048, 1068, 12.5, 42, 0),
(102064, 11049, 1002, 19, 10, 0),
(102065, 11049, 1012, 38, 4, 0),
(102066, 11050, 1076, 18, 50, 0),
(102067, 11051, 1024, 4.5, 10, 0),
(102068, 11052, 1043, 46, 30, 0),
(102069, 11052, 1061, 28.5, 10, 0),
(102070, 11053, 1018, 62.5, 35, 0),
(102071, 11053, 1032, 32, 20, 0),
(102072, 11053, 1064, 33.25, 25, 0),
(102073, 11054, 1033, 2.5, 10, 0),
(102074, 11054, 1067, 14, 20, 0),
(102075, 11055, 1024, 4.5, 15, 0),
(102076, 11055, 1025, 14, 15, 0),
(102077, 11055, 1051, 53, 20, 0),
(102078, 11055, 1057, 19.5, 20, 0),
(102079, 11056, 1007, 30, 40, 0),
(102080, 11056, 1055, 24, 35, 0),
(102081, 11056, 1060, 34, 50, 0),
(102082, 11057, 1070, 15, 3, 0),
(102083, 11058, 1021, 10, 3, 0),
(102084, 11058, 1060, 34, 21, 0),
(102085, 11058, 1061, 28.5, 4, 0),
(102086, 11059, 1013, 6, 30, 0),
(102087, 11059, 1017, 39, 12, 0),
(102088, 11059, 1060, 34, 35, 0),
(102089, 11060, 1060, 34, 4, 0),
(102090, 11060, 1077, 13, 10, 0),
(102091, 11061, 1060, 34, 15, 0),
(102092, 11062, 1053, 32.8, 10, 0),
(102093, 11062, 1070, 15, 12, 0),
(102094, 11063, 1034, 14, 30, 0),
(102095, 11063, 1040, 18.4, 40, 0),
(102096, 11063, 1041, 9.65, 30, 0),
(102097, 11064, 1017, 39, 77, 0),
(102098, 11064, 1041, 9.65, 12, 0),
(102099, 11064, 1053, 32.8, 25, 0),
(102100, 11064, 1055, 24, 4, 0),
(102101, 11064, 1068, 12.5, 55, 0),
(102102, 11065, 1030, 25.89, 4, 0),
(102103, 11065, 1054, 7.45, 20, 0),
(102104, 11066, 1016, 17.45, 3, 0),
(102105, 11066, 1019, 9.2, 42, 0),
(102106, 11066, 1034, 14, 35, 0),
(102107, 11067, 1041, 9.65, 9, 0),
(102108, 11068, 1028, 45.6, 8, 0),
(102109, 11068, 1043, 46, 36, 0),
(102110, 11068, 1077, 13, 28, 0),
(102111, 11069, 1039, 18, 20, 0),
(102112, 11070, 1001, 18, 40, 0),
(102113, 11070, 1002, 19, 20, 0),
(102114, 11070, 1016, 17.45, 30, 0),
(102115, 11070, 1031, 12.5, 20, 0),
(102116, 11071, 1007, 30, 15, 0),
(102117, 11071, 1013, 6, 10, 0),
(102118, 11072, 1002, 19, 8, 0),
(102119, 11072, 1041, 9.65, 40, 0),
(102120, 11072, 1050, 16.25, 22, 0),
(102121, 11072, 1064, 33.25, 130, 0),
(102123, 11073, 1024, 4.5, 20, 0),
(102124, 11074, 1016, 17.45, 14, 0),
(102125, 11075, 1002, 19, 10, 0),
(102126, 11075, 1046, 12, 30, 0),
(102127, 11075, 1076, 18, 2, 0),
(102128, 11076, 1006, 25, 20, 0),
(102129, 11076, 1014, 23.25, 20, 0),
(102130, 11076, 1019, 9.2, 10, 0),
(102131, 11077, 1002, 19, 24, 0),
(102132, 11077, 1003, 10, 4, 0),
(102133, 11077, 1004, 22, 1, 0),
(102134, 11077, 1006, 25, 1, 0),
(102135, 11077, 1007, 30, 1, 0),
(102136, 11077, 1008, 40, 2, 0),
(102137, 11077, 1010, 31, 1, 0),
(102138, 11077, 1012, 38, 2, 0),
(102139, 11077, 1013, 6, 4, 0),
(102140, 11077, 1014, 23.25, 1, 0),
(102141, 11077, 1016, 17.45, 2, 0),
(102142, 11077, 1020, 81, 1, 0),
(102143, 11077, 1023, 9, 2, 0),
(102144, 11077, 1032, 32, 1, 0),
(102145, 11077, 1039, 18, 2, 0),
(102146, 11077, 1041, 9.65, 3, 0),
(102147, 11077, 1046, 12, 3, 0),
(102148, 11077, 1052, 7, 2, 0),
(102149, 11077, 1055, 24, 2, 0),
(102150, 11077, 1060, 34, 2, 0),
(102151, 11077, 1064, 33.25, 2, 0),
(102152, 11077, 1066, 17, 1, 0),
(102153, 11077, 1073, 15, 2, 0),
(102154, 11077, 1075, 7.75, 4, 0),
(102155, 11077, 1077, 13, 2, 0),
(102316, 10250, 1009, 150, 5, 0);

-- --------------------------------------------------------

--
-- Table structure for table `orders`
--

CREATE TABLE `orders` (
  `Id` int(11) NOT NULL,
  `CustomerId` varchar(20) COLLATE utf8_bin NOT NULL,
  `OrderDate` datetime NOT NULL,
  `Address` varchar(60) COLLATE utf8_bin NOT NULL,
  `Amount` float NOT NULL,
  `Description` varchar(1000) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Dumping data for table `orders`
--

INSERT INTO `orders` (`Id`, `CustomerId`, `OrderDate`, `Address`, `Amount`, `Description`) VALUES
(10249, 'TOMSP', '1996-07-05 00:00:00', 'Luisenstr. 48', 1696, NULL),
(10250, 'HANAR', '1996-07-08 00:00:00', 'Rua do Paço, 67', 2563, ''),
(10251, 'VICTE', '1996-07-08 00:00:00', '2, rue du Commerce', 670.8, NULL),
(10252, 'SUPRD', '1996-07-09 00:00:00', 'Boulevard Tirou, 255', 3730, ''),
(10253, 'HANAR', '1996-07-10 00:00:00', 'Rua do Paço, 67', 1444.8, NULL),
(10254, 'CHOPS', '1996-07-11 00:00:00', 'Hauptstr. 31', 625.2, NULL),
(10255, 'RICSU', '1996-07-12 00:00:00', 'Starenweg 5', 2490.5, NULL),
(10256, 'WELLI', '1996-07-15 00:00:00', 'Rua do Mercado, 12', 517.8, NULL),
(10257, 'HILAA', '1996-07-16 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 1119.9, NULL),
(10258, 'ERNSH', '1996-07-17 00:00:00', 'Kirchgasse 6', 913.6, NULL),
(10259, 'CENTC', '1996-07-18 00:00:00', 'Sierras de Granada 9993', 100.8, NULL),
(10260, 'OTTIK', '1996-07-19 00:00:00', 'Mehrheimerstr. 369', 1746.2, NULL),
(10261, 'QUEDE', '1996-07-19 00:00:00', 'Rua da Panificadora, 12', 448, NULL),
(10262, 'RATTC', '1996-07-22 00:00:00', '2817 Milton Dr.', 420.8, NULL),
(10263, 'ERNSH', '1996-07-23 00:00:00', 'Kirchgasse 6', 2464.8, NULL),
(10264, 'FOLKO', '1996-07-24 00:00:00', 'Åkergatan 24', 724.5, NULL),
(10265, 'BLONP', '1996-07-25 00:00:00', '24, place Kléber', 1176, NULL),
(10266, 'WARTH', '1996-07-26 00:00:00', 'Torikatu 38', 364.8, NULL),
(10267, 'FRANK', '1996-07-29 00:00:00', 'Berliner Platz 43', 4031, NULL),
(10268, 'GROSR', '1996-07-30 00:00:00', '5ª Ave. Los Palos Grandes', 990, NULL),
(10269, 'WHITC', '1996-07-31 00:00:00', '1029 - 12th Ave. S.', 120, NULL),
(10270, 'WARTH', '1996-08-01 00:00:00', 'Torikatu 38', 1376, NULL),
(10271, 'SPLIR', '1996-08-01 00:00:00', 'P.O. Box 555', 48, NULL),
(10272, 'RATTC', '1996-08-02 00:00:00', '2817 Milton Dr.', 788.8, NULL),
(10273, 'QUICK', '1996-08-05 00:00:00', 'Taucherstraße 10', 2142.4, NULL),
(10274, 'VINET', '1996-08-06 00:00:00', '59 rue de l\'Abbaye', 344, NULL),
(10275, 'MAGAA', '1996-08-07 00:00:00', 'Via Ludovico il Moro 22', 307.2, NULL),
(10276, 'TORTU', '1996-08-08 00:00:00', 'Avda. Azteca 123', 420, NULL),
(10277, 'MORGK', '1996-08-09 00:00:00', 'Heerstr. 22', 1200.8, NULL),
(10278, 'BERGS', '1996-08-12 00:00:00', 'Berguvsvägen  8', 1488.8, NULL),
(10279, 'LEHMS', '1996-08-13 00:00:00', 'Magazinweg 7', 468, NULL),
(10280, 'BERGS', '1996-08-14 00:00:00', 'Berguvsvägen  8', 613.2, NULL),
(10281, 'ROMEY', '1996-08-14 00:00:00', 'Gran Vía, 1', 86.5, NULL),
(10282, 'ROMEY', '1996-08-15 00:00:00', 'Gran Vía, 1', 155.4, NULL),
(10283, 'LILAS', '1996-08-16 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 1331.4, NULL),
(10284, 'LEHMS', '1996-08-19 00:00:00', 'Magazinweg 7', 1452, NULL),
(10285, 'QUICK', '1996-08-20 00:00:00', 'Taucherstraße 10', 2179.2, NULL),
(10286, 'QUICK', '1996-08-21 00:00:00', 'Taucherstraße 10', 3016, NULL),
(10287, 'RICAR', '1996-08-22 00:00:00', 'Av. Copacabana, 267', 924, NULL),
(10288, 'REGGC', '1996-08-23 00:00:00', 'Strada Provinciale 124', 89, NULL),
(10289, 'BSBEV', '1996-08-26 00:00:00', 'Fauntleroy Circus', 479.4, NULL),
(10290, 'COMMI', '1996-08-27 00:00:00', 'Av. dos Lusíadas, 23', 1829, NULL),
(10291, 'QUEDE', '1996-08-27 00:00:00', 'Rua da Panificadora, 12', 552.8, NULL),
(10292, 'TRADH', '1996-08-28 00:00:00', 'Av. Inês de Castro, 414', 1296, NULL),
(10293, 'TORTU', '1996-08-29 00:00:00', 'Avda. Azteca 123', 848.7, NULL),
(10294, 'RATTC', '1996-08-30 00:00:00', '2817 Milton Dr.', 1887.6, NULL),
(10295, 'VINET', '1996-09-02 00:00:00', '59 rue de l\'Abbaye', 121.6, NULL),
(10296, 'LILAS', '1996-09-03 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 849, NULL),
(10297, 'BLONP', '1996-09-04 00:00:00', '24, place Kléber', 864, NULL),
(10298, 'HUNGO', '1996-09-05 00:00:00', '8 Johnstown Road', 3127, NULL),
(10299, 'RICAR', '1996-09-06 00:00:00', 'Av. Copacabana, 267', 349.5, NULL),
(10300, 'MAGAA', '1996-09-09 00:00:00', 'Via Ludovico il Moro 22', 608, NULL),
(10301, 'WANDK', '1996-09-09 00:00:00', 'Adenauerallee 900', 755, NULL),
(10302, 'SUPRD', '1996-09-10 00:00:00', 'Boulevard Tirou, 255', 2708.8, NULL),
(10303, 'GODOS', '1996-09-11 00:00:00', 'C/ Romero, 33', 1242, NULL),
(10304, 'TORTU', '1996-09-12 00:00:00', 'Avda. Azteca 123', 954.4, NULL),
(10305, 'OLDWO', '1996-09-13 00:00:00', '2743 Bering St.', 4157, NULL),
(10306, 'ROMEY', '1996-09-16 00:00:00', 'Gran Vía, 1', 498.5, NULL),
(10307, 'LONEP', '1996-09-17 00:00:00', '89 Chiaroscuro Rd.', 424, NULL),
(10308, 'ANATR', '1996-09-18 00:00:00', 'Avda. de la Constitución 2222', 88.8, NULL),
(10309, 'HUNGO', '1996-09-19 00:00:00', '8 Johnstown Road', 1739.6, NULL),
(10310, 'THEBI', '1996-09-20 00:00:00', '89 Jefferson Way Suite 2', 336, NULL),
(10311, 'DUMON', '1996-09-20 00:00:00', '67, rue des Cinquante Otages', 201.6, NULL),
(10312, 'WANDK', '1996-09-23 00:00:00', 'Adenauerallee 900', 1614.8, NULL),
(10313, 'QUICK', '1996-09-24 00:00:00', 'Taucherstraße 10', 182.4, NULL),
(10314, 'RATTC', '1996-09-25 00:00:00', '2817 Milton Dr.', 2327, NULL),
(10315, 'ISLAT', '1996-09-26 00:00:00', 'Garden House Crowther Way', 516.8, NULL),
(10316, 'RATTC', '1996-09-27 00:00:00', '2817 Milton Dr.', 2835, NULL),
(10317, 'LONEP', '1996-09-30 00:00:00', '89 Chiaroscuro Rd.', 288, NULL),
(10318, 'ISLAT', '1996-10-01 00:00:00', 'Garden House Crowther Way', 240.4, NULL),
(10319, 'TORTU', '1996-10-02 00:00:00', 'Avda. Azteca 123', 1191.2, NULL),
(10320, 'WARTH', '1996-10-03 00:00:00', 'Torikatu 38', 516, NULL),
(10321, 'ISLAT', '1996-10-03 00:00:00', 'Garden House Crowther Way', 144, NULL),
(10322, 'PERIC', '1996-10-04 00:00:00', 'Calle Dr. Jorge Cash 321', 112, NULL),
(10323, 'KOENE', '1996-10-07 00:00:00', 'Maubelstr. 90', 164.4, NULL),
(10324, 'SAVEA', '1996-10-08 00:00:00', '187 Suffolk Ln.', 6155.9, NULL),
(10325, 'KOENE', '1996-10-09 00:00:00', 'Maubelstr. 90', 385, NULL),
(10326, 'BOLID', '1996-10-10 00:00:00', 'C/ Araquil, 67', 982, NULL),
(10327, 'FOLKO', '1996-10-11 00:00:00', 'Åkergatan 24', 1422.5, NULL),
(10328, 'FURIB', '1996-10-14 00:00:00', 'Jardim das rosas n. 32', 1168, NULL),
(10329, 'SPLIR', '1996-10-15 00:00:00', 'P.O. Box 555', 4819.4, NULL),
(10330, 'LILAS', '1996-10-16 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 1245, NULL),
(10331, 'BONAP', '1996-10-16 00:00:00', '12, rue des Bouchers', 88.5, NULL),
(10332, 'MEREP', '1996-10-17 00:00:00', '43 rue St. Laurent', 2121.6, NULL),
(10333, 'WARTH', '1996-10-18 00:00:00', 'Torikatu 38', 954, NULL),
(10334, 'VICTE', '1996-10-21 00:00:00', '2, rue du Commerce', 144.8, NULL),
(10335, 'HUNGO', '1996-10-22 00:00:00', '8 Johnstown Road', 2545.2, NULL),
(10336, 'PRINI', '1996-10-23 00:00:00', 'Estrada da saúde n. 58', 316.8, NULL),
(10337, 'FRANK', '1996-10-24 00:00:00', 'Berliner Platz 43', 1772, NULL),
(10338, 'OLDWO', '1996-10-25 00:00:00', '2743 Bering St.', 934.5, NULL),
(10339, 'MEREP', '1996-10-28 00:00:00', '43 rue St. Laurent', 3463.2, NULL),
(10340, 'BONAP', '1996-10-29 00:00:00', '12, rue des Bouchers', 2564.4, NULL),
(10341, 'SIMOB', '1996-10-29 00:00:00', 'Vinbæltet 34', 412, NULL),
(10342, 'FRANK', '1996-10-30 00:00:00', 'Berliner Platz 43', 2300.8, NULL),
(10343, 'LEHMS', '1996-10-31 00:00:00', 'Magazinweg 7', 1586, NULL),
(10344, 'WHITC', '1996-11-01 00:00:00', '1029 - 12th Ave. S.', 2856, NULL),
(10345, 'QUICK', '1996-11-04 00:00:00', 'Taucherstraße 10', 2824, NULL),
(10346, 'RATTC', '1996-11-05 00:00:00', '2817 Milton Dr.', 1731.2, NULL),
(10347, 'FAMIA', '1996-11-06 00:00:00', 'Rua Orós, 92', 928, NULL),
(10348, 'WANDK', '1996-11-07 00:00:00', 'Adenauerallee 900', 396, NULL),
(10349, 'SPLIR', '1996-11-08 00:00:00', 'P.O. Box 555', 141.6, NULL),
(10350, 'LAMAI', '1996-11-11 00:00:00', '1 rue Alsace-Lorraine', 713.4, NULL),
(10351, 'ERNSH', '1996-11-11 00:00:00', 'Kirchgasse 6', 5677.6, NULL),
(10352, 'FURIB', '1996-11-12 00:00:00', 'Jardim das rosas n. 32', 154, NULL),
(10353, 'PICCO', '1996-11-13 00:00:00', 'Geislweg 14', 10540, NULL),
(10354, 'PERIC', '1996-11-14 00:00:00', 'Calle Dr. Jorge Cash 321', 568.8, NULL),
(10355, 'AROUT', '1996-11-15 00:00:00', 'Brook Farm Stratford St. Mary', 480, NULL),
(10356, 'WANDK', '1996-11-18 00:00:00', 'Adenauerallee 900', 1106.4, NULL),
(10357, 'LILAS', '1996-11-19 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 1360, NULL),
(10358, 'LAMAI', '1996-11-20 00:00:00', '1 rue Alsace-Lorraine', 452, NULL),
(10359, 'SEVES', '1996-11-21 00:00:00', '90 Wadhurst Rd.', 3654.4, NULL),
(10360, 'BLONP', '1996-11-22 00:00:00', '24, place Kléber', 7390.2, NULL),
(10361, 'QUICK', '1996-11-22 00:00:00', 'Taucherstraße 10', 2273.6, NULL),
(10362, 'BONAP', '1996-11-25 00:00:00', '12, rue des Bouchers', 1549.6, NULL),
(10363, 'DRACD', '1996-11-26 00:00:00', 'Walserweg 21', 447.2, NULL),
(10364, 'EASTC', '1996-11-26 00:00:00', '35 King George', 950, NULL),
(10365, 'ANTON', '1996-11-27 00:00:00', 'Mataderos  2312', 0, NULL),
(10366, 'GALED', '1996-11-28 00:00:00', 'Rambla de Cataluña, 23', 136, NULL),
(10367, 'VAFFE', '1996-11-28 00:00:00', 'Smagsloget 45', 834.2, NULL),
(10368, 'ERNSH', '1996-11-29 00:00:00', 'Kirchgasse 6', 1834.2, NULL),
(10369, 'SPLIR', '1996-12-02 00:00:00', 'P.O. Box 555', 2527.2, NULL),
(10370, 'CHOPS', '1996-12-03 00:00:00', 'Hauptstr. 31', 1174, NULL),
(10371, 'LAMAI', '1996-12-03 00:00:00', '1 rue Alsace-Lorraine', 91.2, NULL),
(10372, 'QUEEN', '1996-12-04 00:00:00', 'Alameda dos Canàrios, 891', 11113.6, NULL),
(10373, 'HUNGO', '1996-12-05 00:00:00', '8 Johnstown Road', 1708, NULL),
(10374, 'WOLZA', '1996-12-05 00:00:00', 'ul. Filtrowa 68', 459, NULL),
(10375, 'HUNGC', '1996-12-06 00:00:00', 'City Center Plaza 516 Main St.', 338, NULL),
(10376, 'MEREP', '1996-12-09 00:00:00', '43 rue St. Laurent', 420, NULL),
(10377, 'SEVES', '1996-12-09 00:00:00', '90 Wadhurst Rd.', 1016, NULL),
(10378, 'FOLKO', '1996-12-10 00:00:00', 'Åkergatan 24', 103.2, NULL),
(10379, 'QUEDE', '1996-12-11 00:00:00', 'Rua da Panificadora, 12', 959.2, NULL),
(10380, 'HUNGO', '1996-12-12 00:00:00', '8 Johnstown Road', 1419.8, NULL),
(10381, 'LILAS', '1996-12-12 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 112, NULL),
(10382, 'ERNSH', '1996-12-13 00:00:00', 'Kirchgasse 6', 2356, NULL),
(10383, 'AROUT', '1996-12-16 00:00:00', 'Brook Farm Stratford St. Mary', 899, NULL),
(10384, 'BERGS', '1996-12-16 00:00:00', 'Berguvsvägen  8', 2222.4, NULL),
(10385, 'SPLIR', '1996-12-17 00:00:00', 'P.O. Box 555', 864, NULL),
(10386, 'FAMIA', '1996-12-18 00:00:00', 'Rua Orós, 92', 166, NULL),
(10387, 'SANTG', '1996-12-18 00:00:00', 'Erling Skakkes gate 78', 1058.4, NULL),
(10388, 'SEVES', '1996-12-19 00:00:00', '90 Wadhurst Rd.', 1274, NULL),
(10389, 'BOTTM', '1996-12-20 00:00:00', '23 Tsawassen Blvd.', 1832.8, NULL),
(10390, 'ERNSH', '1996-12-23 00:00:00', 'Kirchgasse 6', 1608, NULL),
(10391, 'DRACD', '1996-12-23 00:00:00', 'Walserweg 21', 86.4, NULL),
(10392, 'PICCO', '1996-12-24 00:00:00', 'Geislweg 14', 1440, NULL),
(10393, 'SAVEA', '1996-12-25 00:00:00', '187 Suffolk Ln.', 3302.6, NULL),
(10394, 'HUNGC', '1996-12-25 00:00:00', 'City Center Plaza 516 Main St.', 442, NULL),
(10395, 'HILAA', '1996-12-26 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 2333.2, NULL),
(10396, 'FRANK', '1996-12-27 00:00:00', 'Berliner Platz 43', 1320, NULL),
(10397, 'PRINI', '1996-12-27 00:00:00', 'Estrada da saúde n. 58', 843.2, NULL),
(10398, 'SAVEA', '1996-12-30 00:00:00', '187 Suffolk Ln.', 2736, NULL),
(10399, 'VAFFE', '1996-12-31 00:00:00', 'Smagsloget 45', 1765.6, NULL),
(10400, 'EASTC', '1997-01-01 00:00:00', '35 King George', 3063, NULL),
(10401, 'RATTC', '1997-01-01 00:00:00', '2817 Milton Dr.', 3868.6, NULL),
(10402, 'ERNSH', '1997-01-02 00:00:00', 'Kirchgasse 6', 2713.5, NULL),
(10403, 'ERNSH', '1997-01-03 00:00:00', 'Kirchgasse 6', 1005.9, NULL),
(10404, 'MAGAA', '1997-01-03 00:00:00', 'Via Ludovico il Moro 22', 1227, NULL),
(10405, 'LINOD', '1997-01-06 00:00:00', 'Ave. 5 de Mayo Porlamar', 400, NULL),
(10406, 'QUEEN', '1997-01-07 00:00:00', 'Alameda dos Canàrios, 891', 2018.2, NULL),
(10407, 'OTTIK', '1997-01-07 00:00:00', 'Mehrheimerstr. 369', 690, NULL),
(10408, 'FOLIG', '1997-01-08 00:00:00', '184, chaussée de Tournai', 1622.4, NULL),
(10409, 'OCEAN', '1997-01-09 00:00:00', 'Ing. Gustavo Moncada 8585 Piso 20-A', 319.2, NULL),
(10410, 'BOTTM', '1997-01-10 00:00:00', '23 Tsawassen Blvd.', 802, NULL),
(10411, 'BOTTM', '1997-01-10 00:00:00', '23 Tsawassen Blvd.', 1208.5, NULL),
(10412, 'WARTH', '1997-01-13 00:00:00', 'Torikatu 38', 372, NULL),
(10413, 'LAMAI', '1997-01-14 00:00:00', '1 rue Alsace-Lorraine', 2123.2, NULL),
(10414, 'FAMIA', '1997-01-14 00:00:00', 'Rua Orós, 92', 231.4, NULL),
(10415, 'HUNGC', '1997-01-15 00:00:00', 'City Center Plaza 516 Main St.', 102.4, NULL),
(10416, 'WARTH', '1997-01-16 00:00:00', 'Torikatu 38', 720, NULL),
(10417, 'SIMOB', '1997-01-16 00:00:00', 'Vinbæltet 34', 11283.2, NULL),
(10418, 'QUICK', '1997-01-17 00:00:00', 'Taucherstraße 10', 1814.8, NULL),
(10419, 'RICSU', '1997-01-20 00:00:00', 'Starenweg 5', 2208, NULL),
(10420, 'WELLI', '1997-01-21 00:00:00', 'Rua do Mercado, 12', 3345.6, NULL),
(10421, 'QUEDE', '1997-01-21 00:00:00', 'Rua da Panificadora, 12', 1273.2, NULL),
(10422, 'FRANS', '1997-01-22 00:00:00', 'Via Monte Bianco 34', 49.8, NULL),
(10423, 'GOURL', '1997-01-23 00:00:00', 'Av. Brasil, 442', 1020, NULL),
(10424, 'MEREP', '1997-01-23 00:00:00', '43 rue St. Laurent', 11493.2, NULL),
(10425, 'LAMAI', '1997-01-24 00:00:00', '1 rue Alsace-Lorraine', 480, NULL),
(10426, 'GALED', '1997-01-27 00:00:00', 'Rambla de Cataluña, 23', 338.2, NULL),
(10427, 'PICCO', '1997-01-27 00:00:00', 'Geislweg 14', 651, NULL),
(10428, 'REGGC', '1997-01-28 00:00:00', 'Strada Provinciale 124', 192, NULL),
(10429, 'HUNGO', '1997-01-29 00:00:00', '8 Johnstown Road', 1748.5, NULL),
(10430, 'ERNSH', '1997-01-30 00:00:00', 'Kirchgasse 6', 5796, NULL),
(10431, 'BOTTM', '1997-01-30 00:00:00', '23 Tsawassen Blvd.', 2523, NULL),
(10432, 'SPLIR', '1997-01-31 00:00:00', 'P.O. Box 555', 485, NULL),
(10433, 'PRINI', '1997-02-03 00:00:00', 'Estrada da saúde n. 58', 851.2, NULL),
(10434, 'FOLKO', '1997-02-03 00:00:00', 'Åkergatan 24', 259.2, NULL),
(10435, 'CONSH', '1997-02-04 00:00:00', 'Berkeley Gardens 12  Brewery', 353.6, NULL),
(10436, 'BLONP', '1997-02-05 00:00:00', '24, place Kléber', 2210.8, NULL),
(10437, 'WARTH', '1997-02-05 00:00:00', 'Torikatu 38', 393, NULL),
(10438, 'TOMSP', '1997-02-06 00:00:00', 'Luisenstr. 48', 567.5, NULL),
(10439, 'MEREP', '1997-02-07 00:00:00', '43 rue St. Laurent', 1078, NULL),
(10440, 'SAVEA', '1997-02-10 00:00:00', '187 Suffolk Ln.', 5793.1, NULL),
(10441, 'OLDWO', '1997-02-10 00:00:00', '2743 Bering St.', 1755, NULL),
(10442, 'ERNSH', '1997-02-11 00:00:00', 'Kirchgasse 6', 1288, NULL),
(10443, 'REGGC', '1997-02-12 00:00:00', 'Strada Provinciale 124', 436.8, NULL),
(10444, 'BERGS', '1997-02-12 00:00:00', 'Berguvsvägen  8', 1031.7, NULL),
(10445, 'BERGS', '1997-02-13 00:00:00', 'Berguvsvägen  8', 174.9, NULL),
(10446, 'TOMSP', '1997-02-14 00:00:00', 'Luisenstr. 48', 273.6, NULL),
(10447, 'RICAR', '1997-02-14 00:00:00', 'Av. Copacabana, 267', 914.4, NULL),
(10448, 'RANCH', '1997-02-17 00:00:00', 'Av. del Libertador 900', 443.4, NULL),
(10449, 'BLONP', '1997-02-18 00:00:00', '24, place Kléber', 1838.2, NULL),
(10450, 'VICTE', '1997-02-19 00:00:00', '2, rue du Commerce', 531.4, NULL),
(10451, 'QUICK', '1997-02-19 00:00:00', 'Taucherstraße 10', 4277.4, NULL),
(10452, 'SAVEA', '1997-02-20 00:00:00', '187 Suffolk Ln.', 2096, NULL),
(10453, 'AROUT', '1997-02-21 00:00:00', 'Brook Farm Stratford St. Mary', 453, NULL),
(10454, 'LAMAI', '1997-02-21 00:00:00', '1 rue Alsace-Lorraine', 414, NULL),
(10455, 'WARTH', '1997-02-24 00:00:00', 'Torikatu 38', 2684, NULL),
(10456, 'KOENE', '1997-02-25 00:00:00', 'Maubelstr. 90', 656, NULL),
(10457, 'KOENE', '1997-02-25 00:00:00', 'Maubelstr. 90', 1584, NULL),
(10458, 'SUPRD', '1997-02-26 00:00:00', 'Boulevard Tirou, 255', 3891, NULL),
(10459, 'VICTE', '1997-02-27 00:00:00', '2, rue du Commerce', 576, NULL),
(10460, 'FOLKO', '1997-02-28 00:00:00', 'Åkergatan 24', 234.8, NULL),
(10461, 'LILAS', '1997-02-28 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 2051.6, NULL),
(10462, 'CONSH', '1997-03-03 00:00:00', 'Berkeley Gardens 12  Brewery', 156, NULL),
(10463, 'SUPRD', '1997-03-04 00:00:00', 'Boulevard Tirou, 255', 153.3, NULL),
(10464, 'FURIB', '1997-03-04 00:00:00', 'Jardim das rosas n. 32', 1848, NULL),
(10465, 'VAFFE', '1997-03-05 00:00:00', 'Smagsloget 45', 2719, NULL),
(10466, 'COMMI', '1997-03-06 00:00:00', 'Av. dos Lusíadas, 23', 48, NULL),
(10467, 'MAGAA', '1997-03-06 00:00:00', 'Via Ludovico il Moro 22', 235.2, NULL),
(10468, 'KOENE', '1997-03-07 00:00:00', 'Maubelstr. 90', 717.6, NULL),
(10469, 'WHITC', '1997-03-10 00:00:00', '1029 - 12th Ave. S.', 1125.5, NULL),
(10470, 'BONAP', '1997-03-11 00:00:00', '12, rue des Bouchers', 1820.8, NULL),
(10471, 'BSBEV', '1997-03-11 00:00:00', 'Fauntleroy Circus', 1328, NULL),
(10472, 'SEVES', '1997-03-12 00:00:00', '90 Wadhurst Rd.', 1051.2, NULL),
(10473, 'ISLAT', '1997-03-13 00:00:00', 'Garden House Crowther Way', 230.4, NULL),
(10474, 'PERIC', '1997-03-13 00:00:00', 'Calle Dr. Jorge Cash 321', 1249.1, NULL),
(10475, 'SUPRD', '1997-03-14 00:00:00', 'Boulevard Tirou, 255', 1770.8, NULL),
(10476, 'HILAA', '1997-03-17 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 182.4, NULL),
(10477, 'PRINI', '1997-03-17 00:00:00', 'Estrada da saúde n. 58', 672, NULL),
(10478, 'VICTE', '1997-03-18 00:00:00', '2, rue du Commerce', 496, NULL),
(10479, 'RATTC', '1997-03-19 00:00:00', '2817 Milton Dr.', 10495.6, NULL),
(10480, 'FOLIG', '1997-03-20 00:00:00', '184, chaussée de Tournai', 756, NULL),
(10481, 'RICAR', '1997-03-20 00:00:00', 'Av. Copacabana, 267', 1472, NULL),
(10482, 'LAZYK', '1997-03-21 00:00:00', '12 Orchestra Terrace', 147, NULL),
(10483, 'WHITC', '1997-03-24 00:00:00', '1029 - 12th Ave. S.', 704, NULL),
(10484, 'BSBEV', '1997-03-24 00:00:00', 'Fauntleroy Circus', 386.2, NULL),
(10485, 'LINOD', '1997-03-25 00:00:00', 'Ave. 5 de Mayo Porlamar', 1760, NULL),
(10486, 'HILAA', '1997-03-26 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 1188, NULL),
(10487, 'QUEEN', '1997-03-26 00:00:00', 'Alameda dos Canàrios, 891', 925.1, NULL),
(10488, 'FRANK', '1997-03-27 00:00:00', 'Berliner Platz 43', 1560, NULL),
(10489, 'PICCO', '1997-03-28 00:00:00', 'Geislweg 14', 250.2, NULL),
(10490, 'HILAA', '1997-03-31 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 3163.2, NULL),
(10491, 'FURIB', '1997-03-31 00:00:00', 'Jardim das rosas n. 32', 305.3, NULL),
(10492, 'BOTTM', '1997-04-01 00:00:00', '23 Tsawassen Blvd.', 672, NULL),
(10493, 'LAMAI', '1997-04-02 00:00:00', '1 rue Alsace-Lorraine', 676, NULL),
(10494, 'COMMI', '1997-04-02 00:00:00', 'Av. dos Lusíadas, 23', 912, NULL),
(10495, 'LAUGB', '1997-04-03 00:00:00', '2319 Elm St.', 278, NULL),
(10496, 'TRADH', '1997-04-04 00:00:00', 'Av. Inês de Castro, 414', 200, NULL),
(10497, 'LEHMS', '1997-04-04 00:00:00', 'Magazinweg 7', 685.6, NULL),
(10498, 'HILAA', '1997-04-07 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 155, NULL),
(10499, 'LILAS', '1997-04-08 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 1412, NULL),
(10500, 'LAMAI', '1997-04-09 00:00:00', '1 rue Alsace-Lorraine', 550.8, NULL),
(10501, 'BLAUS', '1997-04-09 00:00:00', 'Forsterstr. 57', 149, NULL),
(10502, 'PERIC', '1997-04-10 00:00:00', 'Calle Dr. Jorge Cash 321', 816.3, NULL),
(10503, 'HUNGO', '1997-04-11 00:00:00', '8 Johnstown Road', 2048.5, NULL),
(10504, 'WHITC', '1997-04-11 00:00:00', '1029 - 12th Ave. S.', 1388.5, NULL),
(10505, 'MEREP', '1997-04-14 00:00:00', '43 rue St. Laurent', 147.9, NULL),
(10506, 'KOENE', '1997-04-15 00:00:00', 'Maubelstr. 90', 462, NULL),
(10507, 'ANTON', '1997-04-15 00:00:00', 'Mataderos  2312', 881.25, NULL),
(10508, 'OTTIK', '1997-04-16 00:00:00', 'Mehrheimerstr. 369', 240, NULL),
(10509, 'BLAUS', '1997-04-17 00:00:00', 'Forsterstr. 57', 136.8, NULL),
(10510, 'SAVEA', '1997-04-18 00:00:00', '187 Suffolk Ln.', 4735.44, NULL),
(10511, 'BONAP', '1997-04-18 00:00:00', '12, rue des Bouchers', 3000, NULL),
(10512, 'FAMIA', '1997-04-21 00:00:00', 'Rua Orós, 92', 618, NULL),
(10513, 'WANDK', '1997-04-22 00:00:00', 'Adenauerallee 900', 2427.5, NULL),
(10514, 'ERNSH', '1997-04-22 00:00:00', 'Kirchgasse 6', 8623.45, NULL),
(10515, 'QUICK', '1997-04-23 00:00:00', 'Taucherstraße 10', 11436.5, NULL),
(10516, 'HUNGO', '1997-04-24 00:00:00', '8 Johnstown Road', 2334.5, NULL),
(10517, 'NORTS', '1997-04-24 00:00:00', 'South House 300 Queensbridge', 352, NULL),
(10518, 'TORTU', '1997-04-25 00:00:00', 'Avda. Azteca 123', 4150.05, NULL),
(10519, 'CHOPS', '1997-04-28 00:00:00', 'Hauptstr. 31', 2356, NULL),
(10520, 'SANTG', '1997-04-29 00:00:00', 'Erling Skakkes gate 78', 200, NULL),
(10521, 'CACTU', '1997-04-29 00:00:00', 'Cerrito 333', 225.5, NULL),
(10522, 'LEHMS', '1997-04-30 00:00:00', 'Magazinweg 7', 2657.8, NULL),
(10523, 'SEVES', '1997-05-01 00:00:00', '90 Wadhurst Rd.', 2715.9, NULL),
(10524, 'BERGS', '1997-05-01 00:00:00', 'Berguvsvägen  8', 3192.65, NULL),
(10525, 'BONAP', '1997-05-02 00:00:00', '12, rue des Bouchers', 846, NULL),
(10526, 'WARTH', '1997-05-05 00:00:00', 'Torikatu 38', 1344, NULL),
(10527, 'QUICK', '1997-05-05 00:00:00', 'Taucherstraße 10', 1670, NULL),
(10528, 'GREAL', '1997-05-06 00:00:00', '2732 Baker Blvd.', 20, NULL),
(10529, 'MAISD', '1997-05-07 00:00:00', 'Rue Joseph-Bens 532', 946, NULL),
(10530, 'PICCO', '1997-05-08 00:00:00', 'Geislweg 14', 4180, NULL),
(10531, 'OCEAN', '1997-05-08 00:00:00', 'Ing. Gustavo Moncada 8585 Piso 20-A', 110, NULL),
(10532, 'EASTC', '1997-05-09 00:00:00', '35 King George', 796.35, NULL),
(10533, 'FOLKO', '1997-05-12 00:00:00', 'Åkergatan 24', 1460, NULL),
(10534, 'LEHMS', '1997-05-12 00:00:00', 'Magazinweg 7', 517.4, NULL),
(10535, 'ANTON', '1997-05-13 00:00:00', 'Mataderos  2312', 1106.5, NULL),
(10536, 'LEHMS', '1997-05-14 00:00:00', 'Magazinweg 7', 2085, NULL),
(10537, 'RICSU', '1997-05-14 00:00:00', 'Starenweg 5', 1093, NULL),
(10538, 'BSBEV', '1997-05-15 00:00:00', 'Fauntleroy Circus', 105, NULL),
(10539, 'BSBEV', '1997-05-16 00:00:00', 'Fauntleroy Circus', 355.5, NULL),
(10540, 'QUICK', '1997-05-19 00:00:00', 'Taucherstraße 10', 10191.7, NULL),
(10541, 'HANAR', '1997-05-19 00:00:00', 'Rua do Paço, 67', 2162.8, NULL),
(10542, 'KOENE', '1997-05-20 00:00:00', 'Maubelstr. 90', 178.8, NULL),
(10543, 'LILAS', '1997-05-21 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 1770, NULL),
(10544, 'LONEP', '1997-05-21 00:00:00', '89 Chiaroscuro Rd.', 417.2, NULL),
(10545, 'LAZYK', '1997-05-22 00:00:00', '12 Orchestra Terrace', 0, NULL),
(10546, 'VICTE', '1997-05-23 00:00:00', '2, rue du Commerce', 2812, NULL),
(10547, 'SEVES', '1997-05-23 00:00:00', '90 Wadhurst Rd.', 1908, NULL),
(10548, 'TOMSP', '1997-05-26 00:00:00', 'Luisenstr. 48', 275.1, NULL),
(10549, 'QUICK', '1997-05-27 00:00:00', 'Taucherstraße 10', 4181.5, NULL),
(10550, 'GODOS', '1997-05-28 00:00:00', 'C/ Romero, 33', 749, NULL),
(10551, 'FURIB', '1997-05-28 00:00:00', 'Jardim das rosas n. 32', 1836, NULL),
(10552, 'HILAA', '1997-05-29 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 880.5, NULL),
(10553, 'WARTH', '1997-05-30 00:00:00', 'Torikatu 38', 1231.3, NULL),
(10554, 'OTTIK', '1997-05-30 00:00:00', 'Mehrheimerstr. 369', 1819.5, NULL),
(10555, 'SAVEA', '1997-06-02 00:00:00', '187 Suffolk Ln.', 3680.5, NULL),
(10556, 'SIMOB', '1997-06-03 00:00:00', 'Vinbæltet 34', 0, NULL),
(10557, 'LEHMS', '1997-06-03 00:00:00', 'Magazinweg 7', 1152.5, NULL),
(10558, 'AROUT', '1997-06-04 00:00:00', 'Brook Farm Stratford St. Mary', 2142.9, NULL),
(10559, 'BLONP', '1997-06-05 00:00:00', '24, place Kléber', 547.8, NULL),
(10560, 'FRANK', '1997-06-06 00:00:00', 'Berliner Platz 43', 1257.3, NULL),
(10561, 'FOLKO', '1997-06-06 00:00:00', 'Åkergatan 24', 2844.5, NULL),
(10562, 'REGGC', '1997-06-09 00:00:00', 'Strada Provinciale 124', 543, NULL),
(10563, 'RICAR', '1997-06-10 00:00:00', 'Av. Copacabana, 267', 965, NULL),
(10564, 'RATTC', '1997-06-10 00:00:00', '2817 Milton Dr.', 1299, NULL),
(10565, 'MEREP', '1997-06-11 00:00:00', '43 rue St. Laurent', 711, NULL),
(10566, 'BLONP', '1997-06-12 00:00:00', '24, place Kléber', 1305, NULL),
(10567, 'HUNGO', '1997-06-12 00:00:00', '8 Johnstown Road', 3109, NULL),
(10568, 'GALED', '1997-06-13 00:00:00', 'Rambla de Cataluña, 23', 155, NULL),
(10569, 'RATTC', '1997-06-16 00:00:00', '2817 Milton Dr.', 977.5, NULL),
(10570, 'MEREP', '1997-06-17 00:00:00', '43 rue St. Laurent', 2280, NULL),
(10571, 'ERNSH', '1997-06-17 00:00:00', 'Kirchgasse 6', 255.75, NULL),
(10572, 'BERGS', '1997-06-18 00:00:00', 'Berguvsvägen  8', 1565.65, NULL),
(10573, 'ANTON', '1997-06-19 00:00:00', 'Mataderos  2312', 2082, NULL),
(10574, 'TRAIH', '1997-06-19 00:00:00', '722 DaVinci Blvd.', 764.3, NULL),
(10575, 'MORGK', '1997-06-20 00:00:00', 'Heerstr. 22', 1103.4, NULL),
(10576, 'TORTU', '1997-06-23 00:00:00', 'Avda. Azteca 123', 838.45, NULL),
(10577, 'TRAIH', '1997-06-23 00:00:00', '722 DaVinci Blvd.', 569, NULL),
(10578, 'BSBEV', '1997-06-24 00:00:00', 'Fauntleroy Circus', 477, NULL),
(10579, 'LETSS', '1997-06-25 00:00:00', '87 Polk St. Suite 5', 317.75, NULL),
(10580, 'OTTIK', '1997-06-26 00:00:00', 'Mehrheimerstr. 369', 1067.1, NULL),
(10581, 'FAMIA', '1997-06-26 00:00:00', 'Rua Orós, 92', 387.5, NULL),
(10582, 'BLAUS', '1997-06-27 00:00:00', 'Forsterstr. 57', 330, NULL),
(10583, 'WARTH', '1997-06-30 00:00:00', 'Torikatu 38', 2413.9, NULL),
(10584, 'BLONP', '1997-06-30 00:00:00', '24, place Kléber', 625, NULL),
(10585, 'WELLI', '1997-07-01 00:00:00', 'Rua do Mercado, 12', 142.5, NULL),
(10586, 'REGGC', '1997-07-02 00:00:00', 'Strada Provinciale 124', 28, NULL),
(10587, 'QUEDE', '1997-07-02 00:00:00', 'Rua da Panificadora, 12', 807.38, NULL),
(10588, 'QUICK', '1997-07-03 00:00:00', 'Taucherstraße 10', 2500, NULL),
(10589, 'GREAL', '1997-07-04 00:00:00', '2732 Baker Blvd.', 72, NULL),
(10590, 'MEREP', '1997-07-07 00:00:00', '43 rue St. Laurent', 1140, NULL),
(10591, 'VAFFE', '1997-07-07 00:00:00', 'Smagsloget 45', 812.5, NULL),
(10592, 'LEHMS', '1997-07-08 00:00:00', 'Magazinweg 7', 543.65, NULL),
(10593, 'LEHMS', '1997-07-09 00:00:00', 'Magazinweg 7', 2493, NULL),
(10594, 'OLDWO', '1997-07-09 00:00:00', '2743 Bering St.', 565.5, NULL),
(10595, 'ERNSH', '1997-07-10 00:00:00', 'Kirchgasse 6', 6300, NULL),
(10596, 'WHITC', '1997-07-11 00:00:00', '1029 - 12th Ave. S.', 1476.1, NULL),
(10597, 'PICCO', '1997-07-11 00:00:00', 'Geislweg 14', 800.1, NULL),
(10598, 'RATTC', '1997-07-14 00:00:00', '2817 Milton Dr.', 2388.5, NULL),
(10599, 'BSBEV', '1997-07-15 00:00:00', 'Fauntleroy Circus', 493, NULL),
(10600, 'HUNGC', '1997-07-16 00:00:00', 'City Center Plaza 516 Main St.', 479.8, NULL),
(10601, 'HILAA', '1997-07-16 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 2285, NULL),
(10602, 'VAFFE', '1997-07-17 00:00:00', 'Smagsloget 45', 65, NULL),
(10603, 'SAVEA', '1997-07-18 00:00:00', '187 Suffolk Ln.', 1508, NULL),
(10604, 'FURIB', '1997-07-18 00:00:00', 'Jardim das rosas n. 32', 256.5, NULL),
(10605, 'MEREP', '1997-07-21 00:00:00', '43 rue St. Laurent', 4326, NULL),
(10606, 'TRADH', '1997-07-22 00:00:00', 'Av. Inês de Castro, 414', 1413, NULL),
(10607, 'SAVEA', '1997-07-22 00:00:00', '187 Suffolk Ln.', 6057.8, NULL),
(10608, 'TOMSP', '1997-07-23 00:00:00', 'Luisenstr. 48', 1064, NULL),
(10609, 'DUMON', '1997-07-24 00:00:00', '67, rue des Cinquante Otages', 424, NULL),
(10610, 'LAMAI', '1997-07-25 00:00:00', '1 rue Alsace-Lorraine', 399, NULL),
(10611, 'WOLZA', '1997-07-25 00:00:00', 'ul. Filtrowa 68', 808, NULL),
(10612, 'SAVEA', '1997-07-28 00:00:00', '187 Suffolk Ln.', 6375, NULL),
(10613, 'HILAA', '1997-07-29 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 358, NULL),
(10614, 'BLAUS', '1997-07-29 00:00:00', 'Forsterstr. 57', 170, NULL),
(10615, 'WILMK', '1997-07-30 00:00:00', 'Keskuskatu 45', 120, NULL),
(10616, 'GREAL', '1997-07-31 00:00:00', '2732 Baker Blvd.', 5032, NULL),
(10617, 'GREAL', '1997-07-31 00:00:00', '2732 Baker Blvd.', 1650, NULL),
(10618, 'MEREP', '1997-08-01 00:00:00', '43 rue St. Laurent', 2697.5, NULL),
(10619, 'MEREP', '1997-08-04 00:00:00', '43 rue St. Laurent', 1260, NULL),
(10620, 'LAUGB', '1997-08-05 00:00:00', '2319 Elm St.', 57.5, NULL),
(10621, 'ISLAT', '1997-08-05 00:00:00', 'Garden House Crowther Way', 758.5, NULL),
(10622, 'RICAR', '1997-08-06 00:00:00', 'Av. Copacabana, 267', 605, NULL),
(10623, 'FRANK', '1997-08-07 00:00:00', 'Berliner Platz 43', 1429.75, NULL),
(10624, 'THECR', '1997-08-07 00:00:00', '55 Grizzly Peak Rd.', 1393.24, NULL),
(10625, 'ANATR', '1997-08-08 00:00:00', 'Avda. de la Constitución 2222', 409.75, NULL),
(10626, 'BERGS', '1997-08-11 00:00:00', 'Berguvsvägen  8', 1503.6, NULL),
(10627, 'SAVEA', '1997-08-11 00:00:00', '187 Suffolk Ln.', 1264.5, NULL),
(10628, 'BLONP', '1997-08-12 00:00:00', '24, place Kléber', 450, NULL),
(10629, 'GODOS', '1997-08-12 00:00:00', 'C/ Romero, 33', 2775.05, NULL),
(10630, 'KOENE', '1997-08-13 00:00:00', 'Maubelstr. 90', 918, NULL),
(10631, 'LAMAI', '1997-08-14 00:00:00', '1 rue Alsace-Lorraine', 62, NULL),
(10632, 'WANDK', '1997-08-14 00:00:00', 'Adenauerallee 900', 620, NULL),
(10633, 'ERNSH', '1997-08-15 00:00:00', 'Kirchgasse 6', 6483.05, NULL),
(10634, 'FOLIG', '1997-08-15 00:00:00', '184, chaussée de Tournai', 4985.5, NULL),
(10635, 'MAGAA', '1997-08-18 00:00:00', 'Via Ludovico il Moro 22', 1060, NULL),
(10636, 'WARTH', '1997-08-19 00:00:00', 'Torikatu 38', 629.5, NULL),
(10637, 'QUEEN', '1997-08-19 00:00:00', 'Alameda dos Canàrios, 891', 2686.25, NULL),
(10638, 'LINOD', '1997-08-20 00:00:00', 'Ave. 5 de Mayo Porlamar', 632.05, NULL),
(10639, 'SANTG', '1997-08-20 00:00:00', 'Erling Skakkes gate 78', 500, NULL),
(10640, 'WANDK', '1997-08-21 00:00:00', 'Adenauerallee 900', 945, NULL),
(10641, 'HILAA', '1997-08-22 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 2054, NULL),
(10642, 'SIMOB', '1997-08-22 00:00:00', 'Vinbæltet 34', 870, NULL),
(10643, 'ALFKI', '1997-08-25 00:00:00', 'Obere Str. 57', 1086, NULL),
(10644, 'WELLI', '1997-08-25 00:00:00', 'Rua do Mercado, 12', 1422, NULL),
(10645, 'HANAR', '1997-08-26 00:00:00', 'Rua do Paço, 67', 1535, NULL),
(10646, 'HUNGO', '1997-08-27 00:00:00', '8 Johnstown Road', 1928, NULL),
(10647, 'QUEDE', '1997-08-27 00:00:00', 'Rua da Panificadora, 12', 636, NULL),
(10648, 'RICAR', '1997-08-28 00:00:00', 'Av. Copacabana, 267', 382.5, NULL),
(10649, 'MAISD', '1997-08-28 00:00:00', 'Rue Joseph-Bens 532', 912, NULL),
(10650, 'FAMIA', '1997-08-29 00:00:00', 'Rua Orós, 92', 1820.2, NULL),
(10651, 'WANDK', '1997-09-01 00:00:00', 'Adenauerallee 900', 530.4, NULL),
(10652, 'GOURL', '1997-09-01 00:00:00', 'Av. Brasil, 442', 51.78, NULL),
(10653, 'FRANK', '1997-09-02 00:00:00', 'Berliner Platz 43', 1203.5, NULL),
(10654, 'BERGS', '1997-09-02 00:00:00', 'Berguvsvägen  8', 668.7, NULL),
(10655, 'REGGC', '1997-09-03 00:00:00', 'Strada Provinciale 124', 193, NULL),
(10656, 'GREAL', '1997-09-04 00:00:00', '2732 Baker Blvd.', 671.35, NULL),
(10657, 'SAVEA', '1997-09-04 00:00:00', '187 Suffolk Ln.', 4371.6, NULL),
(10658, 'QUICK', '1997-09-05 00:00:00', 'Taucherstraße 10', 4668, NULL),
(10659, 'QUEEN', '1997-09-05 00:00:00', 'Alameda dos Canàrios, 891', 1291.6, NULL),
(10660, 'HUNGC', '1997-09-08 00:00:00', 'City Center Plaza 516 Main St.', 1701, NULL),
(10661, 'HUNGO', '1997-09-09 00:00:00', '8 Johnstown Road', 703.25, NULL),
(10662, 'LONEP', '1997-09-09 00:00:00', '89 Chiaroscuro Rd.', 125, NULL),
(10663, 'BONAP', '1997-09-10 00:00:00', '12, rue des Bouchers', 1612, NULL),
(10664, 'FURIB', '1997-09-10 00:00:00', 'Jardim das rosas n. 32', 1515.75, NULL),
(10665, 'LONEP', '1997-09-11 00:00:00', '89 Chiaroscuro Rd.', 1295, NULL),
(10666, 'RICSU', '1997-09-12 00:00:00', 'Starenweg 5', 4666.94, NULL),
(10667, 'ERNSH', '1997-09-12 00:00:00', 'Kirchgasse 6', 1921, NULL),
(10668, 'WANDK', '1997-09-15 00:00:00', 'Adenauerallee 900', 694.75, NULL),
(10669, 'SIMOB', '1997-09-15 00:00:00', 'Vinbæltet 34', 570, NULL),
(10670, 'FRANK', '1997-09-16 00:00:00', 'Berliner Platz 43', 2301.75, NULL),
(10671, 'FRANR', '1997-09-17 00:00:00', '54, rue Royale', 920.1, NULL),
(10672, 'BERGS', '1997-09-17 00:00:00', 'Berguvsvägen  8', 4210.5, NULL),
(10673, 'WILMK', '1997-09-18 00:00:00', 'Keskuskatu 45', 328.35, NULL),
(10674, 'ISLAT', '1997-09-18 00:00:00', 'Garden House Crowther Way', 45, NULL),
(10675, 'FRANK', '1997-09-19 00:00:00', 'Berliner Platz 43', 1423, NULL),
(10676, 'TORTU', '1997-09-22 00:00:00', 'Avda. Azteca 123', 534.85, NULL),
(10677, 'ANTON', '1997-09-22 00:00:00', 'Mataderos  2312', 956.9, NULL),
(10678, 'SAVEA', '1997-09-23 00:00:00', '187 Suffolk Ln.', 5256.5, NULL),
(10679, 'BLONP', '1997-09-23 00:00:00', '24, place Kléber', 660, NULL),
(10680, 'OLDWO', '1997-09-24 00:00:00', '2743 Bering St.', 1122.5, NULL),
(10681, 'GREAL', '1997-09-25 00:00:00', '2732 Baker Blvd.', 1327, NULL),
(10682, 'ANTON', '1997-09-25 00:00:00', 'Mataderos  2312', 375.5, NULL),
(10683, 'DUMON', '1997-09-26 00:00:00', '67, rue des Cinquante Otages', 63, NULL),
(10684, 'OTTIK', '1997-09-26 00:00:00', 'Mehrheimerstr. 369', 1768, NULL),
(10685, 'GOURL', '1997-09-29 00:00:00', 'Av. Brasil, 442', 801.1, NULL),
(10686, 'PICCO', '1997-09-30 00:00:00', 'Geislweg 14', 1638.45, NULL),
(10687, 'HUNGO', '1997-09-30 00:00:00', '8 Johnstown Road', 8851.9, NULL),
(10688, 'VAFFE', '1997-10-01 00:00:00', 'Smagsloget 45', 3490, NULL),
(10689, 'BERGS', '1997-10-01 00:00:00', 'Berguvsvägen  8', 630, NULL),
(10690, 'HANAR', '1997-10-02 00:00:00', 'Rua do Paço, 67', 1150, NULL),
(10691, 'QUICK', '1997-10-03 00:00:00', 'Taucherstraße 10', 10164.8, NULL),
(10692, 'ALFKI', '1997-10-03 00:00:00', 'Obere Str. 57', 878, NULL),
(10693, 'WHITC', '1997-10-06 00:00:00', '1029 - 12th Ave. S.', 2652, NULL),
(10694, 'QUICK', '1997-10-06 00:00:00', 'Taucherstraße 10', 4825, NULL),
(10695, 'WILMK', '1997-10-07 00:00:00', 'Keskuskatu 45', 642, NULL),
(10696, 'WHITC', '1997-10-08 00:00:00', '1029 - 12th Ave. S.', 996, NULL),
(10697, 'LINOD', '1997-10-08 00:00:00', 'Ave. 5 de Mayo Porlamar', 1073.9, NULL),
(10698, 'ERNSH', '1997-10-09 00:00:00', 'Kirchgasse 6', 3285.73, NULL),
(10699, 'MORGK', '1997-10-09 00:00:00', 'Heerstr. 22', 114, NULL),
(10700, 'SAVEA', '1997-10-10 00:00:00', '187 Suffolk Ln.', 2048, NULL),
(10701, 'HUNGO', '1997-10-13 00:00:00', '8 Johnstown Road', 3370, NULL),
(10702, 'ALFKI', '1997-10-13 00:00:00', 'Obere Str. 57', 330, NULL),
(10703, 'FOLKO', '1997-10-14 00:00:00', 'Åkergatan 24', 2545, NULL),
(10704, 'QUEEN', '1997-10-14 00:00:00', 'Alameda dos Canàrios, 891', 595.5, NULL),
(10705, 'HILAA', '1997-10-15 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 378, NULL),
(10706, 'OLDWO', '1997-10-16 00:00:00', '2743 Bering St.', 1893, NULL),
(10707, 'AROUT', '1997-10-16 00:00:00', 'Brook Farm Stratford St. Mary', 1704, NULL),
(10708, 'THEBI', '1997-10-17 00:00:00', '89 Jefferson Way Suite 2', 95, NULL),
(10709, 'GOURL', '1997-10-17 00:00:00', 'Av. Brasil, 442', 3424, NULL),
(10710, 'FRANS', '1997-10-20 00:00:00', 'Via Monte Bianco 34', 93.5, NULL),
(10711, 'SAVEA', '1997-10-21 00:00:00', '187 Suffolk Ln.', 4451.7, NULL),
(10712, 'HUNGO', '1997-10-21 00:00:00', '8 Johnstown Road', 1238.4, NULL),
(10713, 'SAVEA', '1997-10-22 00:00:00', '187 Suffolk Ln.', 2827.9, NULL),
(10714, 'SAVEA', '1997-10-22 00:00:00', '187 Suffolk Ln.', 2941, NULL),
(10715, 'BONAP', '1997-10-23 00:00:00', '12, rue des Bouchers', 1296, NULL),
(10716, 'RANCH', '1997-10-24 00:00:00', 'Av. del Libertador 900', 706, NULL),
(10717, 'FRANK', '1997-10-24 00:00:00', 'Berliner Platz 43', 1331.75, NULL),
(10718, 'KOENE', '1997-10-27 00:00:00', 'Maubelstr. 90', 3463, NULL),
(10719, 'LETSS', '1997-10-27 00:00:00', '87 Polk St. Suite 5', 1125.67, NULL),
(10720, 'QUEDE', '1997-10-28 00:00:00', 'Rua da Panificadora, 12', 550, NULL),
(10721, 'QUICK', '1997-10-29 00:00:00', 'Taucherstraße 10', 972.5, NULL),
(10722, 'SAVEA', '1997-10-29 00:00:00', '187 Suffolk Ln.', 1570, NULL),
(10723, 'WHITC', '1997-10-30 00:00:00', '1029 - 12th Ave. S.', 468.45, NULL),
(10724, 'MEREP', '1997-10-30 00:00:00', '43 rue St. Laurent', 638.5, NULL),
(10725, 'FAMIA', '1997-10-31 00:00:00', 'Rua Orós, 92', 287.8, NULL),
(10726, 'EASTC', '1997-11-03 00:00:00', '35 King George', 550, NULL),
(10727, 'REGGC', '1997-11-03 00:00:00', 'Strada Provinciale 124', 1710, NULL),
(10728, 'QUEEN', '1997-11-04 00:00:00', 'Alameda dos Canàrios, 891', 1296.75, NULL),
(10729, 'LINOD', '1997-11-04 00:00:00', 'Ave. 5 de Mayo Porlamar', 1850, NULL),
(10730, 'BONAP', '1997-11-05 00:00:00', '12, rue des Bouchers', 509.75, NULL),
(10731, 'CHOPS', '1997-11-06 00:00:00', 'Hauptstr. 31', 1990, NULL),
(10732, 'BONAP', '1997-11-06 00:00:00', '12, rue des Bouchers', 360, NULL),
(10733, 'BERGS', '1997-11-07 00:00:00', 'Berguvsvägen  8', 1459, NULL),
(10734, 'GOURL', '1997-11-07 00:00:00', 'Av. Brasil, 442', 1498.35, NULL),
(10735, 'LETSS', '1997-11-10 00:00:00', '87 Polk St. Suite 5', 596, NULL),
(10736, 'HUNGO', '1997-11-11 00:00:00', '8 Johnstown Road', 997, NULL),
(10737, 'VINET', '1997-11-11 00:00:00', '59 rue de l\'Abbaye', 139.8, NULL),
(10738, 'SPECD', '1997-11-12 00:00:00', '25, rue Lauriston', 52.35, NULL),
(10739, 'VINET', '1997-11-12 00:00:00', '59 rue de l\'Abbaye', 240, NULL),
(10740, 'WHITC', '1997-11-13 00:00:00', '1029 - 12th Ave. S.', 1770, NULL),
(10741, 'AROUT', '1997-11-14 00:00:00', 'Brook Farm Stratford St. Mary', 285, NULL),
(10742, 'BOTTM', '1997-11-14 00:00:00', '23 Tsawassen Blvd.', 1900, NULL),
(10743, 'AROUT', '1997-11-17 00:00:00', 'Brook Farm Stratford St. Mary', 336, NULL),
(10744, 'VAFFE', '1997-11-17 00:00:00', 'Smagsloget 45', 920, NULL),
(10745, 'QUICK', '1997-11-18 00:00:00', 'Taucherstraße 10', 4286.2, NULL),
(10746, 'CHOPS', '1997-11-19 00:00:00', 'Hauptstr. 31', 1919.7, NULL),
(10747, 'PICCO', '1997-11-19 00:00:00', 'Geislweg 14', 1912.85, NULL),
(10748, 'SAVEA', '1997-11-20 00:00:00', '187 Suffolk Ln.', 2196, NULL),
(10749, 'ISLAT', '1997-11-20 00:00:00', 'Garden House Crowther Way', 1080, NULL),
(10750, 'WARTH', '1997-11-21 00:00:00', 'Torikatu 38', 1871.25, NULL),
(10751, 'RICSU', '1997-11-24 00:00:00', 'Starenweg 5', 1701.46, NULL),
(10752, 'NORTS', '1997-11-24 00:00:00', 'South House 300 Queensbridge', 252, NULL),
(10753, 'FRANS', '1997-11-25 00:00:00', 'Via Monte Bianco 34', 88, NULL),
(10754, 'MAGAA', '1997-11-25 00:00:00', 'Via Ludovico il Moro 22', 55.2, NULL),
(10755, 'BONAP', '1997-11-26 00:00:00', '12, rue des Bouchers', 2598, NULL),
(10756, 'SPLIR', '1997-11-27 00:00:00', 'P.O. Box 555', 2487.5, NULL),
(10757, 'SAVEA', '1997-11-27 00:00:00', '187 Suffolk Ln.', 3082, NULL),
(10758, 'RICSU', '1997-11-28 00:00:00', 'Starenweg 5', 1644.6, NULL),
(10759, 'ANATR', '1997-11-28 00:00:00', 'Avda. de la Constitución 2222', 320, NULL),
(10760, 'MAISD', '1997-12-01 00:00:00', 'Rue Joseph-Bens 532', 3304, NULL),
(10761, 'RATTC', '1997-12-02 00:00:00', '2817 Milton Dr.', 629.5, NULL),
(10762, 'FOLKO', '1997-12-02 00:00:00', 'Åkergatan 24', 4337, NULL),
(10763, 'FOLIG', '1997-12-03 00:00:00', '184, chaussée de Tournai', 616, NULL),
(10764, 'ERNSH', '1997-12-03 00:00:00', 'Kirchgasse 6', 2540, NULL),
(10765, 'QUICK', '1997-12-04 00:00:00', 'Taucherstraße 10', 1684, NULL),
(10766, 'OTTIK', '1997-12-05 00:00:00', 'Mehrheimerstr. 369', 2310, NULL),
(10767, 'SUPRD', '1997-12-05 00:00:00', 'Boulevard Tirou, 255', 0, NULL),
(10768, 'AROUT', '1997-12-08 00:00:00', 'Brook Farm Stratford St. Mary', 1477, NULL),
(10769, 'VAFFE', '1997-12-08 00:00:00', 'Smagsloget 45', 1704, NULL),
(10770, 'HANAR', '1997-12-09 00:00:00', 'Rua do Paço, 67', 0, NULL),
(10771, 'ERNSH', '1997-12-10 00:00:00', 'Kirchgasse 6', 344, NULL),
(10772, 'LEHMS', '1997-12-10 00:00:00', 'Magazinweg 7', 3603.22, NULL),
(10773, 'ERNSH', '1997-12-11 00:00:00', 'Kirchgasse 6', 2216.25, NULL),
(10774, 'FOLKO', '1997-12-11 00:00:00', 'Åkergatan 24', 875, NULL),
(10775, 'THECR', '1997-12-12 00:00:00', '55 Grizzly Peak Rd.', 228, NULL),
(10776, 'ERNSH', '1997-12-15 00:00:00', 'Kirchgasse 6', 6816.5, NULL),
(10777, 'GOURL', '1997-12-15 00:00:00', 'Av. Brasil, 442', 0, NULL),
(10778, 'BERGS', '1997-12-16 00:00:00', 'Berguvsvägen  8', 96.5, NULL),
(10779, 'MORGK', '1997-12-16 00:00:00', 'Heerstr. 22', 1335, NULL),
(10780, 'LILAS', '1997-12-16 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 720, NULL),
(10781, 'WARTH', '1997-12-17 00:00:00', 'Torikatu 38', 1132.35, NULL),
(10782, 'CACTU', '1997-12-17 00:00:00', 'Cerrito 333', 12.5, NULL),
(10783, 'HANAR', '1997-12-18 00:00:00', 'Rua do Paço, 67', 1442.5, NULL),
(10784, 'MAGAA', '1997-12-18 00:00:00', 'Via Ludovico il Moro 22', 606, NULL),
(10785, 'GROSR', '1997-12-18 00:00:00', '5ª Ave. Los Palos Grandes', 387.5, NULL),
(10786, 'QUEEN', '1997-12-19 00:00:00', 'Alameda dos Canàrios, 891', 1913.85, NULL),
(10787, 'LAMAI', '1997-12-19 00:00:00', '1 rue Alsace-Lorraine', 2760.8, NULL),
(10788, 'QUICK', '1997-12-22 00:00:00', 'Taucherstraße 10', 770, NULL),
(10789, 'FOLIG', '1997-12-22 00:00:00', '184, chaussée de Tournai', 3687, NULL),
(10790, 'GOURL', '1997-12-22 00:00:00', 'Av. Brasil, 442', 850, NULL),
(10791, 'FRANK', '1997-12-23 00:00:00', 'Berliner Platz 43', 1926.06, NULL),
(10792, 'WOLZA', '1997-12-23 00:00:00', 'ul. Filtrowa 68', 399.85, NULL),
(10793, 'AROUT', '1997-12-24 00:00:00', 'Brook Farm Stratford St. Mary', 191.1, NULL),
(10794, 'QUEDE', '1997-12-24 00:00:00', 'Rua da Panificadora, 12', 393.45, NULL),
(10795, 'ERNSH', '1997-12-24 00:00:00', 'Kirchgasse 6', 2499.25, NULL),
(10796, 'HILAA', '1997-12-25 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 2878.08, NULL),
(10797, 'DRACD', '1997-12-25 00:00:00', 'Walserweg 21', 0, NULL),
(10798, 'ISLAT', '1997-12-26 00:00:00', 'Garden House Crowther Way', 98.6, NULL),
(10799, 'KOENE', '1997-12-26 00:00:00', 'Maubelstr. 90', 1585, NULL),
(10800, 'SEVES', '1997-12-26 00:00:00', '90 Wadhurst Rd.', 582.15, NULL),
(10801, 'BOLID', '1997-12-29 00:00:00', 'C/ Araquil, 67', 4035.8, NULL),
(10802, 'SIMOB', '1997-12-29 00:00:00', 'Vinbæltet 34', 3923.75, NULL),
(10803, 'WELLI', '1997-12-30 00:00:00', 'Rua do Mercado, 12', 1255.8, NULL),
(10804, 'SEVES', '1997-12-30 00:00:00', '90 Wadhurst Rd.', 2290.4, NULL),
(10805, 'THEBI', '1997-12-30 00:00:00', '89 Jefferson Way Suite 2', 2775, NULL),
(10806, 'VICTE', '1997-12-31 00:00:00', '2, rue du Commerce', 572.1, NULL),
(10807, 'FRANS', '1997-12-31 00:00:00', 'Via Monte Bianco 34', 18.4, NULL),
(10808, 'OLDWO', '1998-01-01 00:00:00', '2743 Bering St.', 1660, NULL),
(10809, 'WELLI', '1998-01-01 00:00:00', 'Rua do Mercado, 12', 140, NULL),
(10810, 'LAUGB', '1998-01-01 00:00:00', '2319 Elm St.', 187, NULL),
(10811, 'LINOD', '1998-01-02 00:00:00', 'Ave. 5 de Mayo Porlamar', 852, NULL),
(10812, 'REGGC', '1998-01-02 00:00:00', 'Strada Provinciale 124', 460, NULL),
(10813, 'RICAR', '1998-01-05 00:00:00', 'Av. Copacabana, 267', 648, NULL),
(10814, 'VICTE', '1998-01-05 00:00:00', '2, rue du Commerce', 2070, NULL),
(10815, 'SAVEA', '1998-01-05 00:00:00', '187 Suffolk Ln.', 40, NULL),
(10816, 'GREAL', '1998-01-06 00:00:00', '2732 Baker Blvd.', 8891, NULL),
(10817, 'KOENE', '1998-01-06 00:00:00', 'Maubelstr. 90', 11490.7, NULL),
(10818, 'MAGAA', '1998-01-07 00:00:00', 'Via Ludovico il Moro 22', 833, NULL),
(10819, 'CACTU', '1998-01-07 00:00:00', 'Cerrito 333', 477, NULL),
(10820, 'RATTC', '1998-01-07 00:00:00', '2817 Milton Dr.', 1140, NULL),
(10821, 'SPLIR', '1998-01-08 00:00:00', 'P.O. Box 555', 678, NULL),
(10822, 'TRAIH', '1998-01-08 00:00:00', '722 DaVinci Blvd.', 237.9, NULL),
(10823, 'LILAS', '1998-01-09 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 2687.5, NULL),
(10824, 'FOLKO', '1998-01-09 00:00:00', 'Åkergatan 24', 250.8, NULL),
(10825, 'DRACD', '1998-01-09 00:00:00', 'Walserweg 21', 1030.76, NULL),
(10826, 'BLONP', '1998-01-12 00:00:00', '24, place Kléber', 730, NULL),
(10827, 'BONAP', '1998-01-12 00:00:00', '12, rue des Bouchers', 843, NULL),
(10828, 'RANCH', '1998-01-13 00:00:00', 'Av. del Libertador 900', 932, NULL),
(10829, 'ISLAT', '1998-01-13 00:00:00', 'Garden House Crowther Way', 1764, NULL),
(10830, 'TRADH', '1998-01-13 00:00:00', 'Av. Inês de Castro, 414', 1974, NULL),
(10831, 'SANTG', '1998-01-14 00:00:00', 'Erling Skakkes gate 78', 2684.4, NULL),
(10832, 'LAMAI', '1998-01-14 00:00:00', '1 rue Alsace-Lorraine', 568.95, NULL),
(10833, 'OTTIK', '1998-01-15 00:00:00', 'Mehrheimerstr. 369', 1007.7, NULL),
(10834, 'TRADH', '1998-01-15 00:00:00', 'Av. Inês de Castro, 414', 1508.12, NULL),
(10835, 'ALFKI', '1998-01-15 00:00:00', 'Obere Str. 57', 851, NULL),
(10836, 'ERNSH', '1998-01-16 00:00:00', 'Kirchgasse 6', 4705.5, NULL),
(10837, 'BERGS', '1998-01-16 00:00:00', 'Berguvsvägen  8', 1254, NULL),
(10838, 'LINOD', '1998-01-19 00:00:00', 'Ave. 5 de Mayo Porlamar', 2584.5, NULL),
(10839, 'TRADH', '1998-01-19 00:00:00', 'Av. Inês de Castro, 414', 397.5, NULL),
(10840, 'LINOD', '1998-01-19 00:00:00', 'Ave. 5 de Mayo Porlamar', 264, NULL),
(10841, 'SUPRD', '1998-01-20 00:00:00', 'Boulevard Tirou, 255', 4581, NULL),
(10842, 'TORTU', '1998-01-20 00:00:00', 'Avda. Azteca 123', 660, NULL),
(10843, 'VICTE', '1998-01-21 00:00:00', '2, rue du Commerce', 212, NULL),
(10844, 'PICCO', '1998-01-21 00:00:00', 'Geislweg 14', 735, NULL),
(10845, 'QUICK', '1998-01-21 00:00:00', 'Taucherstraße 10', 3471, NULL),
(10846, 'SUPRD', '1998-01-22 00:00:00', 'Boulevard Tirou, 255', 1112, NULL),
(10847, 'SAVEA', '1998-01-22 00:00:00', '187 Suffolk Ln.', 6164.9, NULL),
(10848, 'CONSH', '1998-01-23 00:00:00', 'Berkeley Gardens 12  Brewery', 450, NULL),
(10849, 'KOENE', '1998-01-23 00:00:00', 'Maubelstr. 90', 1052.14, NULL),
(10850, 'VICTE', '1998-01-23 00:00:00', '2, rue du Commerce', 740, NULL),
(10851, 'RICAR', '1998-01-26 00:00:00', 'Av. Copacabana, 267', 2740, NULL),
(10852, 'RATTC', '1998-01-26 00:00:00', '2817 Milton Dr.', 2984, NULL),
(10853, 'BLAUS', '1998-01-27 00:00:00', 'Forsterstr. 57', 625, NULL),
(10854, 'ERNSH', '1998-01-27 00:00:00', 'Kirchgasse 6', 3490, NULL),
(10855, 'OLDWO', '1998-01-27 00:00:00', '2743 Bering St.', 2275.25, NULL),
(10856, 'ANTON', '1998-01-28 00:00:00', 'Mataderos  2312', 380, NULL),
(10857, 'BERGS', '1998-01-28 00:00:00', 'Berguvsvägen  8', 2630.95, NULL),
(10858, 'LACOR', '1998-01-29 00:00:00', '67, avenue de l\'Europe', 649, NULL),
(10859, 'FRANK', '1998-01-29 00:00:00', 'Berliner Platz 43', 1438.25, NULL),
(10860, 'FRANR', '1998-01-29 00:00:00', '54, rue Royale', 519, NULL),
(10861, 'WHITC', '1998-01-30 00:00:00', '1029 - 12th Ave. S.', 3523.4, NULL),
(10862, 'LEHMS', '1998-01-30 00:00:00', 'Magazinweg 7', 56, NULL),
(10863, 'HILAA', '1998-02-02 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 519, NULL),
(10864, 'AROUT', '1998-02-02 00:00:00', 'Brook Farm Stratford St. Mary', 282, NULL),
(10865, 'QUICK', '1998-02-02 00:00:00', 'Taucherstraße 10', 17250, NULL),
(10866, 'BERGS', '1998-02-03 00:00:00', 'Berguvsvägen  8', 1461.6, NULL),
(10867, 'LONEP', '1998-02-03 00:00:00', '89 Chiaroscuro Rd.', 98.4, NULL),
(10868, 'QUEEN', '1998-02-04 00:00:00', 'Alameda dos Canàrios, 891', 2004.6, NULL),
(10869, 'SEVES', '1998-02-04 00:00:00', '90 Wadhurst Rd.', 1420, NULL),
(10870, 'WOLZA', '1998-02-04 00:00:00', 'ul. Filtrowa 68', 160, NULL),
(10871, 'BONAP', '1998-02-05 00:00:00', '12, rue des Bouchers', 2083.4, NULL),
(10872, 'GODOS', '1998-02-05 00:00:00', 'C/ Romero, 33', 2166.8, NULL),
(10873, 'WILMK', '1998-02-06 00:00:00', 'Keskuskatu 45', 336.8, NULL),
(10874, 'GODOS', '1998-02-06 00:00:00', 'C/ Romero, 33', 310, NULL),
(10875, 'BERGS', '1998-02-06 00:00:00', 'Berguvsvägen  8', 729.5, NULL),
(10876, 'BONAP', '1998-02-09 00:00:00', '12, rue des Bouchers', 917, NULL),
(10877, 'RICAR', '1998-02-09 00:00:00', 'Av. Copacabana, 267', 2086, NULL),
(10878, 'QUICK', '1998-02-10 00:00:00', 'Taucherstraße 10', 1620, NULL),
(10879, 'WILMK', '1998-02-10 00:00:00', 'Keskuskatu 45', 611.3, NULL),
(10880, 'FOLKO', '1998-02-10 00:00:00', 'Åkergatan 24', 1875, NULL),
(10881, 'CACTU', '1998-02-11 00:00:00', 'Cerrito 333', 150, NULL),
(10882, 'SAVEA', '1998-02-11 00:00:00', '187 Suffolk Ln.', 638.4, NULL),
(10883, 'LONEP', '1998-02-12 00:00:00', '89 Chiaroscuro Rd.', 36, NULL),
(10884, 'LETSS', '1998-02-12 00:00:00', '87 Polk St. Suite 5', 1450.6, NULL),
(10885, 'SUPRD', '1998-02-12 00:00:00', 'Boulevard Tirou, 255', 1209, NULL),
(10886, 'HANAR', '1998-02-13 00:00:00', 'Rua do Paço, 67', 3127.5, NULL),
(10887, 'GALED', '1998-02-13 00:00:00', 'Rambla de Cataluña, 23', 70, NULL),
(10888, 'GODOS', '1998-02-16 00:00:00', 'C/ Romero, 33', 605, NULL),
(10889, 'RATTC', '1998-02-16 00:00:00', '2817 Milton Dr.', 10540, NULL),
(10890, 'DUMON', '1998-02-16 00:00:00', '67, rue des Cinquante Otages', 860.1, NULL),
(10891, 'LEHMS', '1998-02-17 00:00:00', 'Magazinweg 7', 388.35, NULL),
(10892, 'MAISD', '1998-02-17 00:00:00', 'Rue Joseph-Bens 532', 2200, NULL),
(10893, 'KOENE', '1998-02-18 00:00:00', 'Maubelstr. 90', 5502.11, NULL),
(10894, 'SAVEA', '1998-02-18 00:00:00', '187 Suffolk Ln.', 2898, NULL),
(10895, 'ERNSH', '1998-02-18 00:00:00', 'Kirchgasse 6', 6379.4, NULL),
(10896, 'MAISD', '1998-02-19 00:00:00', 'Rue Joseph-Bens 532', 750.5, NULL),
(10897, 'HUNGO', '1998-02-19 00:00:00', '8 Johnstown Road', 10835.2, NULL),
(10898, 'OCEAN', '1998-02-20 00:00:00', 'Ing. Gustavo Moncada 8585 Piso 20-A', 30, NULL),
(10899, 'LILAS', '1998-02-20 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 144, NULL),
(10900, 'WELLI', '1998-02-20 00:00:00', 'Rua do Mercado, 12', 45, NULL),
(10901, 'HILAA', '1998-02-23 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 934.5, NULL),
(10902, 'FOLKO', '1998-02-23 00:00:00', 'Åkergatan 24', 1015.8, NULL),
(10903, 'HANAR', '1998-02-24 00:00:00', 'Rua do Paço, 67', 932.05, NULL),
(10904, 'WHITC', '1998-02-24 00:00:00', '1029 - 12th Ave. S.', 1924.25, NULL),
(10905, 'WELLI', '1998-02-24 00:00:00', 'Rua do Mercado, 12', 360, NULL),
(10906, 'WOLZA', '1998-02-25 00:00:00', 'ul. Filtrowa 68', 427.5, NULL),
(10907, 'SPECD', '1998-02-25 00:00:00', '25, rue Lauriston', 108.5, NULL),
(10908, 'REGGC', '1998-02-26 00:00:00', 'Strada Provinciale 124', 698, NULL),
(10909, 'SANTG', '1998-02-26 00:00:00', 'Erling Skakkes gate 78', 670, NULL),
(10910, 'WILMK', '1998-02-26 00:00:00', 'Keskuskatu 45', 452.9, NULL),
(10911, 'GODOS', '1998-02-26 00:00:00', 'C/ Romero, 33', 858, NULL),
(10912, 'HUNGO', '1998-02-26 00:00:00', '8 Johnstown Road', 7427.4, NULL),
(10913, 'QUEEN', '1998-02-26 00:00:00', 'Alameda dos Canàrios, 891', 958.75, NULL),
(10914, 'QUEEN', '1998-02-27 00:00:00', 'Alameda dos Canàrios, 891', 537.5, NULL),
(10915, 'TORTU', '1998-02-27 00:00:00', 'Avda. Azteca 123', 539.5, NULL),
(10916, 'RANCH', '1998-02-27 00:00:00', 'Av. del Libertador 900', 686.7, NULL),
(10917, 'ROMEY', '1998-03-02 00:00:00', 'Gran Vía, 1', 365.89, NULL),
(10918, 'BOTTM', '1998-03-02 00:00:00', '23 Tsawassen Blvd.', 1930, NULL),
(10919, 'LINOD', '1998-03-02 00:00:00', 'Ave. 5 de Mayo Porlamar', 1122.8, NULL),
(10920, 'AROUT', '1998-03-03 00:00:00', 'Brook Farm Stratford St. Mary', 390, NULL),
(10921, 'VAFFE', '1998-03-03 00:00:00', 'Smagsloget 45', 1936, NULL),
(10922, 'HANAR', '1998-03-03 00:00:00', 'Rua do Paço, 67', 742.5, NULL),
(10923, 'LAMAI', '1998-03-03 00:00:00', '1 rue Alsace-Lorraine', 796, NULL),
(10924, 'BERGS', '1998-03-04 00:00:00', 'Berguvsvägen  8', 2034.5, NULL),
(10925, 'HANAR', '1998-03-04 00:00:00', 'Rua do Paço, 67', 559, NULL);
INSERT INTO `orders` (`Id`, `CustomerId`, `OrderDate`, `Address`, `Amount`, `Description`) VALUES
(10926, 'ANATR', '1998-03-04 00:00:00', 'Avda. de la Constitución 2222', 124.4, NULL),
(10927, 'LACOR', '1998-03-05 00:00:00', '67, avenue de l\'Europe', 800, NULL),
(10928, 'GALED', '1998-03-05 00:00:00', 'Rambla de Cataluña, 23', 137.5, NULL),
(10929, 'FRANK', '1998-03-05 00:00:00', 'Berliner Platz 43', 1174.75, NULL),
(10930, 'SUPRD', '1998-03-06 00:00:00', 'Boulevard Tirou, 255', 2455, NULL),
(10931, 'RICSU', '1998-03-06 00:00:00', 'Starenweg 5', 837, NULL),
(10932, 'BONAP', '1998-03-06 00:00:00', '12, rue des Bouchers', 1368.7, NULL),
(10933, 'ISLAT', '1998-03-06 00:00:00', 'Garden House Crowther Way', 920.6, NULL),
(10934, 'LEHMS', '1998-03-09 00:00:00', 'Magazinweg 7', 500, NULL),
(10935, 'WELLI', '1998-03-09 00:00:00', 'Rua do Mercado, 12', 700, NULL),
(10936, 'GREAL', '1998-03-09 00:00:00', '2732 Baker Blvd.', 570, NULL),
(10937, 'CACTU', '1998-03-10 00:00:00', 'Cerrito 333', 644.8, NULL),
(10938, 'QUICK', '1998-03-10 00:00:00', 'Taucherstraße 10', 3642.5, NULL),
(10939, 'MAGAA', '1998-03-10 00:00:00', 'Via Ludovico il Moro 22', 750, NULL),
(10940, 'BONAP', '1998-03-11 00:00:00', '12, rue des Bouchers', 360, NULL),
(10941, 'SAVEA', '1998-03-11 00:00:00', '187 Suffolk Ln.', 3029, NULL),
(10942, 'REGGC', '1998-03-11 00:00:00', 'Strada Provinciale 124', 560, NULL),
(10943, 'BSBEV', '1998-03-11 00:00:00', 'Fauntleroy Circus', 711, NULL),
(10944, 'BOTTM', '1998-03-12 00:00:00', '23 Tsawassen Blvd.', 1034.1, NULL),
(10945, 'MORGK', '1998-03-12 00:00:00', 'Heerstr. 22', 245, NULL),
(10946, 'VAFFE', '1998-03-12 00:00:00', 'Smagsloget 45', 1407.5, NULL),
(10947, 'BSBEV', '1998-03-13 00:00:00', 'Fauntleroy Circus', 220, NULL),
(10948, 'GODOS', '1998-03-13 00:00:00', 'C/ Romero, 33', 2362.25, NULL),
(10949, 'BOTTM', '1998-03-13 00:00:00', '23 Tsawassen Blvd.', 4422, NULL),
(10950, 'MAGAA', '1998-03-16 00:00:00', 'Via Ludovico il Moro 22', 110, NULL),
(10951, 'RICSU', '1998-03-16 00:00:00', 'Starenweg 5', 482.9, NULL),
(10952, 'ALFKI', '1998-03-16 00:00:00', 'Obere Str. 57', 491.2, NULL),
(10953, 'AROUT', '1998-03-16 00:00:00', 'Brook Farm Stratford St. Mary', 4675, NULL),
(10954, 'LINOD', '1998-03-17 00:00:00', 'Ave. 5 de Mayo Porlamar', 1902.1, NULL),
(10955, 'FOLKO', '1998-03-17 00:00:00', 'Åkergatan 24', 93, NULL),
(10956, 'BLAUS', '1998-03-17 00:00:00', 'Forsterstr. 57', 677, NULL),
(10957, 'HILAA', '1998-03-18 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 1762.7, NULL),
(10958, 'OCEAN', '1998-03-18 00:00:00', 'Ing. Gustavo Moncada 8585 Piso 20-A', 180, NULL),
(10959, 'GOURL', '1998-03-18 00:00:00', 'Av. Brasil, 442', 155, NULL),
(10960, 'HILAA', '1998-03-19 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 276.6, NULL),
(10961, 'QUEEN', '1998-03-19 00:00:00', 'Alameda dos Canàrios, 891', 1122, NULL),
(10962, 'QUICK', '1998-03-19 00:00:00', 'Taucherstraße 10', 3584, NULL),
(10963, 'FURIB', '1998-03-19 00:00:00', 'Jardim das rosas n. 32', 68, NULL),
(10964, 'SPECD', '1998-03-20 00:00:00', '25, rue Lauriston', 2052.5, NULL),
(10965, 'OLDWO', '1998-03-20 00:00:00', '2743 Bering St.', 848, NULL),
(10966, 'CHOPS', '1998-03-20 00:00:00', 'Hauptstr. 31', 1255.6, NULL),
(10967, 'TOMSP', '1998-03-23 00:00:00', 'Luisenstr. 48', 910.4, NULL),
(10968, 'ERNSH', '1998-03-23 00:00:00', 'Kirchgasse 6', 1408, NULL),
(10969, 'COMMI', '1998-03-23 00:00:00', 'Av. dos Lusíadas, 23', 108, NULL),
(10970, 'BOLID', '1998-03-24 00:00:00', 'C/ Araquil, 67', 280, NULL),
(10971, 'FRANR', '1998-03-24 00:00:00', '54, rue Royale', 1733.06, NULL),
(10972, 'LACOR', '1998-03-24 00:00:00', '67, avenue de l\'Europe', 251.5, NULL),
(10973, 'LACOR', '1998-03-24 00:00:00', '67, avenue de l\'Europe', 291.55, NULL),
(10974, 'SPLIR', '1998-03-25 00:00:00', 'P.O. Box 555', 439, NULL),
(10975, 'BOTTM', '1998-03-25 00:00:00', '23 Tsawassen Blvd.', 717.5, NULL),
(10976, 'HILAA', '1998-03-25 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 912, NULL),
(10977, 'FOLKO', '1998-03-26 00:00:00', 'Åkergatan 24', 2233, NULL),
(10978, 'MAISD', '1998-03-26 00:00:00', 'Rue Joseph-Bens 532', 1500.7, NULL),
(10979, 'ERNSH', '1998-03-26 00:00:00', 'Kirchgasse 6', 4813.5, NULL),
(10980, 'FOLKO', '1998-03-27 00:00:00', 'Åkergatan 24', 310, NULL),
(10981, 'HANAR', '1998-03-27 00:00:00', 'Rua do Paço, 67', 15810, NULL),
(10982, 'BOTTM', '1998-03-27 00:00:00', '23 Tsawassen Blvd.', 1014, NULL),
(10983, 'SAVEA', '1998-03-27 00:00:00', '187 Suffolk Ln.', 796.5, NULL),
(10984, 'SAVEA', '1998-03-30 00:00:00', '187 Suffolk Ln.', 1809.75, NULL),
(10985, 'HUNGO', '1998-03-30 00:00:00', '8 Johnstown Road', 2248.2, NULL),
(10986, 'OCEAN', '1998-03-30 00:00:00', 'Ing. Gustavo Moncada 8585 Piso 20-A', 1590, NULL),
(10987, 'EASTC', '1998-03-31 00:00:00', '35 King George', 2076, NULL),
(10988, 'RATTC', '1998-03-31 00:00:00', '2817 Milton Dr.', 3772, NULL),
(10989, 'QUEDE', '1998-03-31 00:00:00', 'Rua da Panificadora, 12', 1038.6, NULL),
(10990, 'ERNSH', '1998-04-01 00:00:00', 'Kirchgasse 6', 4931, NULL),
(10991, 'QUICK', '1998-04-01 00:00:00', 'Taucherstraße 10', 2870, NULL),
(10992, 'THEBI', '1998-04-01 00:00:00', '89 Jefferson Way Suite 2', 0, NULL),
(10993, 'FOLKO', '1998-04-01 00:00:00', 'Åkergatan 24', 6527.25, NULL),
(10994, 'VAFFE', '1998-04-02 00:00:00', 'Smagsloget 45', 990, NULL),
(10995, 'PERIC', '1998-04-02 00:00:00', 'Calle Dr. Jorge Cash 321', 1196, NULL),
(10996, 'QUICK', '1998-04-02 00:00:00', 'Taucherstraße 10', 0, NULL),
(10997, 'LILAS', '1998-04-03 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 1980, NULL),
(10998, 'WOLZA', '1998-04-03 00:00:00', 'ul. Filtrowa 68', 686, NULL),
(10999, 'OTTIK', '1998-04-03 00:00:00', 'Mehrheimerstr. 369', 1261, NULL),
(11000, 'RATTC', '1998-04-06 00:00:00', '2817 Milton Dr.', 1075, NULL),
(11001, 'FOLKO', '1998-04-06 00:00:00', 'Åkergatan 24', 2769, NULL),
(11002, 'SAVEA', '1998-04-06 00:00:00', '187 Suffolk Ln.', 1566, NULL),
(11003, 'THECR', '1998-04-06 00:00:00', '55 Grizzly Peak Rd.', 326, NULL),
(11004, 'MAISD', '1998-04-07 00:00:00', 'Rue Joseph-Bens 532', 295.38, NULL),
(11005, 'WILMK', '1998-04-07 00:00:00', 'Keskuskatu 45', 586, NULL),
(11006, 'GREAL', '1998-04-07 00:00:00', '2732 Baker Blvd.', 391.58, NULL),
(11007, 'PRINI', '1998-04-08 00:00:00', 'Estrada da saúde n. 58', 2437.9, NULL),
(11008, 'ERNSH', '1998-04-08 00:00:00', 'Kirchgasse 6', 4903.5, NULL),
(11009, 'GODOS', '1998-04-08 00:00:00', 'C/ Romero, 33', 702, NULL),
(11010, 'REGGC', '1998-04-09 00:00:00', 'Strada Provinciale 124', 645, NULL),
(11011, 'ALFKI', '1998-04-09 00:00:00', 'Obere Str. 57', 960, NULL),
(11012, 'FRANK', '1998-04-09 00:00:00', 'Berliner Platz 43', 2974, NULL),
(11013, 'ROMEY', '1998-04-09 00:00:00', 'Gran Vía, 1', 305, NULL),
(11014, 'LINOD', '1998-04-10 00:00:00', 'Ave. 5 de Mayo Porlamar', 270.2, NULL),
(11015, 'SANTG', '1998-04-10 00:00:00', 'Erling Skakkes gate 78', 622.35, NULL),
(11016, 'AROUT', '1998-04-10 00:00:00', 'Brook Farm Stratford St. Mary', 491.5, NULL),
(11017, 'ERNSH', '1998-04-13 00:00:00', 'Kirchgasse 6', 6750, NULL),
(11018, 'LONEP', '1998-04-13 00:00:00', '89 Chiaroscuro Rd.', 1575, NULL),
(11019, 'RANCH', '1998-04-13 00:00:00', 'Av. del Libertador 900', 76, NULL),
(11020, 'OTTIK', '1998-04-14 00:00:00', 'Mehrheimerstr. 369', 744, NULL),
(11021, 'QUICK', '1998-04-14 00:00:00', 'Taucherstraße 10', 5723.49, NULL),
(11022, 'HANAR', '1998-04-14 00:00:00', 'Rua do Paço, 67', 1402, NULL),
(11023, 'BSBEV', '1998-04-14 00:00:00', 'Fauntleroy Circus', 1500, NULL),
(11024, 'EASTC', '1998-04-15 00:00:00', '35 King George', 1966.81, NULL),
(11025, 'WARTH', '1998-04-15 00:00:00', 'Torikatu 38', 300, NULL),
(11026, 'FRANS', '1998-04-15 00:00:00', 'Via Monte Bianco 34', 1030, NULL),
(11027, 'BOTTM', '1998-04-16 00:00:00', '23 Tsawassen Blvd.', 1170.3, NULL),
(11028, 'KOENE', '1998-04-16 00:00:00', 'Maubelstr. 90', 2160, NULL),
(11029, 'CHOPS', '1998-04-16 00:00:00', 'Hauptstr. 31', 1286.8, NULL),
(11030, 'SAVEA', '1998-04-17 00:00:00', '187 Suffolk Ln.', 14827.4, NULL),
(11031, 'SAVEA', '1998-04-17 00:00:00', '187 Suffolk Ln.', 2393.5, NULL),
(11032, 'WHITC', '1998-04-17 00:00:00', '1029 - 12th Ave. S.', 8902.5, NULL),
(11033, 'RICSU', '1998-04-17 00:00:00', 'Starenweg 5', 3592, NULL),
(11034, 'OLDWO', '1998-04-20 00:00:00', '2743 Bering St.', 554.4, NULL),
(11035, 'SUPRD', '1998-04-20 00:00:00', 'Boulevard Tirou, 255', 1334.5, NULL),
(11036, 'DRACD', '1998-04-20 00:00:00', 'Walserweg 21', 1692, NULL),
(11037, 'GODOS', '1998-04-21 00:00:00', 'C/ Romero, 33', 60, NULL),
(11038, 'SUPRD', '1998-04-21 00:00:00', 'Boulevard Tirou, 255', 751, NULL),
(11039, 'LINOD', '1998-04-21 00:00:00', 'Ave. 5 de Mayo Porlamar', 3090, NULL),
(11040, 'GREAL', '1998-04-22 00:00:00', '2732 Baker Blvd.', 200, NULL),
(11041, 'CHOPS', '1998-04-22 00:00:00', 'Hauptstr. 31', 1887, NULL),
(11042, 'COMMI', '1998-04-22 00:00:00', 'Av. dos Lusíadas, 23', 405.75, NULL),
(11043, 'SPECD', '1998-04-22 00:00:00', '25, rue Lauriston', 0, NULL),
(11044, 'WOLZA', '1998-04-23 00:00:00', 'ul. Filtrowa 68', 591.6, NULL),
(11045, 'BOTTM', '1998-04-23 00:00:00', '23 Tsawassen Blvd.', 1309.5, NULL),
(11046, 'WANDK', '1998-04-23 00:00:00', 'Adenauerallee 900', 1564, NULL),
(11047, 'EASTC', '1998-04-24 00:00:00', '35 King George', 450, NULL),
(11048, 'BOTTM', '1998-04-24 00:00:00', '23 Tsawassen Blvd.', 525, NULL),
(11049, 'GOURL', '1998-04-24 00:00:00', 'Av. Brasil, 442', 342, NULL),
(11050, 'FOLKO', '1998-04-27 00:00:00', 'Åkergatan 24', 900, NULL),
(11051, 'LAMAI', '1998-04-27 00:00:00', '1 rue Alsace-Lorraine', 45, NULL),
(11052, 'HANAR', '1998-04-27 00:00:00', 'Rua do Paço, 67', 1665, NULL),
(11053, 'PICCO', '1998-04-27 00:00:00', 'Geislweg 14', 3658.75, NULL),
(11054, 'CACTU', '1998-04-28 00:00:00', 'Cerrito 333', 305, NULL),
(11055, 'HILAA', '1998-04-28 00:00:00', 'Carrera 22 con Ave. Carlos Soublette #8-35', 1727.5, NULL),
(11056, 'EASTC', '1998-04-28 00:00:00', '35 King George', 3740, NULL),
(11057, 'NORTS', '1998-04-29 00:00:00', 'South House 300 Queensbridge', 45, NULL),
(11058, 'BLAUS', '1998-04-29 00:00:00', 'Forsterstr. 57', 858, NULL),
(11059, 'RICAR', '1998-04-29 00:00:00', 'Av. Copacabana, 267', 1838, NULL),
(11060, 'FRANS', '1998-04-30 00:00:00', 'Via Monte Bianco 34', 266, NULL),
(11061, 'GREAL', '1998-04-30 00:00:00', '2732 Baker Blvd.', 510, NULL),
(11062, 'REGGC', '1998-04-30 00:00:00', 'Strada Provinciale 124', 508, NULL),
(11063, 'HUNGO', '1998-04-30 00:00:00', '8 Johnstown Road', 1445.5, NULL),
(11064, 'SAVEA', '1998-05-01 00:00:00', '187 Suffolk Ln.', 4722.3, NULL),
(11065, 'LILAS', '1998-05-01 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 252.56, NULL),
(11066, 'WHITC', '1998-05-01 00:00:00', '1029 - 12th Ave. S.', 928.75, NULL),
(11067, 'DRACD', '1998-05-04 00:00:00', 'Walserweg 21', 86.85, NULL),
(11068, 'QUEEN', '1998-05-04 00:00:00', 'Alameda dos Canàrios, 891', 2384.8, NULL),
(11069, 'TORTU', '1998-05-04 00:00:00', 'Avda. Azteca 123', 360, NULL),
(11070, 'LEHMS', '1998-05-05 00:00:00', 'Magazinweg 7', 1873.5, NULL),
(11071, 'LILAS', '1998-05-05 00:00:00', 'Carrera 52 con Ave. Bolívar #65-98 Llano Largo', 510, NULL),
(11072, 'ERNSH', '1998-05-05 00:00:00', 'Kirchgasse 6', 5218, NULL),
(11073, 'PERIC', '1998-05-05 00:00:00', 'Calle Dr. Jorge Cash 321', 90, NULL),
(11074, 'SIMOB', '1998-05-06 00:00:00', 'Vinbæltet 34', 244.3, NULL),
(11075, 'RICSU', '1998-05-06 00:00:00', 'Starenweg 5', 586, NULL),
(11076, 'BONAP', '1998-05-06 00:00:00', '12, rue des Bouchers', 1057, NULL),
(11077, 'RATTC', '1998-05-06 00:00:00', '2817 Milton Dr.', 1374.6, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `products`
--

CREATE TABLE `products` (
  `Id` int(11) NOT NULL,
  `Name` varchar(60) COLLATE utf8_bin NOT NULL,
  `UnitPrice` float NOT NULL,
  `Image` varchar(50) COLLATE utf8_bin NOT NULL,
  `ProductDate` date NOT NULL,
  `Available` bit(1) NOT NULL,
  `CategoryId` int(11) NOT NULL,
  `Quantity` int(11) NOT NULL,
  `Description` varchar(2000) COLLATE utf8_bin DEFAULT NULL,
  `Discount` float NOT NULL,
  `ViewCount` int(11) NOT NULL,
  `Special` bit(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Dumping data for table `products`
--

INSERT INTO `products` (`Id`, `Name`, `UnitPrice`, `Image`, `ProductDate`, `Available`, `CategoryId`, `Quantity`, `Description`, `Discount`, `ViewCount`, `Special`) VALUES
(1001, 'Aniseed Syrup Star', 190, '1001.jpg', '1980-03-29', b'1', 1000, 190, 'JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1002, 'Change', 19, '1002.jpg', '1982-12-18', b'1', 1000, 19, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 14, b'0'),
(1003, 'Aniseed Syrup', 10, '1003.jpg', '1973-06-14', b'1', 1001, 10, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 3, b'0'),
(1004, 'Chef Anton\'s Cajun Seasoning', 22, '1004.jpg', '1976-03-10', b'1', 1001, 22, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 12, b'0'),
(1005, 'Chef Anton\'s Gumbo Mix', 21.35, '1005.jpg', '1978-12-06', b'1', 1002, 21, '', 0, 4, b'1'),
(1006, 'Grandma\'s Boysenberry Spread', 25, '1006.jpg', '1981-09-03', b'1', 1001, 25, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 7, b'0'),
(1007, 'Uncle Bob\'s Organic Dried Pears', 30, '1007.jpg', '1983-03-13', b'1', 1006, 30, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 5, b'0'),
(1008, 'Northwoods Cranberry Sauce', 40, '1008.jpg', '1972-02-26', b'0', 1001, 40, NULL, 0, 6, b'0'),
(1009, 'Mishi Kobe Niku', 97, '1009.jpg', '1985-12-10', b'1', 1005, 97, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 7, b'1'),
(1010, 'Ikura', 31, '1010.jpg', '1994-03-23', b'1', 1007, 31, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0.1, 20, b'0'),
(1011, 'Queso Cabrales', 21, '1011.jpg', '1985-11-28', b'1', 1003, 21, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1012, 'Queso Manchego La Pastora', 38, '1012.jpg', '1988-08-27', b'1', 1003, 38, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 35, b'0'),
(1013, 'Konbu', 6, '1013.jpg', '2002-07-01', b'1', 1007, 6, NULL, 0, 2, b'1'),
(1014, 'Tofu', 23.25, '1014.jpg', '2002-06-24', b'1', 1006, 23, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1015, 'Genen Shouyu', 15.5, '1015.jpg', '1991-05-04', b'1', 1001, 15, NULL, 0, 0, b'0'),
(1016, 'Pavlova', 17.45, '1016.jpg', '1996-11-09', b'1', 1002, 17, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 7, b'0'),
(1017, 'Alice Mutton', 39, '1017.jpg', '2007-12-15', b'1', 1005, 39, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 3, b'0'),
(1018, 'Carnarvon Tigers', 62.5, '1018.jpg', '2011-04-13', b'1', 1007, 62, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1019, 'Teatime Chocolate Biscuits', 9.2, '1019.jpg', '2005-02-02', b'1', 1002, 9, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'1'),
(1020, 'Sir Rodney\'s Marmalade', 81, '1020.jpg', '2007-11-01', b'1', 1002, 81, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0.05, 2, b'0'),
(1021, 'Sir Rodney\'s Scones', 10, '1021.jpg', '2010-07-29', b'1', 1002, 10, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'0'),
(1022, 'Gustaf flower', 21, '1022.jpg', '2008-12-01', b'1', 1004, 21, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1023, 'Tunnbr Korea', 9, '1023.jpg', '2011-08-31', b'1', 1004, 9, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 4, b'0'),
(1024, 'Guarana¡ Fanta¡stica', 4.5, '1024.jpg', '2008-03-13', b'0', 1000, 4, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 9, b'0'),
(1025, 'NuNuCa Nuaa?-Nougat-Creme', 14, '1025.jpg', '2011-07-20', b'1', 1002, 14, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1026, 'Gumbar Gummibarchen', 31.23, '1026.jpg', '2009-04-17', b'1', 1002, 31, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1027, 'Schoggi Schokolade', 43.9, '1027.jpg', '2007-01-14', b'1', 1002, 43, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1028, 'Russle Sauerkraut', 45.6, '1028.jpg', '2011-01-14', b'1', 1006, 45, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1029, 'Tharinger Rostbratwurst', 123.79, '1029.jpg', '2010-12-21', b'1', 1005, 123, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1030, 'Nord-Ost Matjeshering', 25.89, '1030.jpg', '2011-05-14', b'1', 1007, 25, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0.2, 1, b'0'),
(1031, 'Gorgonzola Telino', 12.5, '1031.jpg', '2010-10-30', b'0', 1003, 12, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1032, 'Mascarpone Fabioli', 32, '1032.jpg', '2011-07-30', b'0', 1003, 32, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1033, 'Geitost', 2.5, '1033.png', '2010-04-29', b'1', 1003, 2, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1034, 'Sasquatch Ale', 14, '1034.jpg', '2010-07-30', b'1', 1000, 14, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0.1, 5, b'0'),
(1035, 'Steeleye Stout', 18, '1035.jpg', '2011-04-25', b'1', 1000, 18, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1036, 'Inlagd Sill', 19, '1036.jpg', '1980-11-28', b'1', 1007, 19, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 4, b'1'),
(1037, 'Gravad lax', 26, '1037.jpg', '1983-08-31', b'1', 1007, 26, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1038, 'Cate de Blaye', 263.5, '1038.jpg', '1981-07-12', b'1', 1000, 263, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'0'),
(1039, 'Chartreuse verte', 18, '1039.jpg', '1984-04-08', b'1', 1000, 18, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1040, 'Boston Crab Meat', 18.4, '1040.jpg', '1976-12-08', b'1', 1007, 18, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1041, 'Jack\'s New England Clam Chowder', 9.65, '1041.jpg', '1979-09-10', b'1', 1007, 9, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1042, 'Singaporean Hokkien Fried Mee', 14, '1042.jpg', '1973-11-21', b'1', 1004, 14, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1043, 'Ipoh Coffee', 46, '1043.jpg', '1980-03-20', b'1', 1000, 46, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1044, 'Gula Malacca', 19.45, '1044.jpg', '1970-10-25', b'1', 1001, 19, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'0'),
(1045, 'Rogede sild', 9.5, '1045.jpg', '1990-09-21', b'1', 1007, 9, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 7, b'0'),
(1046, 'Spegesild', 12, '1046.jpg', '1993-06-23', b'0', 1007, 12, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1047, 'Zaanse koeken', 9.5, '1047.jpg', '1981-11-25', b'1', 1002, 9, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1048, 'Chocolade', 12.75, '1048.jpg', '1984-08-24', b'0', 1002, 12, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1049, 'Maxilaku', 20, '1049.jpg', '1987-05-23', b'0', 1002, 20, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1050, 'Valkoinen suklaa', 16.25, '1050.jpg', '1990-02-17', b'0', 1002, 16, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'0'),
(1051, 'Manjimup Dried Apples', 53, '1051.jpg', '2004-05-22', b'1', 1006, 53, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'0'),
(1052, 'Filo Mix', 7, '1052.jpg', '2001-05-20', b'1', 1004, 7, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1053, 'Perth Pasties', 32.8, '1053.jpg', '2007-01-06', b'0', 1005, 32, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1054, 'Tourtiare', 7.45, '1054.jpg', '2009-10-07', b'1', 1005, 7, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1055, 'Pacta chinois', 24, '1055.jpg', '2007-07-08', b'0', 1005, 24, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1056, 'Gnocchi di nonna Alice', 38, '1056.jpg', '2007-05-18', b'1', 1004, 38, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1057, 'Ravioli Angelo', 19.5, '1057.jpg', '2010-02-16', b'1', 1004, 19, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1058, 'Escargots de Bourgogne', 13.25, '1058.jpg', '2011-07-26', b'1', 1007, 13, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1059, 'Raclette Courdavault', 55, '1059.jpg', '2007-09-22', b'1', 1003, 55, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'0'),
(1060, 'Camembert Pierrot', 34, '1060.jpg', '2010-06-20', b'1', 1003, 34, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1061, 'Sirop d\'aOrable', 28.5, '1061.jpg', '2007-05-29', b'0', 1001, 28, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 9, b'0'),
(1062, 'Tarte au sucre', 49.3, '1062.jpg', '2008-01-21', b'1', 1002, 49, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1063, 'Vegie-spread', 43.9, '1063.jpg', '2007-11-21', b'1', 1001, 43, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1064, 'Wimmers gute Semmelknadel', 33.25, '1064.jpg', '2009-05-15', b'1', 1004, 33, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1065, 'Louisiana Fiery Hot Pepper Sauce', 21.05, '1065.jpg', '2008-05-15', b'1', 1001, 21, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1066, 'Louisiana Hot Spiced Okra', 17, '1066.jpg', '2011-02-10', b'1', 1001, 17, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1067, 'Laughing Lumberjack Lager', 14, '1067.jpg', '2010-12-05', b'1', 1000, 14, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1068, 'Scottish Longbreads', 12.5, '1068.jpg', '2009-07-08', b'0', 1002, 12, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1069, 'Gudbrandsdalsost', 36, '1069.jpg', '2011-03-09', b'0', 1003, 36, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1070, 'Outback Lager', 15, '1070.jpg', '2009-02-21', b'1', 1000, 15, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1071, 'Flotemysost', 21.5, '1071.jpg', '1980-09-04', b'1', 1003, 21, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1072, 'Mozzarella di Giovanni', 34.8, '1072.jpg', '1983-06-03', b'1', 1003, 34, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1073, 'Rad Kaviar', 15, '1073.jpg', '1982-12-03', b'1', 1007, 15, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1074, 'Longlife Tofu', 10, '1074.jpg', '1982-09-27', b'1', 1006, 10, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 2, b'0'),
(1075, 'RhanbrAu Klosterbier', 7.75, '1075.jpg', '1982-10-31', b'1', 1000, 7, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1076, 'Lakkalik AAri', 18, '1076.jpg', '1970-07-28', b'1', 1000, 18, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 1, b'0'),
(1077, 'Original Frankfurter grane Soa?e', 13, '1077.gif', '1976-04-04', b'1', 1001, 13, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1081, 'Chai', 19, '1081.jpg', '1984-04-04', b'1', 1000, 19, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0'),
(1083, 'Mishi Kobe Niku', 97, '1083.jpg', '1989-07-23', b'1', 1005, 97, 'EmEditor uses JavaScript or VBScript for its macro language, so those who are familiar with HTML or Windows scripting will be able to write macros with little difficulty. For those unfamiliar with scripting languages, EmEditor can record keystrokes, which can then be saved in a macro file that can easily be loaded in different situations. With the use of JavaScript or VBScript, you can also troubleshoot your code easily. For example, in JavaScript, you can use the following statement to troubleshoot errors', 0, 0, b'0');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`Id`);

--
-- Indexes for table `customers`
--
ALTER TABLE `customers`
  ADD PRIMARY KEY (`Id`);

--
-- Indexes for table `orderdetails`
--
ALTER TABLE `orderdetails`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `ProductId` (`ProductId`),
  ADD KEY `OrderId` (`OrderId`);

--
-- Indexes for table `orders`
--
ALTER TABLE `orders`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `CustomerId` (`CustomerId`);

--
-- Indexes for table `products`
--
ALTER TABLE `products`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `CategoryId` (`CategoryId`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `categories`
--
ALTER TABLE `categories`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1008;

--
-- AUTO_INCREMENT for table `orderdetails`
--
ALTER TABLE `orderdetails`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=102317;

--
-- AUTO_INCREMENT for table `orders`
--
ALTER TABLE `orders`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11078;

--
-- AUTO_INCREMENT for table `products`
--
ALTER TABLE `products`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1084;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `orderdetails`
--
ALTER TABLE `orderdetails`
  ADD CONSTRAINT `orderdetails_ibfk_1` FOREIGN KEY (`ProductId`) REFERENCES `products` (`Id`),
  ADD CONSTRAINT `orderdetails_ibfk_2` FOREIGN KEY (`OrderId`) REFERENCES `orders` (`Id`) ON DELETE CASCADE;

--
-- Constraints for table `orders`
--
ALTER TABLE `orders`
  ADD CONSTRAINT `orders_ibfk_1` FOREIGN KEY (`CustomerId`) REFERENCES `customers` (`Id`) ON UPDATE CASCADE;

--
-- Constraints for table `products`
--
ALTER TABLE `products`
  ADD CONSTRAINT `products_ibfk_1` FOREIGN KEY (`CategoryId`) REFERENCES `categories` (`Id`) ON DELETE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
